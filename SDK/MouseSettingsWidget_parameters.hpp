#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MouseSettingsWidget

#include "Basic.hpp"

#include "TslGame_structs.hpp"


namespace SDK::Params
{

// Function MouseSettingsWidget.MouseSettingsWidget_C.ExecuteUbergraph_MouseSettingsWidget
// 0x0030 (0x0030 - 0x0000)
struct MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInvertMouse_ReturnValue;                // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQualitySliderWidget_C*                 CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChekced_bChecked;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueByRange_Value;                    // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget) == 0x000008, "Wrong alignment on MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget");
static_assert(sizeof(MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget) == 0x000030, "Wrong size on MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget");
static_assert(offsetof(MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget, EntryPoint) == 0x000000, "Member 'MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget, m__int_Array_Index_Variable) == 0x000004, "Member 'MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget, m__int_Loop_Counter_Variable) == 0x000008, "Member 'MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget, CallFunc_IsInvertMouse_ReturnValue) == 0x000010, "Member 'MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget::CallFunc_IsInvertMouse_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget, CallFunc_Array_Get_Item) == 0x000018, "Member 'MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget, CallFunc_IsChekced_bChecked) == 0x000020, "Member 'MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget::CallFunc_IsChekced_bChecked' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget, CallFunc_GetValueByRange_Value) == 0x000024, "Member 'MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget::CallFunc_GetValueByRange_Value' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'MouseSettingsWidget_C_ExecuteUbergraph_MouseSettingsWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function MouseSettingsWidget.MouseSettingsWidget_C.initailizeMouseSettingsWidget
// 0x0078 (0x0078 - 0x0000)
struct MouseSettingsWidget_C_initailizeMouseSettingsWidget final
{
public:
	bool                                          bIsDefaultSetting;                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UQualitySliderWidget_C*                 CallFunc_Create_ReturnValue;                       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Array_Index_Variable;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FCustomizableMouseSensitiveName> CallFunc_CustomizableMouseSensitiveNames_ReturnValue; // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	struct FCustomizableMouseSensitiveName        CallFunc_Array_Get_Item;                           // 0x0030(0x0028)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetMouseSensitivity_ReturnValue;          // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UQualitySliderWidget_C*                 KeyBorder;                                         // 0x0070(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MouseSettingsWidget_C_initailizeMouseSettingsWidget) == 0x000008, "Wrong alignment on MouseSettingsWidget_C_initailizeMouseSettingsWidget");
static_assert(sizeof(MouseSettingsWidget_C_initailizeMouseSettingsWidget) == 0x000078, "Wrong size on MouseSettingsWidget_C_initailizeMouseSettingsWidget");
static_assert(offsetof(MouseSettingsWidget_C_initailizeMouseSettingsWidget, bIsDefaultSetting) == 0x000000, "Member 'MouseSettingsWidget_C_initailizeMouseSettingsWidget::bIsDefaultSetting' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_initailizeMouseSettingsWidget, CallFunc_Create_ReturnValue) == 0x000008, "Member 'MouseSettingsWidget_C_initailizeMouseSettingsWidget::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_initailizeMouseSettingsWidget, m__int_Array_Index_Variable) == 0x000010, "Member 'MouseSettingsWidget_C_initailizeMouseSettingsWidget::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_initailizeMouseSettingsWidget, m__int_Loop_Counter_Variable) == 0x000014, "Member 'MouseSettingsWidget_C_initailizeMouseSettingsWidget::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_initailizeMouseSettingsWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'MouseSettingsWidget_C_initailizeMouseSettingsWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_initailizeMouseSettingsWidget, CallFunc_CustomizableMouseSensitiveNames_ReturnValue) == 0x000020, "Member 'MouseSettingsWidget_C_initailizeMouseSettingsWidget::CallFunc_CustomizableMouseSensitiveNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_initailizeMouseSettingsWidget, CallFunc_Array_Get_Item) == 0x000030, "Member 'MouseSettingsWidget_C_initailizeMouseSettingsWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_initailizeMouseSettingsWidget, CallFunc_Array_Length_ReturnValue) == 0x000058, "Member 'MouseSettingsWidget_C_initailizeMouseSettingsWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_initailizeMouseSettingsWidget, CallFunc_Less_IntInt_ReturnValue) == 0x00005C, "Member 'MouseSettingsWidget_C_initailizeMouseSettingsWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_initailizeMouseSettingsWidget, CallFunc_GetMouseSensitivity_ReturnValue) == 0x000060, "Member 'MouseSettingsWidget_C_initailizeMouseSettingsWidget::CallFunc_GetMouseSensitivity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_initailizeMouseSettingsWidget, CallFunc_Array_Add_ReturnValue) == 0x000064, "Member 'MouseSettingsWidget_C_initailizeMouseSettingsWidget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_initailizeMouseSettingsWidget, CallFunc_AddChild_ReturnValue) == 0x000068, "Member 'MouseSettingsWidget_C_initailizeMouseSettingsWidget::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_initailizeMouseSettingsWidget, KeyBorder) == 0x000070, "Member 'MouseSettingsWidget_C_initailizeMouseSettingsWidget::KeyBorder' has a wrong offset!");

// Function MouseSettingsWidget.MouseSettingsWidget_C.IsChanged
// 0x0038 (0x0038 - 0x0000)
struct MouseSettingsWidget_C_IsChanged final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          m__bool_True_if_break_was_hit_Variable;            // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3[0x1];                                        // 0x0003(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UQualitySliderWidget_C*                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInvertMouse_ReturnValue;                // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueByRange_Value;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetMouseSensitivity_ReturnValue;          // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChekced_bChecked;                       // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsChangeSensitivity;                              // 0x0035(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MouseSettingsWidget_C_IsChanged) == 0x000008, "Wrong alignment on MouseSettingsWidget_C_IsChanged");
static_assert(sizeof(MouseSettingsWidget_C_IsChanged) == 0x000038, "Wrong size on MouseSettingsWidget_C_IsChanged");
static_assert(offsetof(MouseSettingsWidget_C_IsChanged, ReturnValue) == 0x000000, "Member 'MouseSettingsWidget_C_IsChanged::ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_IsChanged, m__bool_True_if_break_was_hit_Variable) == 0x000001, "Member 'MouseSettingsWidget_C_IsChanged::m__bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_IsChanged, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'MouseSettingsWidget_C_IsChanged::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_IsChanged, m__int_Array_Index_Variable) == 0x000004, "Member 'MouseSettingsWidget_C_IsChanged::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_IsChanged, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'MouseSettingsWidget_C_IsChanged::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_IsChanged, CallFunc_Array_Get_Item) == 0x000010, "Member 'MouseSettingsWidget_C_IsChanged::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_IsChanged, CallFunc_IsInvertMouse_ReturnValue) == 0x000018, "Member 'MouseSettingsWidget_C_IsChanged::CallFunc_IsInvertMouse_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_IsChanged, CallFunc_GetValueByRange_Value) == 0x00001C, "Member 'MouseSettingsWidget_C_IsChanged::CallFunc_GetValueByRange_Value' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_IsChanged, CallFunc_GetMouseSensitivity_ReturnValue) == 0x000020, "Member 'MouseSettingsWidget_C_IsChanged::CallFunc_GetMouseSensitivity_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_IsChanged, CallFunc_IsChekced_bChecked) == 0x000024, "Member 'MouseSettingsWidget_C_IsChanged::CallFunc_IsChekced_bChecked' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_IsChanged, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000025, "Member 'MouseSettingsWidget_C_IsChanged::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_IsChanged, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000026, "Member 'MouseSettingsWidget_C_IsChanged::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_IsChanged, CallFunc_BooleanOR_ReturnValue) == 0x000027, "Member 'MouseSettingsWidget_C_IsChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_IsChanged, m__int_Loop_Counter_Variable) == 0x000028, "Member 'MouseSettingsWidget_C_IsChanged::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_IsChanged, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'MouseSettingsWidget_C_IsChanged::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_IsChanged, CallFunc_Add_IntInt_ReturnValue) == 0x000030, "Member 'MouseSettingsWidget_C_IsChanged::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_IsChanged, CallFunc_BooleanAND_ReturnValue) == 0x000034, "Member 'MouseSettingsWidget_C_IsChanged::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_IsChanged, bIsChangeSensitivity) == 0x000035, "Member 'MouseSettingsWidget_C_IsChanged::bIsChangeSensitivity' has a wrong offset!");

// Function MouseSettingsWidget.MouseSettingsWidget_C.IsEnableApply
// 0x0002 (0x0002 - 0x0000)
struct MouseSettingsWidget_C_IsEnableApply final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChanged_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(MouseSettingsWidget_C_IsEnableApply) == 0x000001, "Wrong alignment on MouseSettingsWidget_C_IsEnableApply");
static_assert(sizeof(MouseSettingsWidget_C_IsEnableApply) == 0x000002, "Wrong size on MouseSettingsWidget_C_IsEnableApply");
static_assert(offsetof(MouseSettingsWidget_C_IsEnableApply, ReturnValue) == 0x000000, "Member 'MouseSettingsWidget_C_IsEnableApply::ReturnValue' has a wrong offset!");
static_assert(offsetof(MouseSettingsWidget_C_IsEnableApply, CallFunc_IsChanged_ReturnValue) == 0x000001, "Member 'MouseSettingsWidget_C_IsEnableApply::CallFunc_IsChanged_ReturnValue' has a wrong offset!");

}

