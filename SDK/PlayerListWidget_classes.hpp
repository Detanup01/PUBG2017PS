#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerListWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TslGame_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PlayerListWidget.PlayerListWidget_C
// 0x00B0 (0x0310 - 0x0260)
class UPlayerListWidget_C final : public UTslUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0260(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCheckBox*                              DeadPlayerIncludeCheckBox;                         // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UDistanceSliderWidget_C*                DistanceSliderWidget;                              // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UScrollBox*                             List;                                              // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	float                                         Distance;                                          // 0x0280(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_284[0x4];                                      // 0x0284(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ATslCharacter*>                  RefreshedPlayerLIst;                               // 0x0288(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance)
	float                                         TimeCheck;                                         // 0x0298(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         RefeshInterval;                                    // 0x029C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	TArray<class UPlayerInfoWidget_C*>            PlayerInfoWidgetList;                              // 0x02A0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	int32                                         Count;                                             // 0x02B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B4[0x4];                                      // 0x02B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           UpdateCheckTimer;                                  // 0x02B8(0x0008)(Edit, BlueprintVisible, DisableEditOnInstance)
	TArray<int32>                                 GroupKey;                                          // 0x02C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	TArray<class UPlayerGroupWidget_C*>           GroupWidgetList;                                   // 0x02D0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)
	class UPlayerInfoWidget_C*                    PlayerInfoTemp;                                    // 0x02E0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UPlayerGroupWidget_C*                   PlayerGroupTemp;                                   // 0x02E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                CurrentSpectatorPawnLocation;                      // 0x02F0(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         DistanceValue;                                     // 0x02FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bMouseDown;                                        // 0x0300(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_301[0x3];                                      // 0x0301(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              MouseDownPosition;                                 // 0x0304(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_PlayerListWidget(int32 EntryPoint);
	void Destruct();
	void Custom_Event_1();
	void Custom_Event_0();
	void OnLookUp(float Scale);
	void OnTurn(float Scale);
	void CheckChangeTimer();
	void BndEvt__DistanceSliderWidget_K2Node_ComponentBoundEvent_81_ChagedDistance__DelegateSignature(float NewDistance, float Value);
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void Construct();
	void OnGotoTimelineDone_PlayerList();
	void RefreshList();
	class UPlayerInfoWidget_C* CreateOrUpdatePlayerInfo(int32 IndexToTest, class ATslCharacter* Character);
	void CheckUpdate();
	void UpdatePlayerList(float InputPin);
	struct FEventReply OnPreviewKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void InitForReplay();

	void GetPlayersInDistance(TArray<class ATslCharacter*>* PlayerList) const;
	void IsIncludeDyingPlayer(bool* NewParam) const;
	void CheckChangeList(bool* bChange) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerListWidget_C">();
	}
	static class UPlayerListWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerListWidget_C>();
	}
};
static_assert(alignof(UPlayerListWidget_C) == 0x000008, "Wrong alignment on UPlayerListWidget_C");
static_assert(sizeof(UPlayerListWidget_C) == 0x000310, "Wrong size on UPlayerListWidget_C");
static_assert(offsetof(UPlayerListWidget_C, UberGraphFrame) == 0x000260, "Member 'UPlayerListWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayerListWidget_C, DeadPlayerIncludeCheckBox) == 0x000268, "Member 'UPlayerListWidget_C::DeadPlayerIncludeCheckBox' has a wrong offset!");
static_assert(offsetof(UPlayerListWidget_C, DistanceSliderWidget) == 0x000270, "Member 'UPlayerListWidget_C::DistanceSliderWidget' has a wrong offset!");
static_assert(offsetof(UPlayerListWidget_C, List) == 0x000278, "Member 'UPlayerListWidget_C::List' has a wrong offset!");
static_assert(offsetof(UPlayerListWidget_C, Distance) == 0x000280, "Member 'UPlayerListWidget_C::Distance' has a wrong offset!");
static_assert(offsetof(UPlayerListWidget_C, RefreshedPlayerLIst) == 0x000288, "Member 'UPlayerListWidget_C::RefreshedPlayerLIst' has a wrong offset!");
static_assert(offsetof(UPlayerListWidget_C, TimeCheck) == 0x000298, "Member 'UPlayerListWidget_C::TimeCheck' has a wrong offset!");
static_assert(offsetof(UPlayerListWidget_C, RefeshInterval) == 0x00029C, "Member 'UPlayerListWidget_C::RefeshInterval' has a wrong offset!");
static_assert(offsetof(UPlayerListWidget_C, PlayerInfoWidgetList) == 0x0002A0, "Member 'UPlayerListWidget_C::PlayerInfoWidgetList' has a wrong offset!");
static_assert(offsetof(UPlayerListWidget_C, Count) == 0x0002B0, "Member 'UPlayerListWidget_C::Count' has a wrong offset!");
static_assert(offsetof(UPlayerListWidget_C, UpdateCheckTimer) == 0x0002B8, "Member 'UPlayerListWidget_C::UpdateCheckTimer' has a wrong offset!");
static_assert(offsetof(UPlayerListWidget_C, GroupKey) == 0x0002C0, "Member 'UPlayerListWidget_C::GroupKey' has a wrong offset!");
static_assert(offsetof(UPlayerListWidget_C, GroupWidgetList) == 0x0002D0, "Member 'UPlayerListWidget_C::GroupWidgetList' has a wrong offset!");
static_assert(offsetof(UPlayerListWidget_C, PlayerInfoTemp) == 0x0002E0, "Member 'UPlayerListWidget_C::PlayerInfoTemp' has a wrong offset!");
static_assert(offsetof(UPlayerListWidget_C, PlayerGroupTemp) == 0x0002E8, "Member 'UPlayerListWidget_C::PlayerGroupTemp' has a wrong offset!");
static_assert(offsetof(UPlayerListWidget_C, CurrentSpectatorPawnLocation) == 0x0002F0, "Member 'UPlayerListWidget_C::CurrentSpectatorPawnLocation' has a wrong offset!");
static_assert(offsetof(UPlayerListWidget_C, DistanceValue) == 0x0002FC, "Member 'UPlayerListWidget_C::DistanceValue' has a wrong offset!");
static_assert(offsetof(UPlayerListWidget_C, bMouseDown) == 0x000300, "Member 'UPlayerListWidget_C::bMouseDown' has a wrong offset!");
static_assert(offsetof(UPlayerListWidget_C, MouseDownPosition) == 0x000304, "Member 'UPlayerListWidget_C::MouseDownPosition' has a wrong offset!");

}

