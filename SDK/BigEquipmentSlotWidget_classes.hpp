#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BigEquipmentSlotWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "InventorySlotBaseWidget_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass BigEquipmentSlotWidget.BigEquipmentSlotWidget_C
// 0x0060 (0x0350 - 0x02F0)
class UBigEquipmentSlotWidget_C final : public UInventorySlotBaseWidget_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_BigEquipmentSlotWidget_C;           // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBorder*                                Background;                                        // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 DurabilityGauge;                                   // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 DurabilityIcon;                                    // 0x0308(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             DurationNumber;                                    // 0x0310(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 FocusColorBG;                                      // 0x0318(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UEquipableItem*                         EquipableItem;                                     // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               SlotBackgroundMaterial;                            // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UItem*                                  DragDroppingItem;                                  // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UEquipableItem*                         DragDroppingEquipableItem;                         // 0x0338(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               DurabilityMaterial;                                // 0x0340(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSmallSlot;                                        // 0x0348(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bWnatFocus;                                        // 0x0349(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BigEquipmentSlotWidget(int32 EntryPoint);
	void Construct();
	void OnUpdateItem(class UItem* Item_0);
	class FText GetSlotName();
	void OnDragDetected(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation);
	void GetDurabilityPercent(float* DurabilityPercent);
	void HaveDurability(bool* Result);
	struct FEventReply OnPreviewMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void UpdateDurabilityVisibility(class UWidget* BoundWidget);
	void UpdateDurabilityGauge(class UWidget* BoundWidget);
	void UpdateDurationNumber(class UWidget* BoundWidget);
	void GetDurability(float* Durability);
	void GetItem_Bp(class UItem** Item_0);
	void On_FocusColorBG_Prepass_0(class UWidget* BoundWidget);
	bool SetFocus(bool NewFocus);
	void GetSlotContainer(TScriptInterface<class ISlotContainerInterface>* SlotContainer);
	void GetSlotItem(TScriptInterface<class ISlotInterface>* SlotItem);

	bool IsFocus() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BigEquipmentSlotWidget_C">();
	}
	static class UBigEquipmentSlotWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UBigEquipmentSlotWidget_C>();
	}
};
static_assert(alignof(UBigEquipmentSlotWidget_C) == 0x000008, "Wrong alignment on UBigEquipmentSlotWidget_C");
static_assert(sizeof(UBigEquipmentSlotWidget_C) == 0x000350, "Wrong size on UBigEquipmentSlotWidget_C");
static_assert(offsetof(UBigEquipmentSlotWidget_C, UberGraphFrame_BigEquipmentSlotWidget_C) == 0x0002F0, "Member 'UBigEquipmentSlotWidget_C::UberGraphFrame_BigEquipmentSlotWidget_C' has a wrong offset!");
static_assert(offsetof(UBigEquipmentSlotWidget_C, Background) == 0x0002F8, "Member 'UBigEquipmentSlotWidget_C::Background' has a wrong offset!");
static_assert(offsetof(UBigEquipmentSlotWidget_C, DurabilityGauge) == 0x000300, "Member 'UBigEquipmentSlotWidget_C::DurabilityGauge' has a wrong offset!");
static_assert(offsetof(UBigEquipmentSlotWidget_C, DurabilityIcon) == 0x000308, "Member 'UBigEquipmentSlotWidget_C::DurabilityIcon' has a wrong offset!");
static_assert(offsetof(UBigEquipmentSlotWidget_C, DurationNumber) == 0x000310, "Member 'UBigEquipmentSlotWidget_C::DurationNumber' has a wrong offset!");
static_assert(offsetof(UBigEquipmentSlotWidget_C, FocusColorBG) == 0x000318, "Member 'UBigEquipmentSlotWidget_C::FocusColorBG' has a wrong offset!");
static_assert(offsetof(UBigEquipmentSlotWidget_C, EquipableItem) == 0x000320, "Member 'UBigEquipmentSlotWidget_C::EquipableItem' has a wrong offset!");
static_assert(offsetof(UBigEquipmentSlotWidget_C, SlotBackgroundMaterial) == 0x000328, "Member 'UBigEquipmentSlotWidget_C::SlotBackgroundMaterial' has a wrong offset!");
static_assert(offsetof(UBigEquipmentSlotWidget_C, DragDroppingItem) == 0x000330, "Member 'UBigEquipmentSlotWidget_C::DragDroppingItem' has a wrong offset!");
static_assert(offsetof(UBigEquipmentSlotWidget_C, DragDroppingEquipableItem) == 0x000338, "Member 'UBigEquipmentSlotWidget_C::DragDroppingEquipableItem' has a wrong offset!");
static_assert(offsetof(UBigEquipmentSlotWidget_C, DurabilityMaterial) == 0x000340, "Member 'UBigEquipmentSlotWidget_C::DurabilityMaterial' has a wrong offset!");
static_assert(offsetof(UBigEquipmentSlotWidget_C, bSmallSlot) == 0x000348, "Member 'UBigEquipmentSlotWidget_C::bSmallSlot' has a wrong offset!");
static_assert(offsetof(UBigEquipmentSlotWidget_C, bWnatFocus) == 0x000349, "Member 'UBigEquipmentSlotWidget_C::bWnatFocus' has a wrong offset!");

}

