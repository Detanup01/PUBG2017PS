#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ScreenSettingWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TslGame_structs.hpp"


namespace SDK::Params
{

// Function ScreenSettingWidget.ScreenSettingWidget_C.ExecuteUbergraph_ScreenSettingWidget
// 0x0020 (0x0020 - 0x0000)
struct ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FScreenResolution                      CallFunc_GetSelectedResolution_SelectedResolution; // 0x0004(0x0008)()
	EWindowMode                                   CallFunc_GetSelectedFullScreenMode_FullScreenMode; // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFpsCameraFov_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetGamma_ReturnValue;                     // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetValueByRange_Value;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetValueByRange_Value2;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget) == 0x000004, "Wrong alignment on ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget");
static_assert(sizeof(ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget) == 0x000020, "Wrong size on ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget");
static_assert(offsetof(ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget, EntryPoint) == 0x000000, "Member 'ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget, CallFunc_GetSelectedResolution_SelectedResolution) == 0x000004, "Member 'ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget::CallFunc_GetSelectedResolution_SelectedResolution' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget, CallFunc_GetSelectedFullScreenMode_FullScreenMode) == 0x00000C, "Member 'ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget::CallFunc_GetSelectedFullScreenMode_FullScreenMode' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget, CallFunc_GetFpsCameraFov_ReturnValue) == 0x000010, "Member 'ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget::CallFunc_GetFpsCameraFov_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget, CallFunc_GetGamma_ReturnValue) == 0x000014, "Member 'ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget::CallFunc_GetGamma_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget, CallFunc_GetValueByRange_Value) == 0x000018, "Member 'ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget::CallFunc_GetValueByRange_Value' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget, CallFunc_GetValueByRange_Value2) == 0x00001C, "Member 'ScreenSettingWidget_C_ExecuteUbergraph_ScreenSettingWidget::CallFunc_GetValueByRange_Value2' has a wrong offset!");

// Function ScreenSettingWidget.ScreenSettingWidget_C.InitializeResolutionIWidget
// 0x00E8 (0x00E8 - 0x0000)
struct ScreenSettingWidget_C_InitializeResolutionIWidget final
{
public:
	int32                                         m__int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWindowMode                                   CallFunc_GetFullScreenMode_ReturnValue;            // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScreenResolution                      CallFunc_GetScreenResolution_ReturnValue;          // 0x0010(0x0008)()
	TArray<struct FScreenResolution>              CallFunc_GetSupportedScreenResolutions_ReturnValue; // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	struct FScreenResolution                      CallFunc_Array_Get_Item;                           // 0x0028(0x0008)()
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue2;            // 0x0040(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue3;            // 0x0050(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0060(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue4;            // 0x0070(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0080(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue3;               // 0x0090(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue4;               // 0x00A0(0x0010)(ZeroConstructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_MakeLiteralString_ReturnValue;            // 0x00B8(0x0010)(ZeroConstructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C9[0x7];                                       // 0x00C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00D0(0x0018)()
};
static_assert(alignof(ScreenSettingWidget_C_InitializeResolutionIWidget) == 0x000008, "Wrong alignment on ScreenSettingWidget_C_InitializeResolutionIWidget");
static_assert(sizeof(ScreenSettingWidget_C_InitializeResolutionIWidget) == 0x0000E8, "Wrong size on ScreenSettingWidget_C_InitializeResolutionIWidget");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, m__int_Array_Index_Variable) == 0x000000, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, m__int_Loop_Counter_Variable) == 0x000004, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, CallFunc_GetFullScreenMode_ReturnValue) == 0x00000C, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::CallFunc_GetFullScreenMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, K2Node_SwitchEnum_CmpSuccess) == 0x00000D, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, CallFunc_GetScreenResolution_ReturnValue) == 0x000010, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::CallFunc_GetScreenResolution_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, CallFunc_GetSupportedScreenResolutions_ReturnValue) == 0x000018, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::CallFunc_GetSupportedScreenResolutions_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, CallFunc_Array_Get_Item) == 0x000028, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, CallFunc_Conv_IntToString_ReturnValue2) == 0x000040, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::CallFunc_Conv_IntToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, CallFunc_Conv_IntToString_ReturnValue3) == 0x000050, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::CallFunc_Conv_IntToString_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, CallFunc_Concat_StrStr_ReturnValue) == 0x000060, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, CallFunc_Conv_IntToString_ReturnValue4) == 0x000070, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::CallFunc_Conv_IntToString_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, CallFunc_Concat_StrStr_ReturnValue2) == 0x000080, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, CallFunc_Concat_StrStr_ReturnValue3) == 0x000090, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::CallFunc_Concat_StrStr_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, CallFunc_Concat_StrStr_ReturnValue4) == 0x0000A0, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::CallFunc_Concat_StrStr_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, CallFunc_Array_Length_ReturnValue) == 0x0000B0, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, CallFunc_MakeLiteralString_ReturnValue) == 0x0000B8, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::CallFunc_MakeLiteralString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, CallFunc_Less_IntInt_ReturnValue) == 0x0000C8, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_InitializeResolutionIWidget, CallFunc_Conv_StringToText_ReturnValue) == 0x0000D0, "Member 'ScreenSettingWidget_C_InitializeResolutionIWidget::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function ScreenSettingWidget.ScreenSettingWidget_C.GetResolutionEnabled
// 0x0005 (0x0005 - 0x0000)
struct ScreenSettingWidget_C_GetResolutionEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsEnable_ReturnValue;                     // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWindowMode                                   CallFunc_GetSelectedFullScreenMode_FullScreenMode; // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ScreenSettingWidget_C_GetResolutionEnabled) == 0x000001, "Wrong alignment on ScreenSettingWidget_C_GetResolutionEnabled");
static_assert(sizeof(ScreenSettingWidget_C_GetResolutionEnabled) == 0x000005, "Wrong size on ScreenSettingWidget_C_GetResolutionEnabled");
static_assert(offsetof(ScreenSettingWidget_C_GetResolutionEnabled, ReturnValue) == 0x000000, "Member 'ScreenSettingWidget_C_GetResolutionEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_GetResolutionEnabled, CallFunc_IsEnable_ReturnValue) == 0x000001, "Member 'ScreenSettingWidget_C_GetResolutionEnabled::CallFunc_IsEnable_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_GetResolutionEnabled, CallFunc_GetSelectedFullScreenMode_FullScreenMode) == 0x000002, "Member 'ScreenSettingWidget_C_GetResolutionEnabled::CallFunc_GetSelectedFullScreenMode_FullScreenMode' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_GetResolutionEnabled, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000003, "Member 'ScreenSettingWidget_C_GetResolutionEnabled::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_GetResolutionEnabled, CallFunc_BooleanAND_ReturnValue) == 0x000004, "Member 'ScreenSettingWidget_C_GetResolutionEnabled::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

// Function ScreenSettingWidget.ScreenSettingWidget_C.SettingDefault
// 0x0002 (0x0002 - 0x0000)
struct ScreenSettingWidget_C_SettingDefault final
{
public:
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue2;                // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ScreenSettingWidget_C_SettingDefault) == 0x000001, "Wrong alignment on ScreenSettingWidget_C_SettingDefault");
static_assert(sizeof(ScreenSettingWidget_C_SettingDefault) == 0x000002, "Wrong size on ScreenSettingWidget_C_SettingDefault");
static_assert(offsetof(ScreenSettingWidget_C_SettingDefault, CallFunc_GetIsEnabled_ReturnValue) == 0x000000, "Member 'ScreenSettingWidget_C_SettingDefault::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_SettingDefault, CallFunc_GetIsEnabled_ReturnValue2) == 0x000001, "Member 'ScreenSettingWidget_C_SettingDefault::CallFunc_GetIsEnabled_ReturnValue2' has a wrong offset!");

// Function ScreenSettingWidget.ScreenSettingWidget_C.IsEnable
// 0x0003 (0x0003 - 0x0000)
struct ScreenSettingWidget_C_IsEnable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsESports_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ScreenSettingWidget_C_IsEnable) == 0x000001, "Wrong alignment on ScreenSettingWidget_C_IsEnable");
static_assert(sizeof(ScreenSettingWidget_C_IsEnable) == 0x000003, "Wrong size on ScreenSettingWidget_C_IsEnable");
static_assert(offsetof(ScreenSettingWidget_C_IsEnable, ReturnValue) == 0x000000, "Member 'ScreenSettingWidget_C_IsEnable::ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsEnable, CallFunc_IsESports_ReturnValue) == 0x000001, "Member 'ScreenSettingWidget_C_IsEnable::CallFunc_IsESports_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsEnable, CallFunc_Not_PreBool_ReturnValue) == 0x000002, "Member 'ScreenSettingWidget_C_IsEnable::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function ScreenSettingWidget.ScreenSettingWidget_C.GetSelectedResolution
// 0x0050 (0x0050 - 0x0000)
struct ScreenSettingWidget_C_GetSelectedResolution final
{
public:
	struct FScreenResolution                      SelectedResolution;                                // 0x0000(0x0008)(Parm, OutParm)
	class FString                                 CallFunc_GetSelectedOption_SelectedOption;         // 0x0008(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_Split_LeftS;                              // 0x0018(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_Split_RightS;                             // 0x0028(0x0010)(ZeroConstructor)
	bool                                          CallFunc_Split_ReturnValue;                        // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x3];                                       // 0x0039(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue2;            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FScreenResolution                      K2Node_MakeStruct_ScreenResolution;                // 0x0044(0x0008)()
};
static_assert(alignof(ScreenSettingWidget_C_GetSelectedResolution) == 0x000008, "Wrong alignment on ScreenSettingWidget_C_GetSelectedResolution");
static_assert(sizeof(ScreenSettingWidget_C_GetSelectedResolution) == 0x000050, "Wrong size on ScreenSettingWidget_C_GetSelectedResolution");
static_assert(offsetof(ScreenSettingWidget_C_GetSelectedResolution, SelectedResolution) == 0x000000, "Member 'ScreenSettingWidget_C_GetSelectedResolution::SelectedResolution' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_GetSelectedResolution, CallFunc_GetSelectedOption_SelectedOption) == 0x000008, "Member 'ScreenSettingWidget_C_GetSelectedResolution::CallFunc_GetSelectedOption_SelectedOption' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_GetSelectedResolution, CallFunc_Split_LeftS) == 0x000018, "Member 'ScreenSettingWidget_C_GetSelectedResolution::CallFunc_Split_LeftS' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_GetSelectedResolution, CallFunc_Split_RightS) == 0x000028, "Member 'ScreenSettingWidget_C_GetSelectedResolution::CallFunc_Split_RightS' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_GetSelectedResolution, CallFunc_Split_ReturnValue) == 0x000038, "Member 'ScreenSettingWidget_C_GetSelectedResolution::CallFunc_Split_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_GetSelectedResolution, CallFunc_Conv_StringToInt_ReturnValue) == 0x00003C, "Member 'ScreenSettingWidget_C_GetSelectedResolution::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_GetSelectedResolution, CallFunc_Conv_StringToInt_ReturnValue2) == 0x000040, "Member 'ScreenSettingWidget_C_GetSelectedResolution::CallFunc_Conv_StringToInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_GetSelectedResolution, K2Node_MakeStruct_ScreenResolution) == 0x000044, "Member 'ScreenSettingWidget_C_GetSelectedResolution::K2Node_MakeStruct_ScreenResolution' has a wrong offset!");

// Function ScreenSettingWidget.ScreenSettingWidget_C.IsChanged
// 0x0038 (0x0038 - 0x0000)
struct ScreenSettingWidget_C_IsChanged final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetGamma_ReturnValue;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFpsCameraFov_ReturnValue;              // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetValueByRange_Value;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue;          // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetValueByRange_Value2;                   // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWindowMode                                   CallFunc_GetSelectedFullScreenMode_FullScreenMode; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_FloatFloat_ReturnValue2;         // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWindowMode                                   CallFunc_GetFullScreenMode_ReturnValue;            // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScreenResolution                      CallFunc_GetScreenResolution_ReturnValue;          // 0x001C(0x0008)()
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FScreenResolution                      CallFunc_GetSelectedResolution_SelectedResolution; // 0x0028(0x0008)()
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue2;             // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue4;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue5;                   // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue6;                   // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ScreenSettingWidget_C_IsChanged) == 0x000004, "Wrong alignment on ScreenSettingWidget_C_IsChanged");
static_assert(sizeof(ScreenSettingWidget_C_IsChanged) == 0x000038, "Wrong size on ScreenSettingWidget_C_IsChanged");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, ReturnValue) == 0x000000, "Member 'ScreenSettingWidget_C_IsChanged::ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_GetGamma_ReturnValue) == 0x000004, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_GetGamma_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_GetFpsCameraFov_ReturnValue) == 0x000008, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_GetFpsCameraFov_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_GetValueByRange_Value) == 0x00000C, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_GetValueByRange_Value' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_NotEqual_FloatFloat_ReturnValue) == 0x000010, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_NotEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_GetValueByRange_Value2) == 0x000014, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_GetValueByRange_Value2' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_GetSelectedFullScreenMode_FullScreenMode) == 0x000018, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_GetSelectedFullScreenMode_FullScreenMode' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_NotEqual_FloatFloat_ReturnValue2) == 0x000019, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_NotEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_GetFullScreenMode_ReturnValue) == 0x00001A, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_GetFullScreenMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_GetScreenResolution_ReturnValue) == 0x00001C, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_GetScreenResolution_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000024, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_GetSelectedResolution_SelectedResolution) == 0x000028, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_GetSelectedResolution_SelectedResolution' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000030, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_NotEqual_IntInt_ReturnValue2) == 0x000031, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_NotEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_BooleanOR_ReturnValue) == 0x000032, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_BooleanOR_ReturnValue2) == 0x000033, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_BooleanOR_ReturnValue3) == 0x000034, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_BooleanOR_ReturnValue4) == 0x000035, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_BooleanOR_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_BooleanOR_ReturnValue5) == 0x000036, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_BooleanOR_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_IsChanged, CallFunc_BooleanOR_ReturnValue6) == 0x000037, "Member 'ScreenSettingWidget_C_IsChanged::CallFunc_BooleanOR_ReturnValue6' has a wrong offset!");

// Function ScreenSettingWidget.ScreenSettingWidget_C.GetSelectedFullScreenMode
// 0x0020 (0x0020 - 0x0000)
struct ScreenSettingWidget_C_GetSelectedFullScreenMode final
{
public:
	EWindowMode                                   FullscreenMode;                                    // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSelectedOption_SelectedOption;         // 0x0008(0x0010)(ZeroConstructor)
	bool                                          K2Node_SwitchString_CmpSuccess;                    // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ScreenSettingWidget_C_GetSelectedFullScreenMode) == 0x000008, "Wrong alignment on ScreenSettingWidget_C_GetSelectedFullScreenMode");
static_assert(sizeof(ScreenSettingWidget_C_GetSelectedFullScreenMode) == 0x000020, "Wrong size on ScreenSettingWidget_C_GetSelectedFullScreenMode");
static_assert(offsetof(ScreenSettingWidget_C_GetSelectedFullScreenMode, FullscreenMode) == 0x000000, "Member 'ScreenSettingWidget_C_GetSelectedFullScreenMode::FullscreenMode' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_GetSelectedFullScreenMode, CallFunc_GetSelectedOption_SelectedOption) == 0x000008, "Member 'ScreenSettingWidget_C_GetSelectedFullScreenMode::CallFunc_GetSelectedOption_SelectedOption' has a wrong offset!");
static_assert(offsetof(ScreenSettingWidget_C_GetSelectedFullScreenMode, K2Node_SwitchString_CmpSuccess) == 0x000018, "Member 'ScreenSettingWidget_C_GetSelectedFullScreenMode::K2Node_SwitchString_CmpSuccess' has a wrong offset!");

}

