#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ObserverMatchResultNameWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ObserverMatchResultNameWidget.ObserverMatchResultNameWidget_C.OnPrepass_0
// 0x0010 (0x0010 - 0x0000)
struct ObserverMatchResultNameWidget_C_OnPrepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ObserverMatchResultNameWidget_C_OnPrepass_0) == 0x000008, "Wrong alignment on ObserverMatchResultNameWidget_C_OnPrepass_0");
static_assert(sizeof(ObserverMatchResultNameWidget_C_OnPrepass_0) == 0x000010, "Wrong size on ObserverMatchResultNameWidget_C_OnPrepass_0");
static_assert(offsetof(ObserverMatchResultNameWidget_C_OnPrepass_0, BoundWidget) == 0x000000, "Member 'ObserverMatchResultNameWidget_C_OnPrepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_OnPrepass_0, m__bool_Variable) == 0x000008, "Member 'ObserverMatchResultNameWidget_C_OnPrepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_OnPrepass_0, m__byte_Variable) == 0x000009, "Member 'ObserverMatchResultNameWidget_C_OnPrepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_OnPrepass_0, m__byte_Variable2) == 0x00000A, "Member 'ObserverMatchResultNameWidget_C_OnPrepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_OnPrepass_0, K2Node_Select_Default) == 0x00000B, "Member 'ObserverMatchResultNameWidget_C_OnPrepass_0::K2Node_Select_Default' has a wrong offset!");

// Function ObserverMatchResultNameWidget.ObserverMatchResultNameWidget_C.On_KillCount_Prepass_0
// 0x0090 (0x0090 - 0x0000)
struct ObserverMatchResultNameWidget_C_On_KillCount_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetKillFontSize_FontSize;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0010(0x0068)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0078(0x0018)()
};
static_assert(alignof(ObserverMatchResultNameWidget_C_On_KillCount_Prepass_0) == 0x000008, "Wrong alignment on ObserverMatchResultNameWidget_C_On_KillCount_Prepass_0");
static_assert(sizeof(ObserverMatchResultNameWidget_C_On_KillCount_Prepass_0) == 0x000090, "Wrong size on ObserverMatchResultNameWidget_C_On_KillCount_Prepass_0");
static_assert(offsetof(ObserverMatchResultNameWidget_C_On_KillCount_Prepass_0, BoundWidget) == 0x000000, "Member 'ObserverMatchResultNameWidget_C_On_KillCount_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_On_KillCount_Prepass_0, CallFunc_GetKillFontSize_FontSize) == 0x000008, "Member 'ObserverMatchResultNameWidget_C_On_KillCount_Prepass_0::CallFunc_GetKillFontSize_FontSize' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_On_KillCount_Prepass_0, K2Node_MakeStruct_SlateFontInfo) == 0x000010, "Member 'ObserverMatchResultNameWidget_C_On_KillCount_Prepass_0::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_On_KillCount_Prepass_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000078, "Member 'ObserverMatchResultNameWidget_C_On_KillCount_Prepass_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function ObserverMatchResultNameWidget.ObserverMatchResultNameWidget_C.On_PlayerName_Prepass_0
// 0x0090 (0x0090 - 0x0000)
struct ObserverMatchResultNameWidget_C_On_PlayerName_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetPlayerNameFontSize_FontSize;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0010(0x0018)()
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0028(0x0068)()
};
static_assert(alignof(ObserverMatchResultNameWidget_C_On_PlayerName_Prepass_0) == 0x000008, "Wrong alignment on ObserverMatchResultNameWidget_C_On_PlayerName_Prepass_0");
static_assert(sizeof(ObserverMatchResultNameWidget_C_On_PlayerName_Prepass_0) == 0x000090, "Wrong size on ObserverMatchResultNameWidget_C_On_PlayerName_Prepass_0");
static_assert(offsetof(ObserverMatchResultNameWidget_C_On_PlayerName_Prepass_0, BoundWidget) == 0x000000, "Member 'ObserverMatchResultNameWidget_C_On_PlayerName_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_On_PlayerName_Prepass_0, CallFunc_GetPlayerNameFontSize_FontSize) == 0x000008, "Member 'ObserverMatchResultNameWidget_C_On_PlayerName_Prepass_0::CallFunc_GetPlayerNameFontSize_FontSize' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_On_PlayerName_Prepass_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000010, "Member 'ObserverMatchResultNameWidget_C_On_PlayerName_Prepass_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_On_PlayerName_Prepass_0, K2Node_MakeStruct_SlateFontInfo) == 0x000028, "Member 'ObserverMatchResultNameWidget_C_On_PlayerName_Prepass_0::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

// Function ObserverMatchResultNameWidget.ObserverMatchResultNameWidget_C.On_Slash_Prepass_0
// 0x0078 (0x0078 - 0x0000)
struct ObserverMatchResultNameWidget_C_On_Slash_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetKillFontSize_FontSize;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0010(0x0068)()
};
static_assert(alignof(ObserverMatchResultNameWidget_C_On_Slash_Prepass_0) == 0x000008, "Wrong alignment on ObserverMatchResultNameWidget_C_On_Slash_Prepass_0");
static_assert(sizeof(ObserverMatchResultNameWidget_C_On_Slash_Prepass_0) == 0x000078, "Wrong size on ObserverMatchResultNameWidget_C_On_Slash_Prepass_0");
static_assert(offsetof(ObserverMatchResultNameWidget_C_On_Slash_Prepass_0, BoundWidget) == 0x000000, "Member 'ObserverMatchResultNameWidget_C_On_Slash_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_On_Slash_Prepass_0, CallFunc_GetKillFontSize_FontSize) == 0x000008, "Member 'ObserverMatchResultNameWidget_C_On_Slash_Prepass_0::CallFunc_GetKillFontSize_FontSize' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_On_Slash_Prepass_0, K2Node_MakeStruct_SlateFontInfo) == 0x000010, "Member 'ObserverMatchResultNameWidget_C_On_Slash_Prepass_0::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

// Function ObserverMatchResultNameWidget.ObserverMatchResultNameWidget_C.On_Kills_Prepass_0
// 0x0078 (0x0078 - 0x0000)
struct ObserverMatchResultNameWidget_C_On_Kills_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetKillFontSize_FontSize;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0010(0x0068)()
};
static_assert(alignof(ObserverMatchResultNameWidget_C_On_Kills_Prepass_0) == 0x000008, "Wrong alignment on ObserverMatchResultNameWidget_C_On_Kills_Prepass_0");
static_assert(sizeof(ObserverMatchResultNameWidget_C_On_Kills_Prepass_0) == 0x000078, "Wrong size on ObserverMatchResultNameWidget_C_On_Kills_Prepass_0");
static_assert(offsetof(ObserverMatchResultNameWidget_C_On_Kills_Prepass_0, BoundWidget) == 0x000000, "Member 'ObserverMatchResultNameWidget_C_On_Kills_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_On_Kills_Prepass_0, CallFunc_GetKillFontSize_FontSize) == 0x000008, "Member 'ObserverMatchResultNameWidget_C_On_Kills_Prepass_0::CallFunc_GetKillFontSize_FontSize' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_On_Kills_Prepass_0, K2Node_MakeStruct_SlateFontInfo) == 0x000010, "Member 'ObserverMatchResultNameWidget_C_On_Kills_Prepass_0::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");

// Function ObserverMatchResultNameWidget.ObserverMatchResultNameWidget_C.SetSmall
// 0x0001 (0x0001 - 0x0000)
struct ObserverMatchResultNameWidget_C_SetSmall final
{
public:
	bool                                          bSmall_0;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ObserverMatchResultNameWidget_C_SetSmall) == 0x000001, "Wrong alignment on ObserverMatchResultNameWidget_C_SetSmall");
static_assert(sizeof(ObserverMatchResultNameWidget_C_SetSmall) == 0x000001, "Wrong size on ObserverMatchResultNameWidget_C_SetSmall");
static_assert(offsetof(ObserverMatchResultNameWidget_C_SetSmall, bSmall_0) == 0x000000, "Member 'ObserverMatchResultNameWidget_C_SetSmall::bSmall_0' has a wrong offset!");

// Function ObserverMatchResultNameWidget.ObserverMatchResultNameWidget_C.GetKillFontSize
// 0x0014 (0x0014 - 0x0000)
struct ObserverMatchResultNameWidget_C_GetKillFontSize final
{
public:
	int32                                         FontSize;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Variable;                                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Variable2;                                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ObserverMatchResultNameWidget_C_GetKillFontSize) == 0x000004, "Wrong alignment on ObserverMatchResultNameWidget_C_GetKillFontSize");
static_assert(sizeof(ObserverMatchResultNameWidget_C_GetKillFontSize) == 0x000014, "Wrong size on ObserverMatchResultNameWidget_C_GetKillFontSize");
static_assert(offsetof(ObserverMatchResultNameWidget_C_GetKillFontSize, FontSize) == 0x000000, "Member 'ObserverMatchResultNameWidget_C_GetKillFontSize::FontSize' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_GetKillFontSize, m__bool_Variable) == 0x000004, "Member 'ObserverMatchResultNameWidget_C_GetKillFontSize::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_GetKillFontSize, m__int_Variable) == 0x000008, "Member 'ObserverMatchResultNameWidget_C_GetKillFontSize::m__int_Variable' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_GetKillFontSize, m__int_Variable2) == 0x00000C, "Member 'ObserverMatchResultNameWidget_C_GetKillFontSize::m__int_Variable2' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_GetKillFontSize, K2Node_Select_Default) == 0x000010, "Member 'ObserverMatchResultNameWidget_C_GetKillFontSize::K2Node_Select_Default' has a wrong offset!");

// Function ObserverMatchResultNameWidget.ObserverMatchResultNameWidget_C.GetPlayerNameFontSize
// 0x0014 (0x0014 - 0x0000)
struct ObserverMatchResultNameWidget_C_GetPlayerNameFontSize final
{
public:
	int32                                         FontSize;                                          // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Variable;                                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Variable2;                                  // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Select_Default;                             // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ObserverMatchResultNameWidget_C_GetPlayerNameFontSize) == 0x000004, "Wrong alignment on ObserverMatchResultNameWidget_C_GetPlayerNameFontSize");
static_assert(sizeof(ObserverMatchResultNameWidget_C_GetPlayerNameFontSize) == 0x000014, "Wrong size on ObserverMatchResultNameWidget_C_GetPlayerNameFontSize");
static_assert(offsetof(ObserverMatchResultNameWidget_C_GetPlayerNameFontSize, FontSize) == 0x000000, "Member 'ObserverMatchResultNameWidget_C_GetPlayerNameFontSize::FontSize' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_GetPlayerNameFontSize, m__bool_Variable) == 0x000004, "Member 'ObserverMatchResultNameWidget_C_GetPlayerNameFontSize::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_GetPlayerNameFontSize, m__int_Variable) == 0x000008, "Member 'ObserverMatchResultNameWidget_C_GetPlayerNameFontSize::m__int_Variable' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_GetPlayerNameFontSize, m__int_Variable2) == 0x00000C, "Member 'ObserverMatchResultNameWidget_C_GetPlayerNameFontSize::m__int_Variable2' has a wrong offset!");
static_assert(offsetof(ObserverMatchResultNameWidget_C_GetPlayerNameFontSize, K2Node_Select_Default) == 0x000010, "Member 'ObserverMatchResultNameWidget_C_GetPlayerNameFontSize::K2Node_Select_Default' has a wrong offset!");

}

