#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NetworkProblemWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function NetworkProblemWidget.NetworkProblemWidget_C.ExecuteUbergraph_NetworkProblemWidget
// 0x0004 (0x0004 - 0x0000)
struct NetworkProblemWidget_C_ExecuteUbergraph_NetworkProblemWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NetworkProblemWidget_C_ExecuteUbergraph_NetworkProblemWidget) == 0x000004, "Wrong alignment on NetworkProblemWidget_C_ExecuteUbergraph_NetworkProblemWidget");
static_assert(sizeof(NetworkProblemWidget_C_ExecuteUbergraph_NetworkProblemWidget) == 0x000004, "Wrong size on NetworkProblemWidget_C_ExecuteUbergraph_NetworkProblemWidget");
static_assert(offsetof(NetworkProblemWidget_C_ExecuteUbergraph_NetworkProblemWidget, EntryPoint) == 0x000000, "Member 'NetworkProblemWidget_C_ExecuteUbergraph_NetworkProblemWidget::EntryPoint' has a wrong offset!");

// Function NetworkProblemWidget.NetworkProblemWidget_C.On_NetProblemIndicator_Prepass_0
// 0x0050 (0x0050 - 0x0000)
struct NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         m__float_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable2;                                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m__float_Variable2;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslGameState*                          CallFunc_GetTslGameState_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslPlayerController*                   CallFunc_GetOwningTslPlayerController_ReturnValue; // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHighPing_ReturnValue;                   // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue2;          // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0046(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x0047(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0) == 0x000008, "Wrong alignment on NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0");
static_assert(sizeof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0) == 0x000050, "Wrong size on NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, BoundWidget) == 0x000000, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, m__float_Variable) == 0x000008, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::m__float_Variable' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, CallFunc_IsVisible_ReturnValue) == 0x00000C, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, m__byte_Variable) == 0x00000D, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, m__byte_Variable2) == 0x00000E, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, m__bool_Variable) == 0x00000F, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, m__bool_Variable2) == 0x000010, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, m__float_Variable2) == 0x000014, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::m__float_Variable2' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000018, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, CallFunc_GetTslGameState_ReturnValue) == 0x000020, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::CallFunc_GetTslGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, K2Node_Select_Default) == 0x000028, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x00002D, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, CallFunc_IsValid_ReturnValue2) == 0x00002E, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00002F, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, CallFunc_BooleanAND_ReturnValue) == 0x000031, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, CallFunc_GetOwningTslPlayerController_ReturnValue) == 0x000038, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::CallFunc_GetOwningTslPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, CallFunc_IsValid_ReturnValue3) == 0x000040, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, CallFunc_IsValid_ReturnValue4) == 0x000041, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, CallFunc_IsHighPing_ReturnValue) == 0x000042, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::CallFunc_IsHighPing_ReturnValue' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, CallFunc_IsAnimationPlaying_ReturnValue2) == 0x000043, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::CallFunc_IsAnimationPlaying_ReturnValue2' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, CallFunc_BooleanAND_ReturnValue2) == 0x000044, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, CallFunc_Not_PreBool_ReturnValue2) == 0x000045, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, CallFunc_BooleanAND_ReturnValue3) == 0x000046, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, K2Node_Select2_Default) == 0x000047, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0, K2Node_SwitchEnum_CmpSuccess) == 0x000048, "Member 'NetworkProblemWidget_C_On_NetProblemIndicator_Prepass_0::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

