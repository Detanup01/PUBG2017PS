#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Motorbike_04

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"
#include "CoreUObject_structs.hpp"
#include "AnimGraphRuntime_structs.hpp"


namespace SDK
{

// AnimBlueprintGeneratedClass ABP_Motorbike_04.ABP_Motorbike_04_C
// 0x0C10 (0x1490 - 0x0880)
class UABP_Motorbike_04_C final : public UVehicleAnimInstance
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0880(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	uint8                                         Pad_888[0x8];                                      // 0x0888(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt_F00FC4C24636CADC679B928D5B9A84A6; // 0x0890(0x0150)()
	struct FAnimNode_CopyBone                     AnimGraphNode_CopyBone_402AEAFD4E6DB56509518CB5795AE5E0; // 0x09E0(0x0098)()
	struct FAnimNode_WheelHandler                 AnimGraphNode_WheelHandler_0BEAFB29451FA2C201CD61AB66CF8299; // 0x0A78(0x0088)()
	struct FAnimNode_ConvertComponentToLocalSpace AnimGraphNode_ComponentToLocalSpace_092BCD484F9E5313D7E30F9187109EA6; // 0x0B00(0x0048)()
	struct FAnimNode_RotationMultiplier           AnimGraphNode_RotationMultiplier_C7362C584E9400D160AAEC8DEF2533A0; // 0x0B48(0x0098)()
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt_B1CDBBAF47E81EF35463A3848A511397; // 0x0BE0(0x0150)()
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt_D02F00684CEE7A4CD0F9A798D29C4910; // 0x0D30(0x0150)()
	struct FAnimNode_ConvertLocalToComponentSpace AnimGraphNode_LocalToComponentSpace_9F701C04470A614EEC5C1FAC4E0CCB77; // 0x0E80(0x0048)()
	uint8                                         Pad_EC8[0x8];                                      // 0x0EC8(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FAnimNode_LookAt                       AnimGraphNode_LookAt_031AA7C3435B259672D3279788710F6F; // 0x0ED0(0x0150)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_764BE4264AB074AD738EB79D6F7C025F; // 0x1020(0x00B0)()
	struct FAnimNode_RefPose                      AnimGraphNode_LocalRefPose_BD8986A34F38F3A1CFEFA18858ADC0FF; // 0x10D0(0x0038)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_A8A930D6405B0072B721DAAB1AF54C32; // 0x1108(0x00B0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_0044730847460FF75230C89BEE4A003E; // 0x11B8(0x00B0)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_99EC0C5B4AE176A84A64298ADB12F9F2; // 0x1268(0x00B0)()
	struct FAnimNode_Root                         AnimGraphNode_Root_ECE4182141B32CBF7FF61BB72BD23154; // 0x1318(0x0048)()
	struct FAnimNode_ModifyBone                   AnimGraphNode_ModifyBone_F276919D4CDE07DAACC131A4D3A26DC5; // 0x1360(0x00B0)()
	class ABP_Motorbike_03_C*                     BikeRef;                                           // 0x1410(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         SteerRoll;                                         // 0x1418(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               BodyRot;                                           // 0x141C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         AD_Alpha;                                          // 0x1428(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                LastVelocity;                                      // 0x142C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                EF;                                                // 0x1438(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1444[0x4];                                     // 0x1444(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslMotorbikeVehicle*                   BikeRef4;                                          // 0x1448(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               KickStandRot;                                      // 0x1450(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         KickStandCurrentRot;                               // 0x145C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         MaxDrop;                                           // 0x1460(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         MaxRaise;                                          // 0x1464(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         FrontSusp_Offset;                                  // 0x1468(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         FrontSusp_Speed;                                   // 0x146C(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         BackSusp_Offset;                                   // 0x1470(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         BackSusp_Speed;                                    // 0x1474(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               SteerROT;                                          // 0x1478(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FRotator                               SpeedArrowRot;                                     // 0x1484(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ABP_Motorbike_04(int32 EntryPoint);
	void BlueprintUpdateAnimation(float DeltaTimeX);
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Motorbike_04_AnimGraphNode_ModifyBone_F276919D4CDE07DAACC131A4D3A26DC5();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Motorbike_04_AnimGraphNode_ModifyBone_764BE4264AB074AD738EB79D6F7C025F();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Motorbike_04_AnimGraphNode_ModifyBone_99EC0C5B4AE176A84A64298ADB12F9F2();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Motorbike_04_AnimGraphNode_ModifyBone_A8A930D6405B0072B721DAAB1AF54C32();
	void EvaluateGraphExposedInputs_ExecuteUbergraph_ABP_Motorbike_04_AnimGraphNode_ModifyBone_0044730847460FF75230C89BEE4A003E();
	void TickBikePose();
	void TickFrontSuspension();
	void TickBackSuspension();
	void TickSteer();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ABP_Motorbike_04_C">();
	}
	static class UABP_Motorbike_04_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UABP_Motorbike_04_C>();
	}
};
static_assert(alignof(UABP_Motorbike_04_C) == 0x000010, "Wrong alignment on UABP_Motorbike_04_C");
static_assert(sizeof(UABP_Motorbike_04_C) == 0x001490, "Wrong size on UABP_Motorbike_04_C");
static_assert(offsetof(UABP_Motorbike_04_C, UberGraphFrame) == 0x000880, "Member 'UABP_Motorbike_04_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, AnimGraphNode_LookAt_F00FC4C24636CADC679B928D5B9A84A6) == 0x000890, "Member 'UABP_Motorbike_04_C::AnimGraphNode_LookAt_F00FC4C24636CADC679B928D5B9A84A6' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, AnimGraphNode_CopyBone_402AEAFD4E6DB56509518CB5795AE5E0) == 0x0009E0, "Member 'UABP_Motorbike_04_C::AnimGraphNode_CopyBone_402AEAFD4E6DB56509518CB5795AE5E0' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, AnimGraphNode_WheelHandler_0BEAFB29451FA2C201CD61AB66CF8299) == 0x000A78, "Member 'UABP_Motorbike_04_C::AnimGraphNode_WheelHandler_0BEAFB29451FA2C201CD61AB66CF8299' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, AnimGraphNode_ComponentToLocalSpace_092BCD484F9E5313D7E30F9187109EA6) == 0x000B00, "Member 'UABP_Motorbike_04_C::AnimGraphNode_ComponentToLocalSpace_092BCD484F9E5313D7E30F9187109EA6' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, AnimGraphNode_RotationMultiplier_C7362C584E9400D160AAEC8DEF2533A0) == 0x000B48, "Member 'UABP_Motorbike_04_C::AnimGraphNode_RotationMultiplier_C7362C584E9400D160AAEC8DEF2533A0' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, AnimGraphNode_LookAt_B1CDBBAF47E81EF35463A3848A511397) == 0x000BE0, "Member 'UABP_Motorbike_04_C::AnimGraphNode_LookAt_B1CDBBAF47E81EF35463A3848A511397' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, AnimGraphNode_LookAt_D02F00684CEE7A4CD0F9A798D29C4910) == 0x000D30, "Member 'UABP_Motorbike_04_C::AnimGraphNode_LookAt_D02F00684CEE7A4CD0F9A798D29C4910' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, AnimGraphNode_LocalToComponentSpace_9F701C04470A614EEC5C1FAC4E0CCB77) == 0x000E80, "Member 'UABP_Motorbike_04_C::AnimGraphNode_LocalToComponentSpace_9F701C04470A614EEC5C1FAC4E0CCB77' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, AnimGraphNode_LookAt_031AA7C3435B259672D3279788710F6F) == 0x000ED0, "Member 'UABP_Motorbike_04_C::AnimGraphNode_LookAt_031AA7C3435B259672D3279788710F6F' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, AnimGraphNode_ModifyBone_764BE4264AB074AD738EB79D6F7C025F) == 0x001020, "Member 'UABP_Motorbike_04_C::AnimGraphNode_ModifyBone_764BE4264AB074AD738EB79D6F7C025F' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, AnimGraphNode_LocalRefPose_BD8986A34F38F3A1CFEFA18858ADC0FF) == 0x0010D0, "Member 'UABP_Motorbike_04_C::AnimGraphNode_LocalRefPose_BD8986A34F38F3A1CFEFA18858ADC0FF' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, AnimGraphNode_ModifyBone_A8A930D6405B0072B721DAAB1AF54C32) == 0x001108, "Member 'UABP_Motorbike_04_C::AnimGraphNode_ModifyBone_A8A930D6405B0072B721DAAB1AF54C32' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, AnimGraphNode_ModifyBone_0044730847460FF75230C89BEE4A003E) == 0x0011B8, "Member 'UABP_Motorbike_04_C::AnimGraphNode_ModifyBone_0044730847460FF75230C89BEE4A003E' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, AnimGraphNode_ModifyBone_99EC0C5B4AE176A84A64298ADB12F9F2) == 0x001268, "Member 'UABP_Motorbike_04_C::AnimGraphNode_ModifyBone_99EC0C5B4AE176A84A64298ADB12F9F2' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, AnimGraphNode_Root_ECE4182141B32CBF7FF61BB72BD23154) == 0x001318, "Member 'UABP_Motorbike_04_C::AnimGraphNode_Root_ECE4182141B32CBF7FF61BB72BD23154' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, AnimGraphNode_ModifyBone_F276919D4CDE07DAACC131A4D3A26DC5) == 0x001360, "Member 'UABP_Motorbike_04_C::AnimGraphNode_ModifyBone_F276919D4CDE07DAACC131A4D3A26DC5' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, BikeRef) == 0x001410, "Member 'UABP_Motorbike_04_C::BikeRef' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, SteerRoll) == 0x001418, "Member 'UABP_Motorbike_04_C::SteerRoll' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, BodyRot) == 0x00141C, "Member 'UABP_Motorbike_04_C::BodyRot' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, AD_Alpha) == 0x001428, "Member 'UABP_Motorbike_04_C::AD_Alpha' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, LastVelocity) == 0x00142C, "Member 'UABP_Motorbike_04_C::LastVelocity' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, EF) == 0x001438, "Member 'UABP_Motorbike_04_C::EF' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, BikeRef4) == 0x001448, "Member 'UABP_Motorbike_04_C::BikeRef4' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, KickStandRot) == 0x001450, "Member 'UABP_Motorbike_04_C::KickStandRot' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, KickStandCurrentRot) == 0x00145C, "Member 'UABP_Motorbike_04_C::KickStandCurrentRot' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, MaxDrop) == 0x001460, "Member 'UABP_Motorbike_04_C::MaxDrop' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, MaxRaise) == 0x001464, "Member 'UABP_Motorbike_04_C::MaxRaise' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, FrontSusp_Offset) == 0x001468, "Member 'UABP_Motorbike_04_C::FrontSusp_Offset' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, FrontSusp_Speed) == 0x00146C, "Member 'UABP_Motorbike_04_C::FrontSusp_Speed' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, BackSusp_Offset) == 0x001470, "Member 'UABP_Motorbike_04_C::BackSusp_Offset' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, BackSusp_Speed) == 0x001474, "Member 'UABP_Motorbike_04_C::BackSusp_Speed' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, SteerROT) == 0x001478, "Member 'UABP_Motorbike_04_C::SteerROT' has a wrong offset!");
static_assert(offsetof(UABP_Motorbike_04_C, SpeedArrowRot) == 0x001484, "Member 'UABP_Motorbike_04_C::SpeedArrowRot' has a wrong offset!");

}

