#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponEquipmentWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.ExecuteUbergraph_WeaponEquipmentWidget
// 0x0260 (0x0260 - 0x0000)
struct WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Variable;                                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0018(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x003D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x003E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x003F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry2;                          // 0x0040(0x0034)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_74[0x4];                                       // 0x0074(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_PointerEvent2;                        // 0x0078(0x0078)()
	class UDragDropOperation*                     K2Node_Event_Operation2;                           // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_PointerEvent;                         // 0x00F8(0x0078)()
	class UDragDropOperation*                     K2Node_Event_Operation;                            // 0x0170(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragDropOperation_C*            K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation; // 0x0178(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0180(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_181[0x7];                                      // 0x0181(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTslItemDragDropOperation_C*            K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation2; // 0x0188(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0190(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_191[0x7];                                      // 0x0191(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEquipment*                             CallFunc_GetEquipment_Equipment;                   // 0x0198(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x01A0(0x0034)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x01D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_EnterOtherContainer_NewOtherContainer_CastInput; // 0x01D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UDragDropOperation*                     CallFunc_GetDragDroppingContent_ReturnValue;       // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslItemDragDropOperation_C*            K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation3; // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x01F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F9[0x7];                                      // 0x01F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0200(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0210(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_211[0x7];                                      // 0x0211(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryWidget_C*                     K2Node_Event_Inventory;                            // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AEquipment*                             CallFunc_GetEquipment_Equipment2;                  // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0228(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x022C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22D[0x3];                                      // 0x022D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttachableItem*                        CallFunc_GetSelfPutAttachment_GamepadadSelectedAttachableItem; // 0x0230(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_FindAttachableWeaponIndex_ReturnValue;    // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_23D[0x3];                                      // 0x023D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponEquipmentSlotWidget_C*           CallFunc_Array_Get_Item;                           // 0x0240(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0249(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24A[0x6];                                      // 0x024A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponEquipmentSlotWidget_C*           CallFunc_Array_Get_Item2;                          // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0258(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget");
static_assert(sizeof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget) == 0x000260, "Wrong size on WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, EntryPoint) == 0x000000, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, m__int_Variable) == 0x000004, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::m__int_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_Conv_IntToString_ReturnValue) == 0x000018, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000038, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00003C, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, m__bool_Variable) == 0x00003D, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_Not_PreBool_ReturnValue) == 0x00003E, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_BooleanAND_ReturnValue) == 0x00003F, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, K2Node_Event_MyGeometry2) == 0x000040, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::K2Node_Event_MyGeometry2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, K2Node_Event_PointerEvent2) == 0x000078, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::K2Node_Event_PointerEvent2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, K2Node_Event_Operation2) == 0x0000F0, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::K2Node_Event_Operation2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, K2Node_Event_PointerEvent) == 0x0000F8, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::K2Node_Event_PointerEvent' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, K2Node_Event_Operation) == 0x000170, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::K2Node_Event_Operation' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation) == 0x000178, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, K2Node_DynamicCast_bSuccess) == 0x000180, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation2) == 0x000188, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, K2Node_DynamicCast_bSuccess2) == 0x000190, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_GetEquipment_Equipment) == 0x000198, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_GetEquipment_Equipment' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, K2Node_Event_MyGeometry) == 0x0001A0, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, K2Node_Event_InDeltaTime) == 0x0001D4, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_EnterOtherContainer_NewOtherContainer_CastInput) == 0x0001D8, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_EnterOtherContainer_NewOtherContainer_CastInput' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_GetDragDroppingContent_ReturnValue) == 0x0001E8, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_GetDragDroppingContent_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation3) == 0x0001F0, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::K2Node_DynamicCast_AsTsl_Item_Drag_Drop_Operation3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, K2Node_DynamicCast_bSuccess3) == 0x0001F8, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, K2Node_CreateDelegate_OutputDelegate2) == 0x000200, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000210, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, K2Node_Event_Inventory) == 0x000218, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::K2Node_Event_Inventory' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_GetEquipment_Equipment2) == 0x000220, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_GetEquipment_Equipment2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_Add_IntInt_ReturnValue2) == 0x000228, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_IsValid_ReturnValue) == 0x00022C, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_GetSelfPutAttachment_GamepadadSelectedAttachableItem) == 0x000230, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_GetSelfPutAttachment_GamepadadSelectedAttachableItem' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_FindAttachableWeaponIndex_ReturnValue) == 0x000238, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_FindAttachableWeaponIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_Greater_IntInt_ReturnValue) == 0x00023C, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_Array_Get_Item) == 0x000240, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000248, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_BooleanAND_ReturnValue2) == 0x000249, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_Array_Get_Item2) == 0x000250, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget, CallFunc_Less_IntInt_ReturnValue) == 0x000258, "Member 'WeaponEquipmentWidget_C_ExecuteUbergraph_WeaponEquipmentWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.SetInventoryWidget
// 0x0008 (0x0008 - 0x0000)
struct WeaponEquipmentWidget_C_SetInventoryWidget final
{
public:
	class UInventoryWidget_C*                     Inventory;                                         // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_SetInventoryWidget) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_SetInventoryWidget");
static_assert(sizeof(WeaponEquipmentWidget_C_SetInventoryWidget) == 0x000008, "Wrong size on WeaponEquipmentWidget_C_SetInventoryWidget");
static_assert(offsetof(WeaponEquipmentWidget_C_SetInventoryWidget, Inventory) == 0x000000, "Member 'WeaponEquipmentWidget_C_SetInventoryWidget::Inventory' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.Tick
// 0x0038 (0x0038 - 0x0000)
struct WeaponEquipmentWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_Tick) == 0x000004, "Wrong alignment on WeaponEquipmentWidget_C_Tick");
static_assert(sizeof(WeaponEquipmentWidget_C_Tick) == 0x000038, "Wrong size on WeaponEquipmentWidget_C_Tick");
static_assert(offsetof(WeaponEquipmentWidget_C_Tick, MyGeometry) == 0x000000, "Member 'WeaponEquipmentWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Tick, InDeltaTime) == 0x000034, "Member 'WeaponEquipmentWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.OnDragLeave
// 0x0080 (0x0080 - 0x0000)
struct WeaponEquipmentWidget_C_OnDragLeave final
{
public:
	struct FPointerEvent                          PointerEvent;                                      // 0x0000(0x0078)(Parm)
	class UDragDropOperation*                     Operation;                                         // 0x0078(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_OnDragLeave) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_OnDragLeave");
static_assert(sizeof(WeaponEquipmentWidget_C_OnDragLeave) == 0x000080, "Wrong size on WeaponEquipmentWidget_C_OnDragLeave");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDragLeave, PointerEvent) == 0x000000, "Member 'WeaponEquipmentWidget_C_OnDragLeave::PointerEvent' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDragLeave, Operation) == 0x000078, "Member 'WeaponEquipmentWidget_C_OnDragLeave::Operation' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.OnDragEnter
// 0x00B8 (0x00B8 - 0x0000)
struct WeaponEquipmentWidget_C_OnDragEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_OnDragEnter) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_OnDragEnter");
static_assert(sizeof(WeaponEquipmentWidget_C_OnDragEnter) == 0x0000B8, "Wrong size on WeaponEquipmentWidget_C_OnDragEnter");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDragEnter, MyGeometry) == 0x000000, "Member 'WeaponEquipmentWidget_C_OnDragEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDragEnter, PointerEvent) == 0x000038, "Member 'WeaponEquipmentWidget_C_OnDragEnter::PointerEvent' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDragEnter, Operation) == 0x0000B0, "Member 'WeaponEquipmentWidget_C_OnDragEnter::Operation' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.GetWeaponItemByTabIndex
// 0x0058 (0x0058 - 0x0000)
struct WeaponEquipmentWidget_C_GetWeaponItemByTabIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponItem*                            WeaponItem;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponEquipmentSlotWidget_C*           CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotWidgetBaseInterface_C> CallFunc_GetSlotItem_self_CastInput;               // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        CallFunc_GetSlotItem_SlotItem;                     // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponItem*                            K2Node_DynamicCast_AsWeapon_Item;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_GetWeaponItemByTabIndex) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_GetWeaponItemByTabIndex");
static_assert(sizeof(WeaponEquipmentWidget_C_GetWeaponItemByTabIndex) == 0x000058, "Wrong size on WeaponEquipmentWidget_C_GetWeaponItemByTabIndex");
static_assert(offsetof(WeaponEquipmentWidget_C_GetWeaponItemByTabIndex, Index_0) == 0x000000, "Member 'WeaponEquipmentWidget_C_GetWeaponItemByTabIndex::Index_0' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetWeaponItemByTabIndex, WeaponItem) == 0x000008, "Member 'WeaponEquipmentWidget_C_GetWeaponItemByTabIndex::WeaponItem' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetWeaponItemByTabIndex, CallFunc_Array_Get_Item) == 0x000010, "Member 'WeaponEquipmentWidget_C_GetWeaponItemByTabIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetWeaponItemByTabIndex, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WeaponEquipmentWidget_C_GetWeaponItemByTabIndex::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetWeaponItemByTabIndex, CallFunc_GetSlotItem_self_CastInput) == 0x000020, "Member 'WeaponEquipmentWidget_C_GetWeaponItemByTabIndex::CallFunc_GetSlotItem_self_CastInput' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetWeaponItemByTabIndex, CallFunc_GetSlotItem_SlotItem) == 0x000030, "Member 'WeaponEquipmentWidget_C_GetWeaponItemByTabIndex::CallFunc_GetSlotItem_SlotItem' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetWeaponItemByTabIndex, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000040, "Member 'WeaponEquipmentWidget_C_GetWeaponItemByTabIndex::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetWeaponItemByTabIndex, K2Node_DynamicCast_AsWeapon_Item) == 0x000048, "Member 'WeaponEquipmentWidget_C_GetWeaponItemByTabIndex::K2Node_DynamicCast_AsWeapon_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetWeaponItemByTabIndex, K2Node_DynamicCast_bSuccess) == 0x000050, "Member 'WeaponEquipmentWidget_C_GetWeaponItemByTabIndex::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.OnDrop
// 0x0138 (0x0138 - 0x0000)
struct WeaponEquipmentWidget_C_OnDrop final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          PointerEvent;                                      // 0x0038(0x0078)(Parm)
	class UDragDropOperation*                     Operation;                                         // 0x00B0(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x00B8(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotWidgetBaseInterface_C> K2Node_DynamicCast_AsSlot_Widget_Base_Interface;   // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotInterface>        CallFunc_GetSlotItem_SlotItem;                     // 0x00D8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAttachment_ReturnValue;                 // 0x00E9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EA[0x2];                                       // 0x00EA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWeaponIndex_ReturnValue;               // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_GetSlotContainer_SlotContainer;           // 0x00F0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponItem*                            CallFunc_GetWeaponItemByTabIndex_WeaponItem;       // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AEquipment*                             CallFunc_GetEquipment_Equipment;                   // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotContainerInterface> CallFunc_DropSlotOnOtherContainer_OtherContainer_CastInput; // 0x0118(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> CallFunc_DropSlotOnOtherContainer_OtherContainer2_CastInput; // 0x0128(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_OnDrop) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_OnDrop");
static_assert(sizeof(WeaponEquipmentWidget_C_OnDrop) == 0x000138, "Wrong size on WeaponEquipmentWidget_C_OnDrop");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDrop, MyGeometry) == 0x000000, "Member 'WeaponEquipmentWidget_C_OnDrop::MyGeometry' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDrop, PointerEvent) == 0x000038, "Member 'WeaponEquipmentWidget_C_OnDrop::PointerEvent' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDrop, Operation) == 0x0000B0, "Member 'WeaponEquipmentWidget_C_OnDrop::Operation' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDrop, ReturnValue) == 0x0000B8, "Member 'WeaponEquipmentWidget_C_OnDrop::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDrop, K2Node_DynamicCast_AsSlot_Widget_Base_Interface) == 0x0000C0, "Member 'WeaponEquipmentWidget_C_OnDrop::K2Node_DynamicCast_AsSlot_Widget_Base_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDrop, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'WeaponEquipmentWidget_C_OnDrop::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDrop, CallFunc_GetSlotItem_SlotItem) == 0x0000D8, "Member 'WeaponEquipmentWidget_C_OnDrop::CallFunc_GetSlotItem_SlotItem' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDrop, CallFunc_IsValid_ReturnValue) == 0x0000E8, "Member 'WeaponEquipmentWidget_C_OnDrop::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDrop, CallFunc_IsAttachment_ReturnValue) == 0x0000E9, "Member 'WeaponEquipmentWidget_C_OnDrop::CallFunc_IsAttachment_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDrop, CallFunc_GetWeaponIndex_ReturnValue) == 0x0000EC, "Member 'WeaponEquipmentWidget_C_OnDrop::CallFunc_GetWeaponIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDrop, CallFunc_GetSlotContainer_SlotContainer) == 0x0000F0, "Member 'WeaponEquipmentWidget_C_OnDrop::CallFunc_GetSlotContainer_SlotContainer' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDrop, CallFunc_GetWeaponItemByTabIndex_WeaponItem) == 0x000100, "Member 'WeaponEquipmentWidget_C_OnDrop::CallFunc_GetWeaponItemByTabIndex_WeaponItem' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDrop, CallFunc_GetEquipment_Equipment) == 0x000108, "Member 'WeaponEquipmentWidget_C_OnDrop::CallFunc_GetEquipment_Equipment' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDrop, CallFunc_IsValid_ReturnValue2) == 0x000110, "Member 'WeaponEquipmentWidget_C_OnDrop::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDrop, CallFunc_DropSlotOnOtherContainer_OtherContainer_CastInput) == 0x000118, "Member 'WeaponEquipmentWidget_C_OnDrop::CallFunc_DropSlotOnOtherContainer_OtherContainer_CastInput' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnDrop, CallFunc_DropSlotOnOtherContainer_OtherContainer2_CastInput) == 0x000128, "Member 'WeaponEquipmentWidget_C_OnDrop::CallFunc_DropSlotOnOtherContainer_OtherContainer2_CastInput' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.InitializeWeaponEquipment
// 0x0030 (0x0030 - 0x0000)
struct WeaponEquipmentWidget_C_InitializeWeaponEquipment final
{
public:
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AWeaponProcessor*                       CallFunc_GetWeaponProcessor_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue2;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue3;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue4;                   // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue5;                   // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_InitializeWeaponEquipment) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_InitializeWeaponEquipment");
static_assert(sizeof(WeaponEquipmentWidget_C_InitializeWeaponEquipment) == 0x000030, "Wrong size on WeaponEquipmentWidget_C_InitializeWeaponEquipment");
static_assert(offsetof(WeaponEquipmentWidget_C_InitializeWeaponEquipment, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000000, "Member 'WeaponEquipmentWidget_C_InitializeWeaponEquipment::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_InitializeWeaponEquipment, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'WeaponEquipmentWidget_C_InitializeWeaponEquipment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_InitializeWeaponEquipment, CallFunc_GetWeaponProcessor_ReturnValue) == 0x000010, "Member 'WeaponEquipmentWidget_C_InitializeWeaponEquipment::CallFunc_GetWeaponProcessor_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_InitializeWeaponEquipment, CallFunc_Array_Add_ReturnValue) == 0x000018, "Member 'WeaponEquipmentWidget_C_InitializeWeaponEquipment::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_InitializeWeaponEquipment, CallFunc_Array_Add_ReturnValue2) == 0x00001C, "Member 'WeaponEquipmentWidget_C_InitializeWeaponEquipment::CallFunc_Array_Add_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_InitializeWeaponEquipment, CallFunc_Array_Add_ReturnValue3) == 0x000020, "Member 'WeaponEquipmentWidget_C_InitializeWeaponEquipment::CallFunc_Array_Add_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_InitializeWeaponEquipment, CallFunc_Array_Add_ReturnValue4) == 0x000024, "Member 'WeaponEquipmentWidget_C_InitializeWeaponEquipment::CallFunc_Array_Add_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_InitializeWeaponEquipment, CallFunc_Array_Add_ReturnValue5) == 0x000028, "Member 'WeaponEquipmentWidget_C_InitializeWeaponEquipment::CallFunc_Array_Add_ReturnValue5' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.MainPrepass
// 0x0050 (0x0050 - 0x0000)
struct WeaponEquipmentWidget_C_MainPrepass final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           m__struct_Variable;                                // 0x000C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocus_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsXBoxOnePlatform_NewParam;               // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_InventoryFocusingColor_NewParam;          // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A[0x2];                                       // 0x003A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x003C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetWeaponIndex_ReturnValue;               // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_MainPrepass) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_MainPrepass");
static_assert(sizeof(WeaponEquipmentWidget_C_MainPrepass) == 0x000050, "Wrong size on WeaponEquipmentWidget_C_MainPrepass");
static_assert(offsetof(WeaponEquipmentWidget_C_MainPrepass, BoundWidget) == 0x000000, "Member 'WeaponEquipmentWidget_C_MainPrepass::BoundWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_MainPrepass, m__bool_Variable) == 0x000008, "Member 'WeaponEquipmentWidget_C_MainPrepass::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_MainPrepass, m__struct_Variable) == 0x00000C, "Member 'WeaponEquipmentWidget_C_MainPrepass::m__struct_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_MainPrepass, CallFunc_IsFocus_ReturnValue) == 0x00001C, "Member 'WeaponEquipmentWidget_C_MainPrepass::CallFunc_IsFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_MainPrepass, CallFunc_IsXBoxOnePlatform_NewParam) == 0x00001D, "Member 'WeaponEquipmentWidget_C_MainPrepass::CallFunc_IsXBoxOnePlatform_NewParam' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_MainPrepass, CallFunc_InventoryFocusingColor_NewParam) == 0x000020, "Member 'WeaponEquipmentWidget_C_MainPrepass::CallFunc_InventoryFocusingColor_NewParam' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_MainPrepass, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000030, "Member 'WeaponEquipmentWidget_C_MainPrepass::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_MainPrepass, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'WeaponEquipmentWidget_C_MainPrepass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_MainPrepass, CallFunc_IsValid_ReturnValue2) == 0x000039, "Member 'WeaponEquipmentWidget_C_MainPrepass::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_MainPrepass, K2Node_Select_Default) == 0x00003C, "Member 'WeaponEquipmentWidget_C_MainPrepass::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_MainPrepass, CallFunc_GetWeaponIndex_ReturnValue) == 0x00004C, "Member 'WeaponEquipmentWidget_C_MainPrepass::CallFunc_GetWeaponIndex_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.GetEquipment
// 0x0028 (0x0028 - 0x0000)
struct WeaponEquipmentWidget_C_GetEquipment final
{
public:
	class AEquipment*                             Equipment_0;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue;           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AEquipment*                             CallFunc_GetEquipment_ReturnValue;                 // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_GetEquipment) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_GetEquipment");
static_assert(sizeof(WeaponEquipmentWidget_C_GetEquipment) == 0x000028, "Wrong size on WeaponEquipmentWidget_C_GetEquipment");
static_assert(offsetof(WeaponEquipmentWidget_C_GetEquipment, Equipment_0) == 0x000000, "Member 'WeaponEquipmentWidget_C_GetEquipment::Equipment_0' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetEquipment, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000008, "Member 'WeaponEquipmentWidget_C_GetEquipment::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetEquipment, CallFunc_GetInventoryFacade_ReturnValue) == 0x000010, "Member 'WeaponEquipmentWidget_C_GetEquipment::CallFunc_GetInventoryFacade_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetEquipment, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WeaponEquipmentWidget_C_GetEquipment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetEquipment, CallFunc_GetEquipment_ReturnValue) == 0x000020, "Member 'WeaponEquipmentWidget_C_GetEquipment::CallFunc_GetEquipment_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.OnChildSlotRefreshFocus
// 0x0078 (0x0078 - 0x0000)
struct WeaponEquipmentWidget_C_OnChildSlotRefreshFocus final
{
public:
	bool                                          m__bool_Variable;                                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindFirtFocusableWidgetIndex_Index;       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_FindFirtFocusableWidgetIndex_Index2;      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0020(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue;                     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusable_ReturnValue;                  // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_53[0x5];                                       // 0x0053(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue3;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3; // 0x0060(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue2;                    // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_OnChildSlotRefreshFocus");
static_assert(sizeof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus) == 0x000078, "Wrong size on WeaponEquipmentWidget_C_OnChildSlotRefreshFocus");
static_assert(offsetof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus, m__bool_Variable) == 0x000000, "Member 'WeaponEquipmentWidget_C_OnChildSlotRefreshFocus::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus, CallFunc_FindFirtFocusableWidgetIndex_Index) == 0x000004, "Member 'WeaponEquipmentWidget_C_OnChildSlotRefreshFocus::CallFunc_FindFirtFocusableWidgetIndex_Index' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus, CallFunc_FindFirtFocusableWidgetIndex_Index2) == 0x000008, "Member 'WeaponEquipmentWidget_C_OnChildSlotRefreshFocus::CallFunc_FindFirtFocusableWidgetIndex_Index2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000010, "Member 'WeaponEquipmentWidget_C_OnChildSlotRefreshFocus::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000018, "Member 'WeaponEquipmentWidget_C_OnChildSlotRefreshFocus::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000020, "Member 'WeaponEquipmentWidget_C_OnChildSlotRefreshFocus::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'WeaponEquipmentWidget_C_OnChildSlotRefreshFocus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus, CallFunc_SetFocus_ReturnValue) == 0x000031, "Member 'WeaponEquipmentWidget_C_OnChildSlotRefreshFocus::CallFunc_SetFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000038, "Member 'WeaponEquipmentWidget_C_OnChildSlotRefreshFocus::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000040, "Member 'WeaponEquipmentWidget_C_OnChildSlotRefreshFocus::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus, K2Node_DynamicCast_bSuccess2) == 0x000050, "Member 'WeaponEquipmentWidget_C_OnChildSlotRefreshFocus::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus, CallFunc_IsValid_ReturnValue) == 0x000051, "Member 'WeaponEquipmentWidget_C_OnChildSlotRefreshFocus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus, CallFunc_IsFocusable_ReturnValue) == 0x000052, "Member 'WeaponEquipmentWidget_C_OnChildSlotRefreshFocus::CallFunc_IsFocusable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus, CallFunc_GetFocusingChildWidget_ReturnValue3) == 0x000058, "Member 'WeaponEquipmentWidget_C_OnChildSlotRefreshFocus::CallFunc_GetFocusingChildWidget_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3) == 0x000060, "Member 'WeaponEquipmentWidget_C_OnChildSlotRefreshFocus::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus, K2Node_DynamicCast_bSuccess3) == 0x000070, "Member 'WeaponEquipmentWidget_C_OnChildSlotRefreshFocus::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_OnChildSlotRefreshFocus, CallFunc_SetFocus_ReturnValue2) == 0x000071, "Member 'WeaponEquipmentWidget_C_OnChildSlotRefreshFocus::CallFunc_SetFocus_ReturnValue2' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.StartSelfAttachmentPut
// 0x0050 (0x0050 - 0x0000)
struct WeaponEquipmentWidget_C_StartSelfAttachmentPut final
{
public:
	bool                                          bResult;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UInventoryWidget_C*                     CallFunc_GetInventoryWidget_InventoryWidget;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AEquipment*                             CallFunc_GetEquipment_Equipment;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponEquipmentSlotWidget_C*           CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindAttachableWeaponIndex_ReturnValue;    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponEquipmentSlotWidget_C*           CallFunc_Array_Get_Item2;                          // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_StartSelfAttachmentPut) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_StartSelfAttachmentPut");
static_assert(sizeof(WeaponEquipmentWidget_C_StartSelfAttachmentPut) == 0x000050, "Wrong size on WeaponEquipmentWidget_C_StartSelfAttachmentPut");
static_assert(offsetof(WeaponEquipmentWidget_C_StartSelfAttachmentPut, bResult) == 0x000000, "Member 'WeaponEquipmentWidget_C_StartSelfAttachmentPut::bResult' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_StartSelfAttachmentPut, m__int_Array_Index_Variable) == 0x000004, "Member 'WeaponEquipmentWidget_C_StartSelfAttachmentPut::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_StartSelfAttachmentPut, m__int_Loop_Counter_Variable) == 0x000008, "Member 'WeaponEquipmentWidget_C_StartSelfAttachmentPut::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_StartSelfAttachmentPut, CallFunc_GetInventoryWidget_InventoryWidget) == 0x000010, "Member 'WeaponEquipmentWidget_C_StartSelfAttachmentPut::CallFunc_GetInventoryWidget_InventoryWidget' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_StartSelfAttachmentPut, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'WeaponEquipmentWidget_C_StartSelfAttachmentPut::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_StartSelfAttachmentPut, CallFunc_GetEquipment_Equipment) == 0x000020, "Member 'WeaponEquipmentWidget_C_StartSelfAttachmentPut::CallFunc_GetEquipment_Equipment' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_StartSelfAttachmentPut, CallFunc_Array_Get_Item) == 0x000028, "Member 'WeaponEquipmentWidget_C_StartSelfAttachmentPut::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_StartSelfAttachmentPut, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'WeaponEquipmentWidget_C_StartSelfAttachmentPut::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_StartSelfAttachmentPut, CallFunc_FindAttachableWeaponIndex_ReturnValue) == 0x000034, "Member 'WeaponEquipmentWidget_C_StartSelfAttachmentPut::CallFunc_FindAttachableWeaponIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_StartSelfAttachmentPut, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'WeaponEquipmentWidget_C_StartSelfAttachmentPut::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_StartSelfAttachmentPut, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'WeaponEquipmentWidget_C_StartSelfAttachmentPut::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_StartSelfAttachmentPut, CallFunc_Array_Get_Item2) == 0x000040, "Member 'WeaponEquipmentWidget_C_StartSelfAttachmentPut::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_StartSelfAttachmentPut, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000048, "Member 'WeaponEquipmentWidget_C_StartSelfAttachmentPut::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.StopSelftattachmentPut
// 0x0020 (0x0020 - 0x0000)
struct WeaponEquipmentWidget_C_StopSelftattachmentPut final
{
public:
	int32                                         m__int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponEquipmentSlotWidget_C*           CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_StopSelftattachmentPut) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_StopSelftattachmentPut");
static_assert(sizeof(WeaponEquipmentWidget_C_StopSelftattachmentPut) == 0x000020, "Wrong size on WeaponEquipmentWidget_C_StopSelftattachmentPut");
static_assert(offsetof(WeaponEquipmentWidget_C_StopSelftattachmentPut, m__int_Array_Index_Variable) == 0x000000, "Member 'WeaponEquipmentWidget_C_StopSelftattachmentPut::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_StopSelftattachmentPut, m__int_Loop_Counter_Variable) == 0x000004, "Member 'WeaponEquipmentWidget_C_StopSelftattachmentPut::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_StopSelftattachmentPut, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'WeaponEquipmentWidget_C_StopSelftattachmentPut::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_StopSelftattachmentPut, CallFunc_Array_Length_ReturnValue) == 0x00000C, "Member 'WeaponEquipmentWidget_C_StopSelftattachmentPut::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_StopSelftattachmentPut, CallFunc_Array_Get_Item) == 0x000010, "Member 'WeaponEquipmentWidget_C_StopSelftattachmentPut::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_StopSelftattachmentPut, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WeaponEquipmentWidget_C_StopSelftattachmentPut::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.PutAttachment
// 0x0078 (0x0078 - 0x0000)
struct WeaponEquipmentWidget_C_PutAttachment final
{
public:
	class ATslCharacter*                          CallFunc_GetOwningTslCharacter_ReturnValue;        // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0008(0x0010)(ZeroConstructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0020(0x0010)(ZeroConstructor)
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttachableItem*                        CallFunc_GetSelfPutAttachment_GamepadadSelectedAttachableItem; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AInventory*                             CallFunc_GetInventory_ReturnValue;                 // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotContainerInterface> CallFunc_DoActionWithSlot_self_CastInput;          // 0x0058(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        CallFunc_DoActionWithSlot_Slot_CastInput;          // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_PutAttachment) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_PutAttachment");
static_assert(sizeof(WeaponEquipmentWidget_C_PutAttachment) == 0x000078, "Wrong size on WeaponEquipmentWidget_C_PutAttachment");
static_assert(offsetof(WeaponEquipmentWidget_C_PutAttachment, CallFunc_GetOwningTslCharacter_ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_PutAttachment::CallFunc_GetOwningTslCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_PutAttachment, CallFunc_Conv_IntToString_ReturnValue) == 0x000008, "Member 'WeaponEquipmentWidget_C_PutAttachment::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_PutAttachment, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'WeaponEquipmentWidget_C_PutAttachment::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_PutAttachment, CallFunc_Concat_StrStr_ReturnValue) == 0x000020, "Member 'WeaponEquipmentWidget_C_PutAttachment::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_PutAttachment, CallFunc_GetInventoryFacade_ReturnValue) == 0x000030, "Member 'WeaponEquipmentWidget_C_PutAttachment::CallFunc_GetInventoryFacade_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_PutAttachment, CallFunc_IsValid_ReturnValue2) == 0x000038, "Member 'WeaponEquipmentWidget_C_PutAttachment::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_PutAttachment, CallFunc_GetSelfPutAttachment_GamepadadSelectedAttachableItem) == 0x000040, "Member 'WeaponEquipmentWidget_C_PutAttachment::CallFunc_GetSelfPutAttachment_GamepadadSelectedAttachableItem' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_PutAttachment, CallFunc_GetInventory_ReturnValue) == 0x000048, "Member 'WeaponEquipmentWidget_C_PutAttachment::CallFunc_GetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_PutAttachment, CallFunc_IsValid_ReturnValue3) == 0x000050, "Member 'WeaponEquipmentWidget_C_PutAttachment::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_PutAttachment, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000051, "Member 'WeaponEquipmentWidget_C_PutAttachment::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_PutAttachment, CallFunc_DoActionWithSlot_self_CastInput) == 0x000058, "Member 'WeaponEquipmentWidget_C_PutAttachment::CallFunc_DoActionWithSlot_self_CastInput' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_PutAttachment, CallFunc_DoActionWithSlot_Slot_CastInput) == 0x000068, "Member 'WeaponEquipmentWidget_C_PutAttachment::CallFunc_DoActionWithSlot_Slot_CastInput' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.SelfUpAttachmentIndexUp
// 0x0068 (0x0068 - 0x0000)
struct WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp final
{
public:
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponEquipmentSlotWidget_C*           CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponEquipmentSlotWidget_C*           CallFunc_Array_Get_Item2;                          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AEquipment*                             CallFunc_GetEquipment_Equipment;                   // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAttachableItem*                        CallFunc_GetSelfPutAttachment_GamepadadSelectedAttachableItem; // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0030(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0040(0x0010)(ZeroConstructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x3];                                       // 0x0051(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindAttachableWeaponIndex_ReturnValue;    // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Loop;                                              // 0x0060(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp");
static_assert(sizeof(WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp) == 0x000068, "Wrong size on WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp");
static_assert(offsetof(WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp, CallFunc_Subtract_IntInt_ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp, CallFunc_Array_Get_Item) == 0x000008, "Member 'WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp, CallFunc_Array_Get_Item2) == 0x000010, "Member 'WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp, CallFunc_GetEquipment_Equipment) == 0x000018, "Member 'WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp::CallFunc_GetEquipment_Equipment' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp, CallFunc_GetSelfPutAttachment_GamepadadSelectedAttachableItem) == 0x000020, "Member 'WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp::CallFunc_GetSelfPutAttachment_GamepadadSelectedAttachableItem' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp, CallFunc_IsValid_ReturnValue) == 0x000028, "Member 'WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp, CallFunc_Conv_IntToString_ReturnValue) == 0x000030, "Member 'WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp, CallFunc_Concat_StrStr_ReturnValue) == 0x000040, "Member 'WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000050, "Member 'WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp, CallFunc_FindAttachableWeaponIndex_ReturnValue) == 0x000054, "Member 'WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp::CallFunc_FindAttachableWeaponIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000058, "Member 'WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp, CallFunc_Subtract_IntInt_ReturnValue2) == 0x00005C, "Member 'WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp, Loop) == 0x000060, "Member 'WeaponEquipmentWidget_C_SelfUpAttachmentIndexUp::Loop' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.Up
// 0x0088 (0x0088 - 0x0000)
struct WeaponEquipmentWidget_C_Up final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Up_ReturnValue;                           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x2];                                       // 0x0032(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFocusableUpChildIndex_Index;           // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue3;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue4;      // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue;                     // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3; // 0x0068(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue2;                    // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x007A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7B[0x1];                                       // 0x007B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp;                                              // 0x007C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         StartIndex;                                        // 0x0080(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_Up) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_Up");
static_assert(sizeof(WeaponEquipmentWidget_C_Up) == 0x000088, "Wrong size on WeaponEquipmentWidget_C_Up");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_Up::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000008, "Member 'WeaponEquipmentWidget_C_Up::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000010, "Member 'WeaponEquipmentWidget_C_Up::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WeaponEquipmentWidget_C_Up::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000028, "Member 'WeaponEquipmentWidget_C_Up::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, CallFunc_Up_ReturnValue) == 0x000030, "Member 'WeaponEquipmentWidget_C_Up::CallFunc_Up_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, CallFunc_IsValid_ReturnValue) == 0x000031, "Member 'WeaponEquipmentWidget_C_Up::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, CallFunc_GetFocusableUpChildIndex_Index) == 0x000034, "Member 'WeaponEquipmentWidget_C_Up::CallFunc_GetFocusableUpChildIndex_Index' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, CallFunc_GetFocusingChildWidget_ReturnValue3) == 0x000038, "Member 'WeaponEquipmentWidget_C_Up::CallFunc_GetFocusingChildWidget_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000040, "Member 'WeaponEquipmentWidget_C_Up::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, K2Node_DynamicCast_bSuccess2) == 0x000050, "Member 'WeaponEquipmentWidget_C_Up::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, CallFunc_GetFocusingChildWidget_ReturnValue4) == 0x000058, "Member 'WeaponEquipmentWidget_C_Up::CallFunc_GetFocusingChildWidget_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, CallFunc_SetFocus_ReturnValue) == 0x000060, "Member 'WeaponEquipmentWidget_C_Up::CallFunc_SetFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3) == 0x000068, "Member 'WeaponEquipmentWidget_C_Up::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, K2Node_DynamicCast_bSuccess3) == 0x000078, "Member 'WeaponEquipmentWidget_C_Up::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, CallFunc_SetFocus_ReturnValue2) == 0x000079, "Member 'WeaponEquipmentWidget_C_Up::CallFunc_SetFocus_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, CallFunc_NotEqual_IntInt_ReturnValue) == 0x00007A, "Member 'WeaponEquipmentWidget_C_Up::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, Temp) == 0x00007C, "Member 'WeaponEquipmentWidget_C_Up::Temp' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Up, StartIndex) == 0x000080, "Member 'WeaponEquipmentWidget_C_Up::StartIndex' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.SetFocus
// 0x0058 (0x0058 - 0x0000)
struct WeaponEquipmentWidget_C_SetFocus final
{
public:
	bool                                          NewFocus;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_FindFirtFocusableWidgetIndex_Index;       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue3;      // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0040(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0052(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue2;                    // 0x0053(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_SetFocus) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_SetFocus");
static_assert(sizeof(WeaponEquipmentWidget_C_SetFocus) == 0x000058, "Wrong size on WeaponEquipmentWidget_C_SetFocus");
static_assert(offsetof(WeaponEquipmentWidget_C_SetFocus, NewFocus) == 0x000000, "Member 'WeaponEquipmentWidget_C_SetFocus::NewFocus' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SetFocus, ReturnValue) == 0x000001, "Member 'WeaponEquipmentWidget_C_SetFocus::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SetFocus, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000008, "Member 'WeaponEquipmentWidget_C_SetFocus::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SetFocus, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000010, "Member 'WeaponEquipmentWidget_C_SetFocus::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SetFocus, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'WeaponEquipmentWidget_C_SetFocus::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SetFocus, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000028, "Member 'WeaponEquipmentWidget_C_SetFocus::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SetFocus, CallFunc_FindFirtFocusableWidgetIndex_Index) == 0x000030, "Member 'WeaponEquipmentWidget_C_SetFocus::CallFunc_FindFirtFocusableWidgetIndex_Index' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SetFocus, CallFunc_IsValid_ReturnValue) == 0x000034, "Member 'WeaponEquipmentWidget_C_SetFocus::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SetFocus, CallFunc_GetFocusingChildWidget_ReturnValue3) == 0x000038, "Member 'WeaponEquipmentWidget_C_SetFocus::CallFunc_GetFocusingChildWidget_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SetFocus, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000040, "Member 'WeaponEquipmentWidget_C_SetFocus::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SetFocus, K2Node_DynamicCast_bSuccess2) == 0x000050, "Member 'WeaponEquipmentWidget_C_SetFocus::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SetFocus, CallFunc_SetFocus_ReturnValue) == 0x000051, "Member 'WeaponEquipmentWidget_C_SetFocus::CallFunc_SetFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SetFocus, CallFunc_IsValid_ReturnValue2) == 0x000052, "Member 'WeaponEquipmentWidget_C_SetFocus::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_SetFocus, CallFunc_SetFocus_ReturnValue2) == 0x000053, "Member 'WeaponEquipmentWidget_C_SetFocus::CallFunc_SetFocus_ReturnValue2' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.Right
// 0x0078 (0x0078 - 0x0000)
struct WeaponEquipmentWidget_C_Right final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Right_ReturnValue;                        // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue;                     // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue3;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue2;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFocusableRightChildIndex_Index;        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue4;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp;                                              // 0x0074(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_Right) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_Right");
static_assert(sizeof(WeaponEquipmentWidget_C_Right) == 0x000078, "Wrong size on WeaponEquipmentWidget_C_Right");
static_assert(offsetof(WeaponEquipmentWidget_C_Right, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_Right::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Right, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000008, "Member 'WeaponEquipmentWidget_C_Right::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Right, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000010, "Member 'WeaponEquipmentWidget_C_Right::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Right, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000018, "Member 'WeaponEquipmentWidget_C_Right::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Right, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WeaponEquipmentWidget_C_Right::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Right, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000030, "Member 'WeaponEquipmentWidget_C_Right::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Right, K2Node_DynamicCast_bSuccess2) == 0x000040, "Member 'WeaponEquipmentWidget_C_Right::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Right, CallFunc_Right_ReturnValue) == 0x000041, "Member 'WeaponEquipmentWidget_C_Right::CallFunc_Right_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Right, CallFunc_SetFocus_ReturnValue) == 0x000042, "Member 'WeaponEquipmentWidget_C_Right::CallFunc_SetFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Right, CallFunc_GetFocusingChildWidget_ReturnValue3) == 0x000048, "Member 'WeaponEquipmentWidget_C_Right::CallFunc_GetFocusingChildWidget_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Right, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3) == 0x000050, "Member 'WeaponEquipmentWidget_C_Right::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Right, K2Node_DynamicCast_bSuccess3) == 0x000060, "Member 'WeaponEquipmentWidget_C_Right::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Right, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000061, "Member 'WeaponEquipmentWidget_C_Right::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Right, CallFunc_SetFocus_ReturnValue2) == 0x000062, "Member 'WeaponEquipmentWidget_C_Right::CallFunc_SetFocus_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Right, CallFunc_GetFocusableRightChildIndex_Index) == 0x000064, "Member 'WeaponEquipmentWidget_C_Right::CallFunc_GetFocusableRightChildIndex_Index' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Right, CallFunc_GetFocusingChildWidget_ReturnValue4) == 0x000068, "Member 'WeaponEquipmentWidget_C_Right::CallFunc_GetFocusingChildWidget_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Right, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'WeaponEquipmentWidget_C_Right::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Right, Temp) == 0x000074, "Member 'WeaponEquipmentWidget_C_Right::Temp' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.Left
// 0x0078 (0x0078 - 0x0000)
struct WeaponEquipmentWidget_C_Left final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Left_ReturnValue;                         // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue;                     // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_43[0x5];                                       // 0x0043(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue3;      // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3; // 0x0050(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0061(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue2;                    // 0x0062(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_63[0x1];                                       // 0x0063(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetFocusableLeftChildIdnex_Index;         // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue4;      // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x3];                                       // 0x0071(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp;                                              // 0x0074(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_Left) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_Left");
static_assert(sizeof(WeaponEquipmentWidget_C_Left) == 0x000078, "Wrong size on WeaponEquipmentWidget_C_Left");
static_assert(offsetof(WeaponEquipmentWidget_C_Left, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_Left::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Left, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000008, "Member 'WeaponEquipmentWidget_C_Left::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Left, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000010, "Member 'WeaponEquipmentWidget_C_Left::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Left, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000018, "Member 'WeaponEquipmentWidget_C_Left::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Left, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WeaponEquipmentWidget_C_Left::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Left, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000030, "Member 'WeaponEquipmentWidget_C_Left::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Left, K2Node_DynamicCast_bSuccess2) == 0x000040, "Member 'WeaponEquipmentWidget_C_Left::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Left, CallFunc_Left_ReturnValue) == 0x000041, "Member 'WeaponEquipmentWidget_C_Left::CallFunc_Left_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Left, CallFunc_SetFocus_ReturnValue) == 0x000042, "Member 'WeaponEquipmentWidget_C_Left::CallFunc_SetFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Left, CallFunc_GetFocusingChildWidget_ReturnValue3) == 0x000048, "Member 'WeaponEquipmentWidget_C_Left::CallFunc_GetFocusingChildWidget_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Left, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3) == 0x000050, "Member 'WeaponEquipmentWidget_C_Left::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Left, K2Node_DynamicCast_bSuccess3) == 0x000060, "Member 'WeaponEquipmentWidget_C_Left::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Left, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000061, "Member 'WeaponEquipmentWidget_C_Left::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Left, CallFunc_SetFocus_ReturnValue2) == 0x000062, "Member 'WeaponEquipmentWidget_C_Left::CallFunc_SetFocus_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Left, CallFunc_GetFocusableLeftChildIdnex_Index) == 0x000064, "Member 'WeaponEquipmentWidget_C_Left::CallFunc_GetFocusableLeftChildIdnex_Index' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Left, CallFunc_GetFocusingChildWidget_ReturnValue4) == 0x000068, "Member 'WeaponEquipmentWidget_C_Left::CallFunc_GetFocusingChildWidget_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Left, CallFunc_IsValid_ReturnValue) == 0x000070, "Member 'WeaponEquipmentWidget_C_Left::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Left, Temp) == 0x000074, "Member 'WeaponEquipmentWidget_C_Left::Temp' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.InputY
// 0x0001 (0x0001 - 0x0000)
struct WeaponEquipmentWidget_C_InputY final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_InputY) == 0x000001, "Wrong alignment on WeaponEquipmentWidget_C_InputY");
static_assert(sizeof(WeaponEquipmentWidget_C_InputY) == 0x000001, "Wrong size on WeaponEquipmentWidget_C_InputY");
static_assert(offsetof(WeaponEquipmentWidget_C_InputY, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_InputY::ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.InputX
// 0x0001 (0x0001 - 0x0000)
struct WeaponEquipmentWidget_C_InputX final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_InputX) == 0x000001, "Wrong alignment on WeaponEquipmentWidget_C_InputX");
static_assert(sizeof(WeaponEquipmentWidget_C_InputX) == 0x000001, "Wrong size on WeaponEquipmentWidget_C_InputX");
static_assert(offsetof(WeaponEquipmentWidget_C_InputX, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_InputX::ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.InputRT
// 0x0001 (0x0001 - 0x0000)
struct WeaponEquipmentWidget_C_InputRT final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_InputRT) == 0x000001, "Wrong alignment on WeaponEquipmentWidget_C_InputRT");
static_assert(sizeof(WeaponEquipmentWidget_C_InputRT) == 0x000001, "Wrong size on WeaponEquipmentWidget_C_InputRT");
static_assert(offsetof(WeaponEquipmentWidget_C_InputRT, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_InputRT::ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.InputRB
// 0x0001 (0x0001 - 0x0000)
struct WeaponEquipmentWidget_C_InputRB final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_InputRB) == 0x000001, "Wrong alignment on WeaponEquipmentWidget_C_InputRB");
static_assert(sizeof(WeaponEquipmentWidget_C_InputRB) == 0x000001, "Wrong size on WeaponEquipmentWidget_C_InputRB");
static_assert(offsetof(WeaponEquipmentWidget_C_InputRB, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_InputRB::ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.InputLT
// 0x0001 (0x0001 - 0x0000)
struct WeaponEquipmentWidget_C_InputLT final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_InputLT) == 0x000001, "Wrong alignment on WeaponEquipmentWidget_C_InputLT");
static_assert(sizeof(WeaponEquipmentWidget_C_InputLT) == 0x000001, "Wrong size on WeaponEquipmentWidget_C_InputLT");
static_assert(offsetof(WeaponEquipmentWidget_C_InputLT, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_InputLT::ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.InputLB
// 0x0001 (0x0001 - 0x0000)
struct WeaponEquipmentWidget_C_InputLB final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_InputLB) == 0x000001, "Wrong alignment on WeaponEquipmentWidget_C_InputLB");
static_assert(sizeof(WeaponEquipmentWidget_C_InputLB) == 0x000001, "Wrong size on WeaponEquipmentWidget_C_InputLB");
static_assert(offsetof(WeaponEquipmentWidget_C_InputLB, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_InputLB::ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.InputB
// 0x0030 (0x0030 - 0x0000)
struct WeaponEquipmentWidget_C_InputB final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputB_ReturnValue;                       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_InputB) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_InputB");
static_assert(sizeof(WeaponEquipmentWidget_C_InputB) == 0x000030, "Wrong size on WeaponEquipmentWidget_C_InputB");
static_assert(offsetof(WeaponEquipmentWidget_C_InputB, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_InputB::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_InputB, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000008, "Member 'WeaponEquipmentWidget_C_InputB::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_InputB, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WeaponEquipmentWidget_C_InputB::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_InputB, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000018, "Member 'WeaponEquipmentWidget_C_InputB::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_InputB, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WeaponEquipmentWidget_C_InputB::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_InputB, CallFunc_InputB_ReturnValue) == 0x000029, "Member 'WeaponEquipmentWidget_C_InputB::CallFunc_InputB_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.InputA
// 0x0030 (0x0030 - 0x0000)
struct WeaponEquipmentWidget_C_InputA final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_InputA_ReturnValue;                       // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_InputA) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_InputA");
static_assert(sizeof(WeaponEquipmentWidget_C_InputA) == 0x000030, "Wrong size on WeaponEquipmentWidget_C_InputA");
static_assert(offsetof(WeaponEquipmentWidget_C_InputA, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_InputA::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_InputA, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000008, "Member 'WeaponEquipmentWidget_C_InputA::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_InputA, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'WeaponEquipmentWidget_C_InputA::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_InputA, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000018, "Member 'WeaponEquipmentWidget_C_InputA::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_InputA, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WeaponEquipmentWidget_C_InputA::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_InputA, CallFunc_InputA_ReturnValue) == 0x000029, "Member 'WeaponEquipmentWidget_C_InputA::CallFunc_InputA_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.Down
// 0x0090 (0x0090 - 0x0000)
struct WeaponEquipmentWidget_C_Down final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue;       // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue2;      // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface; // 0x0018(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2; // 0x0030(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue;                     // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_SetFocus_ReturnValue2;                    // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_BoolToString_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor)
	int32                                         CallFunc_GetFocusableDownChildIndex_Index;         // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5C[0x4];                                       // 0x005C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue3;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x006C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x006D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x006E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6F[0x1];                                       // 0x006F(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetFocusingChildWidget_ReturnValue4;      // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslFocusableWidgetInterface> K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3; // 0x0078(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Down_ReturnValue;                         // 0x0089(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8A[0x2];                                       // 0x008A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp;                                              // 0x008C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_Down) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_Down");
static_assert(sizeof(WeaponEquipmentWidget_C_Down) == 0x000090, "Wrong size on WeaponEquipmentWidget_C_Down");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_Down::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, CallFunc_GetFocusingChildWidget_ReturnValue) == 0x000008, "Member 'WeaponEquipmentWidget_C_Down::CallFunc_GetFocusingChildWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, CallFunc_GetFocusingChildWidget_ReturnValue2) == 0x000010, "Member 'WeaponEquipmentWidget_C_Down::CallFunc_GetFocusingChildWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface) == 0x000018, "Member 'WeaponEquipmentWidget_C_Down::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'WeaponEquipmentWidget_C_Down::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2) == 0x000030, "Member 'WeaponEquipmentWidget_C_Down::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, K2Node_DynamicCast_bSuccess2) == 0x000040, "Member 'WeaponEquipmentWidget_C_Down::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, CallFunc_SetFocus_ReturnValue) == 0x000041, "Member 'WeaponEquipmentWidget_C_Down::CallFunc_SetFocus_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, CallFunc_SetFocus_ReturnValue2) == 0x000042, "Member 'WeaponEquipmentWidget_C_Down::CallFunc_SetFocus_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000043, "Member 'WeaponEquipmentWidget_C_Down::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, CallFunc_Conv_BoolToString_ReturnValue) == 0x000048, "Member 'WeaponEquipmentWidget_C_Down::CallFunc_Conv_BoolToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, CallFunc_GetFocusableDownChildIndex_Index) == 0x000058, "Member 'WeaponEquipmentWidget_C_Down::CallFunc_GetFocusableDownChildIndex_Index' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, CallFunc_GetFocusingChildWidget_ReturnValue3) == 0x000060, "Member 'WeaponEquipmentWidget_C_Down::CallFunc_GetFocusingChildWidget_ReturnValue3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, CallFunc_Array_Length_ReturnValue) == 0x000068, "Member 'WeaponEquipmentWidget_C_Down::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, CallFunc_IsValid_ReturnValue) == 0x00006C, "Member 'WeaponEquipmentWidget_C_Down::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, CallFunc_Less_IntInt_ReturnValue) == 0x00006D, "Member 'WeaponEquipmentWidget_C_Down::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, CallFunc_BooleanAND_ReturnValue) == 0x00006E, "Member 'WeaponEquipmentWidget_C_Down::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, CallFunc_GetFocusingChildWidget_ReturnValue4) == 0x000070, "Member 'WeaponEquipmentWidget_C_Down::CallFunc_GetFocusingChildWidget_ReturnValue4' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3) == 0x000078, "Member 'WeaponEquipmentWidget_C_Down::K2Node_DynamicCast_AsTsl_Focusable_Widget_Interface3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, K2Node_DynamicCast_bSuccess3) == 0x000088, "Member 'WeaponEquipmentWidget_C_Down::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, CallFunc_Down_ReturnValue) == 0x000089, "Member 'WeaponEquipmentWidget_C_Down::CallFunc_Down_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_Down, Temp) == 0x00008C, "Member 'WeaponEquipmentWidget_C_Down::Temp' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.GetFocusableLeftChildIdnex
// 0x0018 (0x0018 - 0x0000)
struct WeaponEquipmentWidget_C_GetFocusableLeftChildIdnex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponEquipmentSlotWidget_C*           CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusable_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_GetFocusableLeftChildIdnex) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_GetFocusableLeftChildIdnex");
static_assert(sizeof(WeaponEquipmentWidget_C_GetFocusableLeftChildIdnex) == 0x000018, "Wrong size on WeaponEquipmentWidget_C_GetFocusableLeftChildIdnex");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableLeftChildIdnex, Index_0) == 0x000000, "Member 'WeaponEquipmentWidget_C_GetFocusableLeftChildIdnex::Index_0' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableLeftChildIdnex, CallFunc_Array_Get_Item) == 0x000008, "Member 'WeaponEquipmentWidget_C_GetFocusableLeftChildIdnex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableLeftChildIdnex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'WeaponEquipmentWidget_C_GetFocusableLeftChildIdnex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableLeftChildIdnex, CallFunc_IsFocusable_ReturnValue) == 0x000011, "Member 'WeaponEquipmentWidget_C_GetFocusableLeftChildIdnex::CallFunc_IsFocusable_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.GetFocusableRightChildIndex
// 0x0018 (0x0018 - 0x0000)
struct WeaponEquipmentWidget_C_GetFocusableRightChildIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponEquipmentSlotWidget_C*           CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusable_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_GetFocusableRightChildIndex) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_GetFocusableRightChildIndex");
static_assert(sizeof(WeaponEquipmentWidget_C_GetFocusableRightChildIndex) == 0x000018, "Wrong size on WeaponEquipmentWidget_C_GetFocusableRightChildIndex");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableRightChildIndex, Index_0) == 0x000000, "Member 'WeaponEquipmentWidget_C_GetFocusableRightChildIndex::Index_0' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableRightChildIndex, CallFunc_Array_Get_Item) == 0x000008, "Member 'WeaponEquipmentWidget_C_GetFocusableRightChildIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableRightChildIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000010, "Member 'WeaponEquipmentWidget_C_GetFocusableRightChildIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableRightChildIndex, CallFunc_IsFocusable_ReturnValue) == 0x000011, "Member 'WeaponEquipmentWidget_C_GetFocusableRightChildIndex::CallFunc_IsFocusable_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.GetFocusableUpChildIndex
// 0x0030 (0x0030 - 0x0000)
struct WeaponEquipmentWidget_C_GetFocusableUpChildIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Variable;                                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponEquipmentSlotWidget_C*           CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusable_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Subtract_IntInt_ReturnValue2;             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp;                                              // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_GetFocusableUpChildIndex) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_GetFocusableUpChildIndex");
static_assert(sizeof(WeaponEquipmentWidget_C_GetFocusableUpChildIndex) == 0x000030, "Wrong size on WeaponEquipmentWidget_C_GetFocusableUpChildIndex");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableUpChildIndex, Index_0) == 0x000000, "Member 'WeaponEquipmentWidget_C_GetFocusableUpChildIndex::Index_0' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableUpChildIndex, m__int_Variable) == 0x000004, "Member 'WeaponEquipmentWidget_C_GetFocusableUpChildIndex::m__int_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableUpChildIndex, m__bool_Variable) == 0x000008, "Member 'WeaponEquipmentWidget_C_GetFocusableUpChildIndex::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableUpChildIndex, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000009, "Member 'WeaponEquipmentWidget_C_GetFocusableUpChildIndex::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableUpChildIndex, CallFunc_Subtract_IntInt_ReturnValue) == 0x00000C, "Member 'WeaponEquipmentWidget_C_GetFocusableUpChildIndex::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableUpChildIndex, CallFunc_Array_Get_Item) == 0x000010, "Member 'WeaponEquipmentWidget_C_GetFocusableUpChildIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableUpChildIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000018, "Member 'WeaponEquipmentWidget_C_GetFocusableUpChildIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableUpChildIndex, CallFunc_IsFocusable_ReturnValue) == 0x000019, "Member 'WeaponEquipmentWidget_C_GetFocusableUpChildIndex::CallFunc_IsFocusable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableUpChildIndex, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'WeaponEquipmentWidget_C_GetFocusableUpChildIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableUpChildIndex, CallFunc_Greater_IntInt_ReturnValue) == 0x00001B, "Member 'WeaponEquipmentWidget_C_GetFocusableUpChildIndex::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableUpChildIndex, CallFunc_Subtract_IntInt_ReturnValue2) == 0x00001C, "Member 'WeaponEquipmentWidget_C_GetFocusableUpChildIndex::CallFunc_Subtract_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableUpChildIndex, K2Node_Select_Default) == 0x000020, "Member 'WeaponEquipmentWidget_C_GetFocusableUpChildIndex::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableUpChildIndex, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'WeaponEquipmentWidget_C_GetFocusableUpChildIndex::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableUpChildIndex, Temp) == 0x000028, "Member 'WeaponEquipmentWidget_C_GetFocusableUpChildIndex::Temp' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.GetFocusableDownChildIndex
// 0x0028 (0x0028 - 0x0000)
struct WeaponEquipmentWidget_C_GetFocusableDownChildIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponEquipmentSlotWidget_C*           CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusable_ReturnValue;                  // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B[0x1];                                       // 0x001B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Temp;                                              // 0x0024(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_GetFocusableDownChildIndex) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_GetFocusableDownChildIndex");
static_assert(sizeof(WeaponEquipmentWidget_C_GetFocusableDownChildIndex) == 0x000028, "Wrong size on WeaponEquipmentWidget_C_GetFocusableDownChildIndex");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableDownChildIndex, Index_0) == 0x000000, "Member 'WeaponEquipmentWidget_C_GetFocusableDownChildIndex::Index_0' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableDownChildIndex, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000004, "Member 'WeaponEquipmentWidget_C_GetFocusableDownChildIndex::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableDownChildIndex, CallFunc_Array_Length_ReturnValue) == 0x000008, "Member 'WeaponEquipmentWidget_C_GetFocusableDownChildIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableDownChildIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WeaponEquipmentWidget_C_GetFocusableDownChildIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableDownChildIndex, CallFunc_Array_Get_Item) == 0x000010, "Member 'WeaponEquipmentWidget_C_GetFocusableDownChildIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableDownChildIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000018, "Member 'WeaponEquipmentWidget_C_GetFocusableDownChildIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableDownChildIndex, CallFunc_IsFocusable_ReturnValue) == 0x000019, "Member 'WeaponEquipmentWidget_C_GetFocusableDownChildIndex::CallFunc_IsFocusable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableDownChildIndex, CallFunc_BooleanAND_ReturnValue) == 0x00001A, "Member 'WeaponEquipmentWidget_C_GetFocusableDownChildIndex::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableDownChildIndex, CallFunc_Add_IntInt_ReturnValue2) == 0x00001C, "Member 'WeaponEquipmentWidget_C_GetFocusableDownChildIndex::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableDownChildIndex, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000020, "Member 'WeaponEquipmentWidget_C_GetFocusableDownChildIndex::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusableDownChildIndex, Temp) == 0x000024, "Member 'WeaponEquipmentWidget_C_GetFocusableDownChildIndex::Temp' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.FindFirtFocusableWidgetIndex
// 0x0028 (0x0028 - 0x0000)
struct WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponEquipmentSlotWidget_C*           CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusable_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex");
static_assert(sizeof(WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex) == 0x000028, "Wrong size on WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex");
static_assert(offsetof(WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex, Index_0) == 0x000000, "Member 'WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex::Index_0' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex, m__int_Array_Index_Variable) == 0x000004, "Member 'WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex, m__int_Loop_Counter_Variable) == 0x000008, "Member 'WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex, CallFunc_Array_Length_ReturnValue) == 0x000010, "Member 'WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex, CallFunc_Array_Get_Item) == 0x000018, "Member 'WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex, CallFunc_Less_IntInt_ReturnValue) == 0x000020, "Member 'WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex, CallFunc_IsFocusable_ReturnValue) == 0x000021, "Member 'WeaponEquipmentWidget_C_FindFirtFocusableWidgetIndex::CallFunc_IsFocusable_ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.IsFocus
// 0x0001 (0x0001 - 0x0000)
struct WeaponEquipmentWidget_C_IsFocus final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_IsFocus) == 0x000001, "Wrong alignment on WeaponEquipmentWidget_C_IsFocus");
static_assert(sizeof(WeaponEquipmentWidget_C_IsFocus) == 0x000001, "Wrong size on WeaponEquipmentWidget_C_IsFocus");
static_assert(offsetof(WeaponEquipmentWidget_C_IsFocus, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_IsFocus::ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.GetUpWidget
// 0x0008 (0x0008 - 0x0000)
struct WeaponEquipmentWidget_C_GetUpWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_GetUpWidget) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_GetUpWidget");
static_assert(sizeof(WeaponEquipmentWidget_C_GetUpWidget) == 0x000008, "Wrong size on WeaponEquipmentWidget_C_GetUpWidget");
static_assert(offsetof(WeaponEquipmentWidget_C_GetUpWidget, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_GetUpWidget::ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.GetRightWidget
// 0x0008 (0x0008 - 0x0000)
struct WeaponEquipmentWidget_C_GetRightWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_GetRightWidget) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_GetRightWidget");
static_assert(sizeof(WeaponEquipmentWidget_C_GetRightWidget) == 0x000008, "Wrong size on WeaponEquipmentWidget_C_GetRightWidget");
static_assert(offsetof(WeaponEquipmentWidget_C_GetRightWidget, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_GetRightWidget::ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.GetLeftWidget
// 0x0008 (0x0008 - 0x0000)
struct WeaponEquipmentWidget_C_GetLeftWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_GetLeftWidget) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_GetLeftWidget");
static_assert(sizeof(WeaponEquipmentWidget_C_GetLeftWidget) == 0x000008, "Wrong size on WeaponEquipmentWidget_C_GetLeftWidget");
static_assert(offsetof(WeaponEquipmentWidget_C_GetLeftWidget, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_GetLeftWidget::ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.GetFocusingChildWidget
// 0x0010 (0x0010 - 0x0000)
struct WeaponEquipmentWidget_C_GetFocusingChildWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	class UWeaponEquipmentSlotWidget_C*           CallFunc_Array_Get_Item;                           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_GetFocusingChildWidget) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_GetFocusingChildWidget");
static_assert(sizeof(WeaponEquipmentWidget_C_GetFocusingChildWidget) == 0x000010, "Wrong size on WeaponEquipmentWidget_C_GetFocusingChildWidget");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusingChildWidget, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_GetFocusingChildWidget::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_GetFocusingChildWidget, CallFunc_Array_Get_Item) == 0x000008, "Member 'WeaponEquipmentWidget_C_GetFocusingChildWidget::CallFunc_Array_Get_Item' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.GetDownWidget
// 0x0008 (0x0008 - 0x0000)
struct WeaponEquipmentWidget_C_GetDownWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_GetDownWidget) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_GetDownWidget");
static_assert(sizeof(WeaponEquipmentWidget_C_GetDownWidget) == 0x000008, "Wrong size on WeaponEquipmentWidget_C_GetDownWidget");
static_assert(offsetof(WeaponEquipmentWidget_C_GetDownWidget, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_GetDownWidget::ReturnValue' has a wrong offset!");

// Function WeaponEquipmentWidget.WeaponEquipmentWidget_C.IsFocusable
// 0x0020 (0x0020 - 0x0000)
struct WeaponEquipmentWidget_C_IsFocusable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponEquipmentSlotWidget_C*           CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFocusable_ReturnValue;                  // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WeaponEquipmentWidget_C_IsFocusable) == 0x000008, "Wrong alignment on WeaponEquipmentWidget_C_IsFocusable");
static_assert(sizeof(WeaponEquipmentWidget_C_IsFocusable) == 0x000020, "Wrong size on WeaponEquipmentWidget_C_IsFocusable");
static_assert(offsetof(WeaponEquipmentWidget_C_IsFocusable, ReturnValue) == 0x000000, "Member 'WeaponEquipmentWidget_C_IsFocusable::ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_IsFocusable, m__int_Array_Index_Variable) == 0x000004, "Member 'WeaponEquipmentWidget_C_IsFocusable::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_IsFocusable, m__int_Loop_Counter_Variable) == 0x000008, "Member 'WeaponEquipmentWidget_C_IsFocusable::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_IsFocusable, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'WeaponEquipmentWidget_C_IsFocusable::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_IsFocusable, CallFunc_Array_Get_Item) == 0x000010, "Member 'WeaponEquipmentWidget_C_IsFocusable::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_IsFocusable, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'WeaponEquipmentWidget_C_IsFocusable::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_IsFocusable, CallFunc_IsFocusable_ReturnValue) == 0x00001C, "Member 'WeaponEquipmentWidget_C_IsFocusable::CallFunc_IsFocusable_ReturnValue' has a wrong offset!");
static_assert(offsetof(WeaponEquipmentWidget_C_IsFocusable, CallFunc_Less_IntInt_ReturnValue) == 0x00001D, "Member 'WeaponEquipmentWidget_C_IsFocusable::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

