#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QualityComboBox

#include "Basic.hpp"

#include "ComboBoxOption_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_classes.hpp"
#include "SlateCore_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass QualityComboBox.QualityComboBox_C
// 0x0050 (0x0290 - 0x0240)
class UQualityComboBox_C : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UButton*                                Button_0;                                          // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UComboBoxString*                        ComboBox;                                          // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class FText                                   DisplayName;                                       // 0x0258(0x0018)(Edit, BlueprintVisible, ExposeOnSpawn)
	UMulticastDelegateProperty_                   OnSelectionChanged;                                // 0x0270(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	TArray<struct FComboBoxOption>                OptionList;                                        // 0x0280(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance)

public:
	void ExecuteUbergraph_QualityComboBox(int32 EntryPoint);
	void BndEvt__ComboBox_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType);
	void AddOption(const class FString& OptionName, const class FText& DisplayOptionName);
	void ClearOptions();
	void SetSelectedOption(const class FString& Option);
	void RemoveOption(const class FString& Option);
	class UWidget* On_ComboBox_GenerateWidget_0(const class FString& Item);
	bool Get_ComboBox_bIsEnabled_0();
	void GetDisplayTextByOption(class FText* DisplayText);

	void GetSelectedOption(class FString* SelectedOption) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"QualityComboBox_C">();
	}
	static class UQualityComboBox_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UQualityComboBox_C>();
	}
};
static_assert(alignof(UQualityComboBox_C) == 0x000008, "Wrong alignment on UQualityComboBox_C");
static_assert(sizeof(UQualityComboBox_C) == 0x000290, "Wrong size on UQualityComboBox_C");
static_assert(offsetof(UQualityComboBox_C, UberGraphFrame) == 0x000240, "Member 'UQualityComboBox_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UQualityComboBox_C, Button_0) == 0x000248, "Member 'UQualityComboBox_C::Button_0' has a wrong offset!");
static_assert(offsetof(UQualityComboBox_C, ComboBox) == 0x000250, "Member 'UQualityComboBox_C::ComboBox' has a wrong offset!");
static_assert(offsetof(UQualityComboBox_C, DisplayName) == 0x000258, "Member 'UQualityComboBox_C::DisplayName' has a wrong offset!");
static_assert(offsetof(UQualityComboBox_C, OnSelectionChanged) == 0x000270, "Member 'UQualityComboBox_C::OnSelectionChanged' has a wrong offset!");
static_assert(offsetof(UQualityComboBox_C, OptionList) == 0x000280, "Member 'UQualityComboBox_C::OptionList' has a wrong offset!");

}

