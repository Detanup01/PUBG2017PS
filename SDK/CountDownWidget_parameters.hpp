#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CountDownWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function CountDownWidget.CountDownWidget_C.Get_CountDownText_Text_0
// 0x0200 (0x0200 - 0x0000)
struct CountDownWidget_C_Get_CountDownText_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class ATslGameState*                          CallFunc_GetTslGameState_GameState;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_IntInt_ReturnValue;          // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Percent_IntInt_ReturnValue;               // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0028(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue2;              // 0x0040(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0058(0x0040)()
	int32                                         CallFunc_Divide_IntInt_ReturnValue;                // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue3;              // 0x00A0(0x0018)()
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x00C0(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0100(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData3;             // 0x0110(0x0040)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0150(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData4;             // 0x0168(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x01A8(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue2;                      // 0x01B8(0x0018)()
	class FText                                   PostfixText;                                       // 0x01D0(0x0018)(Edit)
	class FText                                   PrefixText;                                        // 0x01E8(0x0018)(Edit)
};
static_assert(alignof(CountDownWidget_C_Get_CountDownText_Text_0) == 0x000008, "Wrong alignment on CountDownWidget_C_Get_CountDownText_Text_0");
static_assert(sizeof(CountDownWidget_C_Get_CountDownText_Text_0) == 0x000200, "Wrong size on CountDownWidget_C_Get_CountDownText_Text_0");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, ReturnValue) == 0x000000, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, CallFunc_GetTslGameState_GameState) == 0x000018, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::CallFunc_GetTslGameState_GameState' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, CallFunc_GreaterEqual_IntInt_ReturnValue) == 0x000021, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::CallFunc_GreaterEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, CallFunc_Percent_IntInt_ReturnValue) == 0x000024, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::CallFunc_Percent_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000028, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, CallFunc_Conv_IntToText_ReturnValue2) == 0x000040, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::CallFunc_Conv_IntToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000058, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, CallFunc_Divide_IntInt_ReturnValue) == 0x000098, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::CallFunc_Divide_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, CallFunc_Conv_IntToText_ReturnValue3) == 0x0000A0, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::CallFunc_Conv_IntToText_ReturnValue3' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, K2Node_SwitchName_CmpSuccess) == 0x0000B8, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::K2Node_SwitchName_CmpSuccess' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, K2Node_MakeStruct_FormatArgumentData2) == 0x0000C0, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, K2Node_MakeArray_Array) == 0x000100, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, K2Node_MakeStruct_FormatArgumentData3) == 0x000110, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::K2Node_MakeStruct_FormatArgumentData3' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, CallFunc_Format_ReturnValue) == 0x000150, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, K2Node_MakeStruct_FormatArgumentData4) == 0x000168, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::K2Node_MakeStruct_FormatArgumentData4' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, K2Node_MakeArray_Array2) == 0x0001A8, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, CallFunc_Format_ReturnValue2) == 0x0001B8, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::CallFunc_Format_ReturnValue2' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, PostfixText) == 0x0001D0, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::PostfixText' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Text_0, PrefixText) == 0x0001E8, "Member 'CountDownWidget_C_Get_CountDownText_Text_0::PrefixText' has a wrong offset!");

// Function CountDownWidget.CountDownWidget_C.Get_CountDownText_Visibility_0
// 0x0018 (0x0018 - 0x0000)
struct CountDownWidget_C_Get_CountDownText_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslGameState*                          CallFunc_GetTslGameState_GameState;                // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CountDownWidget_C_Get_CountDownText_Visibility_0) == 0x000008, "Wrong alignment on CountDownWidget_C_Get_CountDownText_Visibility_0");
static_assert(sizeof(CountDownWidget_C_Get_CountDownText_Visibility_0) == 0x000018, "Wrong size on CountDownWidget_C_Get_CountDownText_Visibility_0");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Visibility_0, ReturnValue) == 0x000000, "Member 'CountDownWidget_C_Get_CountDownText_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Visibility_0, CallFunc_GetTslGameState_GameState) == 0x000008, "Member 'CountDownWidget_C_Get_CountDownText_Visibility_0::CallFunc_GetTslGameState_GameState' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Visibility_0, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'CountDownWidget_C_Get_CountDownText_Visibility_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_Get_CountDownText_Visibility_0, CallFunc_Greater_IntInt_ReturnValue) == 0x000011, "Member 'CountDownWidget_C_Get_CountDownText_Visibility_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function CountDownWidget.CountDownWidget_C.On_CountDownText_Prepass_0
// 0x0020 (0x0020 - 0x0000)
struct CountDownWidget_C_On_CountDownText_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Get_CountDownText_Text_0_ReturnValue;     // 0x0008(0x0018)()
};
static_assert(alignof(CountDownWidget_C_On_CountDownText_Prepass_0) == 0x000008, "Wrong alignment on CountDownWidget_C_On_CountDownText_Prepass_0");
static_assert(sizeof(CountDownWidget_C_On_CountDownText_Prepass_0) == 0x000020, "Wrong size on CountDownWidget_C_On_CountDownText_Prepass_0");
static_assert(offsetof(CountDownWidget_C_On_CountDownText_Prepass_0, BoundWidget) == 0x000000, "Member 'CountDownWidget_C_On_CountDownText_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_On_CountDownText_Prepass_0, CallFunc_Get_CountDownText_Text_0_ReturnValue) == 0x000008, "Member 'CountDownWidget_C_On_CountDownText_Prepass_0::CallFunc_Get_CountDownText_Text_0_ReturnValue' has a wrong offset!");

// Function CountDownWidget.CountDownWidget_C.On_CountDownBlock_Prepass_0
// 0x0010 (0x0010 - 0x0000)
struct CountDownWidget_C_On_CountDownBlock_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_Get_CountDownText_Visibility_0_ReturnValue; // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CountDownWidget_C_On_CountDownBlock_Prepass_0) == 0x000008, "Wrong alignment on CountDownWidget_C_On_CountDownBlock_Prepass_0");
static_assert(sizeof(CountDownWidget_C_On_CountDownBlock_Prepass_0) == 0x000010, "Wrong size on CountDownWidget_C_On_CountDownBlock_Prepass_0");
static_assert(offsetof(CountDownWidget_C_On_CountDownBlock_Prepass_0, BoundWidget) == 0x000000, "Member 'CountDownWidget_C_On_CountDownBlock_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_On_CountDownBlock_Prepass_0, CallFunc_Get_CountDownText_Visibility_0_ReturnValue) == 0x000008, "Member 'CountDownWidget_C_On_CountDownBlock_Prepass_0::CallFunc_Get_CountDownText_Visibility_0_ReturnValue' has a wrong offset!");

// Function CountDownWidget.CountDownWidget_C.GetTslGameState
// 0x0028 (0x0028 - 0x0000)
struct CountDownWidget_C_GetTslGameState final
{
public:
	class ATslGameState*                          GameState;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslGameState*                          K2Node_DynamicCast_AsTsl_Game_State;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CountDownWidget_C_GetTslGameState) == 0x000008, "Wrong alignment on CountDownWidget_C_GetTslGameState");
static_assert(sizeof(CountDownWidget_C_GetTslGameState) == 0x000028, "Wrong size on CountDownWidget_C_GetTslGameState");
static_assert(offsetof(CountDownWidget_C_GetTslGameState, GameState) == 0x000000, "Member 'CountDownWidget_C_GetTslGameState::GameState' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_GetTslGameState, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'CountDownWidget_C_GetTslGameState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_GetTslGameState, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'CountDownWidget_C_GetTslGameState::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_GetTslGameState, K2Node_DynamicCast_AsTsl_Game_State) == 0x000018, "Member 'CountDownWidget_C_GetTslGameState::K2Node_DynamicCast_AsTsl_Game_State' has a wrong offset!");
static_assert(offsetof(CountDownWidget_C_GetTslGameState, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'CountDownWidget_C_GetTslGameState::K2Node_DynamicCast_bSuccess' has a wrong offset!");

}

