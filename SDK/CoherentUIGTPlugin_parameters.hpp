#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CoherentUIGTPlugin

#include "Basic.hpp"


namespace SDK::Params
{

// Function CoherentUIGTPlugin.CoherentUIGTWidget.CreateJSEvent
// 0x0008 (0x0008 - 0x0000)
struct CoherentUIGTWidget_CreateJSEvent final
{
public:
	class UCoherentUIGTJSEvent*                   ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTWidget_CreateJSEvent) == 0x000008, "Wrong alignment on CoherentUIGTWidget_CreateJSEvent");
static_assert(sizeof(CoherentUIGTWidget_CreateJSEvent) == 0x000008, "Wrong size on CoherentUIGTWidget_CreateJSEvent");
static_assert(offsetof(CoherentUIGTWidget_CreateJSEvent, ReturnValue) == 0x000000, "Member 'CoherentUIGTWidget_CreateJSEvent::ReturnValue' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTWidget.Load
// 0x0010 (0x0010 - 0x0000)
struct CoherentUIGTWidget_Load final
{
public:
	class FString                                 path;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTWidget_Load) == 0x000008, "Wrong alignment on CoherentUIGTWidget_Load");
static_assert(sizeof(CoherentUIGTWidget_Load) == 0x000010, "Wrong size on CoherentUIGTWidget_Load");
static_assert(offsetof(CoherentUIGTWidget_Load, path) == 0x000000, "Member 'CoherentUIGTWidget_Load::path' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTWidget.SetClickThroughAlphaThreshold
// 0x0004 (0x0004 - 0x0000)
struct CoherentUIGTWidget_SetClickThroughAlphaThreshold final
{
public:
	float                                         threshold;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTWidget_SetClickThroughAlphaThreshold) == 0x000004, "Wrong alignment on CoherentUIGTWidget_SetClickThroughAlphaThreshold");
static_assert(sizeof(CoherentUIGTWidget_SetClickThroughAlphaThreshold) == 0x000004, "Wrong size on CoherentUIGTWidget_SetClickThroughAlphaThreshold");
static_assert(offsetof(CoherentUIGTWidget_SetClickThroughAlphaThreshold, threshold) == 0x000000, "Member 'CoherentUIGTWidget_SetClickThroughAlphaThreshold::threshold' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTWidget.ShowPaintRects
// 0x0001 (0x0001 - 0x0000)
struct CoherentUIGTWidget_ShowPaintRects final
{
public:
	bool                                          show;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTWidget_ShowPaintRects) == 0x000001, "Wrong alignment on CoherentUIGTWidget_ShowPaintRects");
static_assert(sizeof(CoherentUIGTWidget_ShowPaintRects) == 0x000001, "Wrong size on CoherentUIGTWidget_ShowPaintRects");
static_assert(offsetof(CoherentUIGTWidget_ShowPaintRects, show) == 0x000000, "Member 'CoherentUIGTWidget_ShowPaintRects::show' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTWidget.GetClickThroughAlphaThreshold
// 0x0004 (0x0004 - 0x0000)
struct CoherentUIGTWidget_GetClickThroughAlphaThreshold final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTWidget_GetClickThroughAlphaThreshold) == 0x000004, "Wrong alignment on CoherentUIGTWidget_GetClickThroughAlphaThreshold");
static_assert(sizeof(CoherentUIGTWidget_GetClickThroughAlphaThreshold) == 0x000004, "Wrong size on CoherentUIGTWidget_GetClickThroughAlphaThreshold");
static_assert(offsetof(CoherentUIGTWidget_GetClickThroughAlphaThreshold, ReturnValue) == 0x000000, "Member 'CoherentUIGTWidget_GetClickThroughAlphaThreshold::ReturnValue' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTWidget.HasRequestedView
// 0x0001 (0x0001 - 0x0000)
struct CoherentUIGTWidget_HasRequestedView final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTWidget_HasRequestedView) == 0x000001, "Wrong alignment on CoherentUIGTWidget_HasRequestedView");
static_assert(sizeof(CoherentUIGTWidget_HasRequestedView) == 0x000001, "Wrong size on CoherentUIGTWidget_HasRequestedView");
static_assert(offsetof(CoherentUIGTWidget_HasRequestedView, ReturnValue) == 0x000000, "Member 'CoherentUIGTWidget_HasRequestedView::ReturnValue' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTWidget.IsDocumentReady
// 0x0001 (0x0001 - 0x0000)
struct CoherentUIGTWidget_IsDocumentReady final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTWidget_IsDocumentReady) == 0x000001, "Wrong alignment on CoherentUIGTWidget_IsDocumentReady");
static_assert(sizeof(CoherentUIGTWidget_IsDocumentReady) == 0x000001, "Wrong size on CoherentUIGTWidget_IsDocumentReady");
static_assert(offsetof(CoherentUIGTWidget_IsDocumentReady, ReturnValue) == 0x000000, "Member 'CoherentUIGTWidget_IsDocumentReady::ReturnValue' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTWidget.IsReadyForBindings
// 0x0001 (0x0001 - 0x0000)
struct CoherentUIGTWidget_IsReadyForBindings final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTWidget_IsReadyForBindings) == 0x000001, "Wrong alignment on CoherentUIGTWidget_IsReadyForBindings");
static_assert(sizeof(CoherentUIGTWidget_IsReadyForBindings) == 0x000001, "Wrong size on CoherentUIGTWidget_IsReadyForBindings");
static_assert(offsetof(CoherentUIGTWidget_IsReadyForBindings, ReturnValue) == 0x000000, "Member 'CoherentUIGTWidget_IsReadyForBindings::ReturnValue' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTWidget.IsReadyToCreateView
// 0x0001 (0x0001 - 0x0000)
struct CoherentUIGTWidget_IsReadyToCreateView final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTWidget_IsReadyToCreateView) == 0x000001, "Wrong alignment on CoherentUIGTWidget_IsReadyToCreateView");
static_assert(sizeof(CoherentUIGTWidget_IsReadyToCreateView) == 0x000001, "Wrong size on CoherentUIGTWidget_IsReadyToCreateView");
static_assert(offsetof(CoherentUIGTWidget_IsReadyToCreateView, ReturnValue) == 0x000000, "Member 'CoherentUIGTWidget_IsReadyToCreateView::ReturnValue' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTWidget.IsTransparent
// 0x0001 (0x0001 - 0x0000)
struct CoherentUIGTWidget_IsTransparent final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTWidget_IsTransparent) == 0x000001, "Wrong alignment on CoherentUIGTWidget_IsTransparent");
static_assert(sizeof(CoherentUIGTWidget_IsTransparent) == 0x000001, "Wrong size on CoherentUIGTWidget_IsTransparent");
static_assert(offsetof(CoherentUIGTWidget_IsTransparent, ReturnValue) == 0x000000, "Member 'CoherentUIGTWidget_IsTransparent::ReturnValue' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTWidget.TriggerJSEvent
// 0x0018 (0x0018 - 0x0000)
struct CoherentUIGTWidget_TriggerJSEvent final
{
public:
	class FString                                 Name_0;                                            // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCoherentUIGTJSEvent*                   eventData;                                         // 0x0010(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTWidget_TriggerJSEvent) == 0x000008, "Wrong alignment on CoherentUIGTWidget_TriggerJSEvent");
static_assert(sizeof(CoherentUIGTWidget_TriggerJSEvent) == 0x000018, "Wrong size on CoherentUIGTWidget_TriggerJSEvent");
static_assert(offsetof(CoherentUIGTWidget_TriggerJSEvent, Name_0) == 0x000000, "Member 'CoherentUIGTWidget_TriggerJSEvent::Name_0' has a wrong offset!");
static_assert(offsetof(CoherentUIGTWidget_TriggerJSEvent, eventData) == 0x000010, "Member 'CoherentUIGTWidget_TriggerJSEvent::eventData' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTJSEvent.AddArray
// 0x0010 (0x0010 - 0x0000)
struct CoherentUIGTJSEvent_AddArray final
{
public:
	TArray<int32>                                 Array;                                             // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTJSEvent_AddArray) == 0x000008, "Wrong alignment on CoherentUIGTJSEvent_AddArray");
static_assert(sizeof(CoherentUIGTJSEvent_AddArray) == 0x000010, "Wrong size on CoherentUIGTJSEvent_AddArray");
static_assert(offsetof(CoherentUIGTJSEvent_AddArray, Array) == 0x000000, "Member 'CoherentUIGTJSEvent_AddArray::Array' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTJSEvent.AddBool
// 0x0001 (0x0001 - 0x0000)
struct CoherentUIGTJSEvent_AddBool final
{
public:
	bool                                          B;                                                 // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTJSEvent_AddBool) == 0x000001, "Wrong alignment on CoherentUIGTJSEvent_AddBool");
static_assert(sizeof(CoherentUIGTJSEvent_AddBool) == 0x000001, "Wrong size on CoherentUIGTJSEvent_AddBool");
static_assert(offsetof(CoherentUIGTJSEvent_AddBool, B) == 0x000000, "Member 'CoherentUIGTJSEvent_AddBool::B' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTJSEvent.AddByte
// 0x0001 (0x0001 - 0x0000)
struct CoherentUIGTJSEvent_AddByte final
{
public:
	uint8                                         byte;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTJSEvent_AddByte) == 0x000001, "Wrong alignment on CoherentUIGTJSEvent_AddByte");
static_assert(sizeof(CoherentUIGTJSEvent_AddByte) == 0x000001, "Wrong size on CoherentUIGTJSEvent_AddByte");
static_assert(offsetof(CoherentUIGTJSEvent_AddByte, byte) == 0x000000, "Member 'CoherentUIGTJSEvent_AddByte::byte' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTJSEvent.AddFloat
// 0x0004 (0x0004 - 0x0000)
struct CoherentUIGTJSEvent_AddFloat final
{
public:
	float                                         FL;                                                // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTJSEvent_AddFloat) == 0x000004, "Wrong alignment on CoherentUIGTJSEvent_AddFloat");
static_assert(sizeof(CoherentUIGTJSEvent_AddFloat) == 0x000004, "Wrong size on CoherentUIGTJSEvent_AddFloat");
static_assert(offsetof(CoherentUIGTJSEvent_AddFloat, FL) == 0x000000, "Member 'CoherentUIGTJSEvent_AddFloat::FL' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTJSEvent.AddInt32
// 0x0004 (0x0004 - 0x0000)
struct CoherentUIGTJSEvent_AddInt32 final
{
public:
	int32                                         integer;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTJSEvent_AddInt32) == 0x000004, "Wrong alignment on CoherentUIGTJSEvent_AddInt32");
static_assert(sizeof(CoherentUIGTJSEvent_AddInt32) == 0x000004, "Wrong size on CoherentUIGTJSEvent_AddInt32");
static_assert(offsetof(CoherentUIGTJSEvent_AddInt32, integer) == 0x000000, "Member 'CoherentUIGTJSEvent_AddInt32::integer' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTJSEvent.AddObject
// 0x0008 (0x0008 - 0x0000)
struct CoherentUIGTJSEvent_AddObject final
{
public:
	class UObject*                                Object;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTJSEvent_AddObject) == 0x000008, "Wrong alignment on CoherentUIGTJSEvent_AddObject");
static_assert(sizeof(CoherentUIGTJSEvent_AddObject) == 0x000008, "Wrong size on CoherentUIGTJSEvent_AddObject");
static_assert(offsetof(CoherentUIGTJSEvent_AddObject, Object) == 0x000000, "Member 'CoherentUIGTJSEvent_AddObject::Object' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTJSEvent.AddString
// 0x0010 (0x0010 - 0x0000)
struct CoherentUIGTJSEvent_AddString final
{
public:
	class FString                                 str;                                               // 0x0000(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTJSEvent_AddString) == 0x000008, "Wrong alignment on CoherentUIGTJSEvent_AddString");
static_assert(sizeof(CoherentUIGTJSEvent_AddString) == 0x000010, "Wrong size on CoherentUIGTJSEvent_AddString");
static_assert(offsetof(CoherentUIGTJSEvent_AddString, str) == 0x000000, "Member 'CoherentUIGTJSEvent_AddString::str' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTJSEvent.AddStructArg
// 0x0008 (0x0008 - 0x0000)
struct CoherentUIGTJSEvent_AddStructArg final
{
public:
	const class UStructProperty*                  Arg;                                               // 0x0000(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTJSEvent_AddStructArg) == 0x000008, "Wrong alignment on CoherentUIGTJSEvent_AddStructArg");
static_assert(sizeof(CoherentUIGTJSEvent_AddStructArg) == 0x000008, "Wrong size on CoherentUIGTJSEvent_AddStructArg");
static_assert(offsetof(CoherentUIGTJSEvent_AddStructArg, Arg) == 0x000000, "Member 'CoherentUIGTJSEvent_AddStructArg::Arg' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTBlueprintFunctionLibrary.AddArray
// 0x0020 (0x0020 - 0x0000)
struct CoherentUIGTBlueprintFunctionLibrary_AddArray final
{
public:
	class UCoherentUIGTJSEvent*                   JSEvent;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 Arg;                                               // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
	int32                                         ArrayType;                                         // 0x0018(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CoherentUIGTBlueprintFunctionLibrary_AddArray) == 0x000008, "Wrong alignment on CoherentUIGTBlueprintFunctionLibrary_AddArray");
static_assert(sizeof(CoherentUIGTBlueprintFunctionLibrary_AddArray) == 0x000020, "Wrong size on CoherentUIGTBlueprintFunctionLibrary_AddArray");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddArray, JSEvent) == 0x000000, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddArray::JSEvent' has a wrong offset!");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddArray, Arg) == 0x000008, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddArray::Arg' has a wrong offset!");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddArray, ArrayType) == 0x000018, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddArray::ArrayType' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTBlueprintFunctionLibrary.AddArrayOfStructs
// 0x0018 (0x0018 - 0x0000)
struct CoherentUIGTBlueprintFunctionLibrary_AddArrayOfStructs final
{
public:
	class UCoherentUIGTJSEvent*                   JSEvent;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<int32>                                 Arg;                                               // 0x0008(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTBlueprintFunctionLibrary_AddArrayOfStructs) == 0x000008, "Wrong alignment on CoherentUIGTBlueprintFunctionLibrary_AddArrayOfStructs");
static_assert(sizeof(CoherentUIGTBlueprintFunctionLibrary_AddArrayOfStructs) == 0x000018, "Wrong size on CoherentUIGTBlueprintFunctionLibrary_AddArrayOfStructs");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddArrayOfStructs, JSEvent) == 0x000000, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddArrayOfStructs::JSEvent' has a wrong offset!");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddArrayOfStructs, Arg) == 0x000008, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddArrayOfStructs::Arg' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTBlueprintFunctionLibrary.AddBool
// 0x0010 (0x0010 - 0x0000)
struct CoherentUIGTBlueprintFunctionLibrary_AddBool final
{
public:
	class UCoherentUIGTJSEvent*                   JSEvent;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          Arg;                                               // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CoherentUIGTBlueprintFunctionLibrary_AddBool) == 0x000008, "Wrong alignment on CoherentUIGTBlueprintFunctionLibrary_AddBool");
static_assert(sizeof(CoherentUIGTBlueprintFunctionLibrary_AddBool) == 0x000010, "Wrong size on CoherentUIGTBlueprintFunctionLibrary_AddBool");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddBool, JSEvent) == 0x000000, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddBool::JSEvent' has a wrong offset!");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddBool, Arg) == 0x000008, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddBool::Arg' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTBlueprintFunctionLibrary.AddByte
// 0x0010 (0x0010 - 0x0000)
struct CoherentUIGTBlueprintFunctionLibrary_AddByte final
{
public:
	class UCoherentUIGTJSEvent*                   JSEvent;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Arg;                                               // 0x0008(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CoherentUIGTBlueprintFunctionLibrary_AddByte) == 0x000008, "Wrong alignment on CoherentUIGTBlueprintFunctionLibrary_AddByte");
static_assert(sizeof(CoherentUIGTBlueprintFunctionLibrary_AddByte) == 0x000010, "Wrong size on CoherentUIGTBlueprintFunctionLibrary_AddByte");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddByte, JSEvent) == 0x000000, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddByte::JSEvent' has a wrong offset!");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddByte, Arg) == 0x000008, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddByte::Arg' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTBlueprintFunctionLibrary.AddFloat
// 0x0010 (0x0010 - 0x0000)
struct CoherentUIGTBlueprintFunctionLibrary_AddFloat final
{
public:
	class UCoherentUIGTJSEvent*                   JSEvent;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Arg;                                               // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CoherentUIGTBlueprintFunctionLibrary_AddFloat) == 0x000008, "Wrong alignment on CoherentUIGTBlueprintFunctionLibrary_AddFloat");
static_assert(sizeof(CoherentUIGTBlueprintFunctionLibrary_AddFloat) == 0x000010, "Wrong size on CoherentUIGTBlueprintFunctionLibrary_AddFloat");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddFloat, JSEvent) == 0x000000, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddFloat::JSEvent' has a wrong offset!");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddFloat, Arg) == 0x000008, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddFloat::Arg' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTBlueprintFunctionLibrary.AddInt32
// 0x0010 (0x0010 - 0x0000)
struct CoherentUIGTBlueprintFunctionLibrary_AddInt32 final
{
public:
	class UCoherentUIGTJSEvent*                   JSEvent;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Arg;                                               // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CoherentUIGTBlueprintFunctionLibrary_AddInt32) == 0x000008, "Wrong alignment on CoherentUIGTBlueprintFunctionLibrary_AddInt32");
static_assert(sizeof(CoherentUIGTBlueprintFunctionLibrary_AddInt32) == 0x000010, "Wrong size on CoherentUIGTBlueprintFunctionLibrary_AddInt32");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddInt32, JSEvent) == 0x000000, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddInt32::JSEvent' has a wrong offset!");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddInt32, Arg) == 0x000008, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddInt32::Arg' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTBlueprintFunctionLibrary.AddObject
// 0x0010 (0x0010 - 0x0000)
struct CoherentUIGTBlueprintFunctionLibrary_AddObject final
{
public:
	class UCoherentUIGTJSEvent*                   JSEvent;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UObject*                                Arg;                                               // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTBlueprintFunctionLibrary_AddObject) == 0x000008, "Wrong alignment on CoherentUIGTBlueprintFunctionLibrary_AddObject");
static_assert(sizeof(CoherentUIGTBlueprintFunctionLibrary_AddObject) == 0x000010, "Wrong size on CoherentUIGTBlueprintFunctionLibrary_AddObject");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddObject, JSEvent) == 0x000000, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddObject::JSEvent' has a wrong offset!");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddObject, Arg) == 0x000008, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddObject::Arg' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTBlueprintFunctionLibrary.AddString
// 0x0018 (0x0018 - 0x0000)
struct CoherentUIGTBlueprintFunctionLibrary_AddString final
{
public:
	class UCoherentUIGTJSEvent*                   JSEvent;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class FString                                 Arg;                                               // 0x0008(0x0010)(Parm, ZeroConstructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTBlueprintFunctionLibrary_AddString) == 0x000008, "Wrong alignment on CoherentUIGTBlueprintFunctionLibrary_AddString");
static_assert(sizeof(CoherentUIGTBlueprintFunctionLibrary_AddString) == 0x000018, "Wrong size on CoherentUIGTBlueprintFunctionLibrary_AddString");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddString, JSEvent) == 0x000000, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddString::JSEvent' has a wrong offset!");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddString, Arg) == 0x000008, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddString::Arg' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTBlueprintFunctionLibrary.AddStructArg
// 0x0010 (0x0010 - 0x0000)
struct CoherentUIGTBlueprintFunctionLibrary_AddStructArg final
{
public:
	class UCoherentUIGTJSEvent*                   JSEvent;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	const class UStructProperty*                  Arg;                                               // 0x0008(0x0008)(ConstParm, Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTBlueprintFunctionLibrary_AddStructArg) == 0x000008, "Wrong alignment on CoherentUIGTBlueprintFunctionLibrary_AddStructArg");
static_assert(sizeof(CoherentUIGTBlueprintFunctionLibrary_AddStructArg) == 0x000010, "Wrong size on CoherentUIGTBlueprintFunctionLibrary_AddStructArg");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddStructArg, JSEvent) == 0x000000, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddStructArg::JSEvent' has a wrong offset!");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_AddStructArg, Arg) == 0x000008, "Member 'CoherentUIGTBlueprintFunctionLibrary_AddStructArg::Arg' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTBlueprintFunctionLibrary.CreateJSEvent
// 0x0010 (0x0010 - 0x0000)
struct CoherentUIGTBlueprintFunctionLibrary_CreateJSEvent final
{
public:
	class UObject*                                WorldContextObject;                                // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UCoherentUIGTJSEvent*                   ReturnValue;                                       // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTBlueprintFunctionLibrary_CreateJSEvent) == 0x000008, "Wrong alignment on CoherentUIGTBlueprintFunctionLibrary_CreateJSEvent");
static_assert(sizeof(CoherentUIGTBlueprintFunctionLibrary_CreateJSEvent) == 0x000010, "Wrong size on CoherentUIGTBlueprintFunctionLibrary_CreateJSEvent");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_CreateJSEvent, WorldContextObject) == 0x000000, "Member 'CoherentUIGTBlueprintFunctionLibrary_CreateJSEvent::WorldContextObject' has a wrong offset!");
static_assert(offsetof(CoherentUIGTBlueprintFunctionLibrary_CreateJSEvent, ReturnValue) == 0x000008, "Member 'CoherentUIGTBlueprintFunctionLibrary_CreateJSEvent::ReturnValue' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTJSPayload.GetBool
// 0x0008 (0x0008 - 0x0000)
struct CoherentUIGTJSPayload_GetBool final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	bool                                          ReturnValue;                                       // 0x0004(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(CoherentUIGTJSPayload_GetBool) == 0x000004, "Wrong alignment on CoherentUIGTJSPayload_GetBool");
static_assert(sizeof(CoherentUIGTJSPayload_GetBool) == 0x000008, "Wrong size on CoherentUIGTJSPayload_GetBool");
static_assert(offsetof(CoherentUIGTJSPayload_GetBool, Index_0) == 0x000000, "Member 'CoherentUIGTJSPayload_GetBool::Index_0' has a wrong offset!");
static_assert(offsetof(CoherentUIGTJSPayload_GetBool, ReturnValue) == 0x000004, "Member 'CoherentUIGTJSPayload_GetBool::ReturnValue' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTJSPayload.GetInt32
// 0x0008 (0x0008 - 0x0000)
struct CoherentUIGTJSPayload_GetInt32 final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTJSPayload_GetInt32) == 0x000004, "Wrong alignment on CoherentUIGTJSPayload_GetInt32");
static_assert(sizeof(CoherentUIGTJSPayload_GetInt32) == 0x000008, "Wrong size on CoherentUIGTJSPayload_GetInt32");
static_assert(offsetof(CoherentUIGTJSPayload_GetInt32, Index_0) == 0x000000, "Member 'CoherentUIGTJSPayload_GetInt32::Index_0' has a wrong offset!");
static_assert(offsetof(CoherentUIGTJSPayload_GetInt32, ReturnValue) == 0x000004, "Member 'CoherentUIGTJSPayload_GetInt32::ReturnValue' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTJSPayload.GetNumber
// 0x0008 (0x0008 - 0x0000)
struct CoherentUIGTJSPayload_GetNumber final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         ReturnValue;                                       // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTJSPayload_GetNumber) == 0x000004, "Wrong alignment on CoherentUIGTJSPayload_GetNumber");
static_assert(sizeof(CoherentUIGTJSPayload_GetNumber) == 0x000008, "Wrong size on CoherentUIGTJSPayload_GetNumber");
static_assert(offsetof(CoherentUIGTJSPayload_GetNumber, Index_0) == 0x000000, "Member 'CoherentUIGTJSPayload_GetNumber::Index_0' has a wrong offset!");
static_assert(offsetof(CoherentUIGTJSPayload_GetNumber, ReturnValue) == 0x000004, "Member 'CoherentUIGTJSPayload_GetNumber::ReturnValue' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTJSPayload.GetString
// 0x0018 (0x0018 - 0x0000)
struct CoherentUIGTJSPayload_GetString final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 ReturnValue;                                       // 0x0008(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTJSPayload_GetString) == 0x000008, "Wrong alignment on CoherentUIGTJSPayload_GetString");
static_assert(sizeof(CoherentUIGTJSPayload_GetString) == 0x000018, "Wrong size on CoherentUIGTJSPayload_GetString");
static_assert(offsetof(CoherentUIGTJSPayload_GetString, Index_0) == 0x000000, "Member 'CoherentUIGTJSPayload_GetString::Index_0' has a wrong offset!");
static_assert(offsetof(CoherentUIGTJSPayload_GetString, ReturnValue) == 0x000008, "Member 'CoherentUIGTJSPayload_GetString::ReturnValue' has a wrong offset!");

// Function CoherentUIGTPlugin.CoherentUIGTJSPayload.ReadObject
// 0x0010 (0x0010 - 0x0000)
struct CoherentUIGTJSPayload_ReadObject final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                Object;                                            // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(CoherentUIGTJSPayload_ReadObject) == 0x000008, "Wrong alignment on CoherentUIGTJSPayload_ReadObject");
static_assert(sizeof(CoherentUIGTJSPayload_ReadObject) == 0x000010, "Wrong size on CoherentUIGTJSPayload_ReadObject");
static_assert(offsetof(CoherentUIGTJSPayload_ReadObject, Index_0) == 0x000000, "Member 'CoherentUIGTJSPayload_ReadObject::Index_0' has a wrong offset!");
static_assert(offsetof(CoherentUIGTJSPayload_ReadObject, Object) == 0x000008, "Member 'CoherentUIGTJSPayload_ReadObject::Object' has a wrong offset!");

}

