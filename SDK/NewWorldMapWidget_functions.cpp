#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: NewWorldMapWidget

#include "Basic.hpp"

#include "NewWorldMapWidget_classes.hpp"
#include "NewWorldMapWidget_parameters.hpp"


namespace SDK
{

// Function NewWorldMapWidget.NewWorldMapWidget_C.ExecuteUbergraph_NewWorldMapWidget
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::ExecuteUbergraph_NewWorldMapWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "ExecuteUbergraph_NewWorldMapWidget");

	Params::NewWorldMapWidget_C_ExecuteUbergraph_NewWorldMapWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.OnInputAxis
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Scale                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::OnInputAxis(float Scale)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "OnInputAxis");

	Params::NewWorldMapWidget_C_OnInputAxis Parms{};

	Parms.Scale = Scale;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UNewWorldMapWidget_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UNewWorldMapWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.MovePosition
// (BlueprintCallable, BlueprintEvent)

void UNewWorldMapWidget_C::MovePosition()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "MovePosition");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.BndEvt__RestoreHelpButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UNewWorldMapWidget_C::BndEvt__RestoreHelpButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "BndEvt__RestoreHelpButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.BndEvt__MinimizeHelpButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UNewWorldMapWidget_C::BndEvt__MinimizeHelpButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "BndEvt__MinimizeHelpButton_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.BndEvt__Button_77_K2Node_ComponentBoundEvent_240_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UNewWorldMapWidget_C::BndEvt__Button_77_K2Node_ComponentBoundEvent_240_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "BndEvt__Button_77_K2Node_ComponentBoundEvent_240_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.StartChangeMapSize
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bIsPad                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::StartChangeMapSize(bool bIsPad)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "StartChangeMapSize");

	Params::NewWorldMapWidget_C_StartChangeMapSize Parms{};

	Parms.bIsPad = bIsPad;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "Tick");

	Params::NewWorldMapWidget_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.OnMarkerForReplay
// (BlueprintCallable, BlueprintEvent)

void UNewWorldMapWidget_C::OnMarkerForReplay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "OnMarkerForReplay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.UpdateZoom
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   ZoomOffset                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::UpdateZoom(float ZoomOffset)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "UpdateZoom");

	Params::NewWorldMapWidget_C_UpdateZoom Parms{};

	Parms.ZoomOffset = ZoomOffset;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.OnMouseWheel
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UNewWorldMapWidget_C::OnMouseWheel(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "OnMouseWheel");

	Params::NewWorldMapWidget_C_OnMouseWheel Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.UpdateMap
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        MapSize                                                (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::UpdateMap(const struct FVector2D& MapSize)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "UpdateMap");

	Params::NewWorldMapWidget_C_UpdateMap Parms{};

	Parms.MapSize = std::move(MapSize);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.InitializeWorldMap
// (Public, BlueprintCallable, BlueprintEvent)

void UNewWorldMapWidget_C::InitializeWorldMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "InitializeWorldMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.OnMouseButtonDown
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UNewWorldMapWidget_C::OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "OnMouseButtonDown");

	Params::NewWorldMapWidget_C_OnMouseButtonDown Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.OnMouseMove
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UNewWorldMapWidget_C::OnMouseMove(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "OnMouseMove");

	Params::NewWorldMapWidget_C_OnMouseMove Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.OnMouseButtonUp
// (BlueprintCosmetic, Event, Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    MouseEvent                                             (ConstParm, Parm, OutParm, ReferenceParm)
// struct FEventReply                      ReturnValue                                            (Parm, OutParm, ReturnParm)

struct FEventReply UNewWorldMapWidget_C::OnMouseButtonUp(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "OnMouseButtonUp");

	Params::NewWorldMapWidget_C_OnMouseButtonUp Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.MouseEvent = std::move(MouseEvent);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.GetZoomRange
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   ZoomMin                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   ZoomMax                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::GetZoomRange(float* ZoomMin, float* ZoomMax)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "GetZoomRange");

	Params::NewWorldMapWidget_C_GetZoomRange Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (ZoomMin != nullptr)
		*ZoomMin = Parms.ZoomMin;

	if (ZoomMax != nullptr)
		*ZoomMax = Parms.ZoomMax;
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.TickChangeMapSize
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::TickChangeMapSize(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "TickChangeMapSize");

	Params::NewWorldMapWidget_C_TickChangeMapSize Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.ClampPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D                        Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector2D                        ConvertedPosition                                      (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::ClampPosition(const struct FVector2D& Position, struct FVector2D* ConvertedPosition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "ClampPosition");

	Params::NewWorldMapWidget_C_ClampPosition Parms{};

	Parms.Position = std::move(Position);

	UObject::ProcessEvent(Func, &Parms);

	if (ConvertedPosition != nullptr)
		*ConvertedPosition = std::move(Parms.ConvertedPosition);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.IsInMapWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D                        Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsIn                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::IsInMapWidget(const struct FVector2D& Position, bool* IsIn)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "IsInMapWidget");

	Params::NewWorldMapWidget_C_IsInMapWidget Parms{};

	Parms.Position = std::move(Position);

	UObject::ProcessEvent(Func, &Parms);

	if (IsIn != nullptr)
		*IsIn = Parms.IsIn;
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.TickMapPositionMove
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::TickMapPositionMove(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "TickMapPositionMove");

	Params::NewWorldMapWidget_C_TickMapPositionMove Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.PlayFadeInAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Playback_Speed                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::PlayFadeInAnim(float Playback_Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "PlayFadeInAnim");

	Params::NewWorldMapWidget_C_PlayFadeInAnim Parms{};

	Parms.Playback_Speed = Playback_Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.UpdateMapAlignment
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Aligment                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector2D                        Size                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::UpdateMapAlignment(const struct FVector2D& Aligment, const struct FVector2D& Size)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "UpdateMapAlignment");

	Params::NewWorldMapWidget_C_UpdateMapAlignment Parms{};

	Parms.Aligment = std::move(Aligment);
	Parms.Size = std::move(Size);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.TestClear
// (Public, BlueprintCallable, BlueprintEvent)

void UNewWorldMapWidget_C::TestClear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "TestClear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.GetMapWidgetScreenLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FVector2D                        Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector2D                        LeftTop                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector2D                        RightBottom                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::GetMapWidgetScreenLocation(const struct FVector2D& Position, struct FVector2D* LeftTop, struct FVector2D* RightBottom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "GetMapWidgetScreenLocation");

	Params::NewWorldMapWidget_C_GetMapWidgetScreenLocation Parms{};

	Parms.Position = std::move(Position);

	UObject::ProcessEvent(Func, &Parms);

	if (LeftTop != nullptr)
		*LeftTop = std::move(Parms.LeftTop);

	if (RightBottom != nullptr)
		*RightBottom = std::move(Parms.RightBottom);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.InitNewWorldMapWidget
// (Public, BlueprintCallable, BlueprintEvent)

void UNewWorldMapWidget_C::InitNewWorldMapWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "InitNewWorldMapWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.DestoryNewWorldMapWidget
// (Public, BlueprintCallable, BlueprintEvent)

void UNewWorldMapWidget_C::DestoryNewWorldMapWidget()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "DestoryNewWorldMapWidget");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.OnMarker
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UNewWorldMapWidget_C::OnMarker()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "OnMarker");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.MoveMapGrid
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        AdditionalPos                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::MoveMapGrid(const struct FVector2D& AdditionalPos)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "MoveMapGrid");

	Params::NewWorldMapWidget_C_MoveMapGrid Parms{};

	Parms.AdditionalPos = std::move(AdditionalPos);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.OnMapMove
// (Public, BlueprintCallable, BlueprintEvent)

void UNewWorldMapWidget_C::OnMapMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "OnMapMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.OffMapMove
// (Public, BlueprintCallable, BlueprintEvent)

void UNewWorldMapWidget_C::OffMapMove()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "OffMapMove");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.MapMoveX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::MapMoveX(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "MapMoveX");

	Params::NewWorldMapWidget_C_MapMoveX Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.MapMoveY
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::MapMoveY(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "MapMoveY");

	Params::NewWorldMapWidget_C_MapMoveY Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.MapZoom
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AdditaionalZoom                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::MapZoom(float AdditaionalZoom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "MapZoom");

	Params::NewWorldMapWidget_C_MapZoom Parms{};

	Parms.AdditaionalZoom = AdditaionalZoom;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.MapMoveGamepadX
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::MapMoveGamepadX(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "MapMoveGamepadX");

	Params::NewWorldMapWidget_C_MapMoveGamepadX Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.MapMoveGamepadY
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Value                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::MapMoveGamepadY(float Value)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "MapMoveGamepadY");

	Params::NewWorldMapWidget_C_MapMoveGamepadY Parms{};

	Parms.Value = Value;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.OnPrepass_0
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::OnPrepass_0(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "OnPrepass_0");

	Params::NewWorldMapWidget_C_OnPrepass_0 Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.OnMarkerDelete
// (Public, BlueprintCallable, BlueprintEvent)

void UNewWorldMapWidget_C::OnMarkerDelete()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "OnMarkerDelete");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.OnPutMarkerPad
// (Public, BlueprintCallable, BlueprintEvent)

void UNewWorldMapWidget_C::OnPutMarkerPad()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "OnPutMarkerPad");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.MapZoomPad
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   AdditaionalZoom                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::MapZoomPad(float AdditaionalZoom)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "MapZoomPad");

	Params::NewWorldMapWidget_C_MapZoomPad Parms{};

	Parms.AdditaionalZoom = AdditaionalZoom;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.OnPadGuideMoveingReayPressed
// (Public, BlueprintCallable, BlueprintEvent)

void UNewWorldMapWidget_C::OnPadGuideMoveingReayPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "OnPadGuideMoveingReayPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.OnPadGuideMoveingReayReleased
// (Public, BlueprintCallable, BlueprintEvent)

void UNewWorldMapWidget_C::OnPadGuideMoveingReayReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "OnPadGuideMoveingReayReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.PadGuideMoveUp
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Add                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::PadGuideMoveUp(float Add)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "PadGuideMoveUp");

	Params::NewWorldMapWidget_C_PadGuideMoveUp Parms{};

	Parms.Add = Add;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.PadGuideMoveRight
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Add                                                    (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::PadGuideMoveRight(float Add)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "PadGuideMoveRight");

	Params::NewWorldMapWidget_C_PadGuideMoveRight Parms{};

	Parms.Add = Add;

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.CheckReplayStatus
// (Public, BlueprintCallable, BlueprintEvent)

void UNewWorldMapWidget_C::CheckReplayStatus()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "CheckReplayStatus");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.OnHideWorldMap
// (Public, BlueprintCallable, BlueprintEvent)

void UNewWorldMapWidget_C::OnHideWorldMap()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "OnHideWorldMap");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.SetMapGridPositoin
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        Position                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::SetMapGridPositoin(const struct FVector2D& Position)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "SetMapGridPositoin");

	Params::NewWorldMapWidget_C_SetMapGridPositoin Parms{};

	Parms.Position = std::move(Position);

	UObject::ProcessEvent(Func, &Parms);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.OnMoveMapGridViewCenterToMyIconCenter
// (Public, BlueprintCallable, BlueprintEvent)

void UNewWorldMapWidget_C::OnMoveMapGridViewCenterToMyIconCenter()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "OnMoveMapGridViewCenterToMyIconCenter");

	UObject::ProcessEvent(Func, nullptr);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.GetMapSize
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// float                                   Zoom                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector2D                        MapSize                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::GetMapSize(float Zoom, struct FVector2D* MapSize) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "GetMapSize");

	Params::NewWorldMapWidget_C_GetMapSize Parms{};

	Parms.Zoom = Zoom;

	UObject::ProcessEvent(Func, &Parms);

	if (MapSize != nullptr)
		*MapSize = std::move(Parms.MapSize);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.GetWheelUpAlignment
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        Alignment                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::GetWheelUpAlignment(struct FVector2D* Alignment) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "GetWheelUpAlignment");

	Params::NewWorldMapWidget_C_GetWheelUpAlignment Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Alignment != nullptr)
		*Alignment = std::move(Parms.Alignment);
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.ComputeServerToLocalPosition
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector                          Server                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FVector                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FVector UNewWorldMapWidget_C::ComputeServerToLocalPosition(const struct FVector& Server) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "ComputeServerToLocalPosition");

	Params::NewWorldMapWidget_C_ComputeServerToLocalPosition Parms{};

	Parms.Server = std::move(Server);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.GetPadGuidePos_UC
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FVector2D UNewWorldMapWidget_C::GetPadGuidePos_UC() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "GetPadGuidePos_UC");

	Params::NewWorldMapWidget_C_GetPadGuidePos_UC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.GetPadGuidePos_MC
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FVector2D UNewWorldMapWidget_C::GetPadGuidePos_MC() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "GetPadGuidePos_MC");

	Params::NewWorldMapWidget_C_GetPadGuidePos_MC Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.IsInPadGuideInMap
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    bIsIn                                                  (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UNewWorldMapWidget_C::IsInPadGuideInMap(bool* bIsIn) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "IsInPadGuideInMap");

	Params::NewWorldMapWidget_C_IsInPadGuideInMap Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bIsIn != nullptr)
		*bIsIn = Parms.bIsIn;
}


// Function NewWorldMapWidget.NewWorldMapWidget_C.GetMoveMapGridViewCenterToMyIconCenterDir
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// struct FVector2D                        ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FVector2D UNewWorldMapWidget_C::GetMoveMapGridViewCenterToMyIconCenterDir() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("NewWorldMapWidget_C", "GetMoveMapGridViewCenterToMyIconCenterDir");

	Params::NewWorldMapWidget_C_GetMoveMapGridViewCenterToMyIconCenterDir Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

