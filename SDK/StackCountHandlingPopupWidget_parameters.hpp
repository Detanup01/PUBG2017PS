#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StackCountHandlingPopupWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "TslGame_structs.hpp"


namespace SDK::Params
{

// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.ExecuteUbergraph_StackCountHandlingPopupWidget
// 0x0248 (0x0248 - 0x0000)
struct StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLastInputGamepad_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x0038(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate5;             // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate6;             // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate7;             // 0x0068(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          m__bool_IsClosed_Variable;                         // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Has_Been_Initd_Variable;                   // 0x0079(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7A[0x6];                                       // 0x007A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslHUD*                                K2Node_DynamicCast_AsTsl_HUD;                      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x7];                                       // 0x0099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(TScriptInterface<class ISlotContainerInterface> Container, TScriptInterface<class ISlotInterface> Slot, TScriptInterface<class ISlotContainerInterface> OtherContainer)> K2Node_CreateDelegate_OutputDelegate8;             // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue2;             // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue2;                      // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPopupStyle                                   K2Node_Event_PopupStyle;                           // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Event_Message;                              // 0x00C8(0x0018)(ConstParm)
	TDelegate<void(EPopupButtonID ButtonID)>      K2Node_Event_PressedDelegate;                      // 0x00E0(0x0010)(ConstParm, ZeroConstructor, NoDestructor)
	class ATslHUD*                                K2Node_DynamicCast_AsTsl_HUD2;                     // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue3;             // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue3;                      // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0110(0x0018)()
	class ATslHUD*                                K2Node_DynamicCast_AsTsl_HUD3;                     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x7];                                      // 0x0131(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0138(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0148(0x0010)(ZeroConstructor)
	TScriptInterface<class ISlotContainerInterface> K2Node_CustomEvent_Container;                      // 0x0158(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        K2Node_CustomEvent_Slot;                           // 0x0168(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> K2Node_CustomEvent_OtherContainer;                 // 0x0178(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue2;               // 0x0188(0x0010)(ZeroConstructor)
	int32                                         CallFunc_GetMaxCount_ReturnValue;                  // 0x0198(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19C[0x4];                                      // 0x019C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x01A0(0x0018)()
	int32                                         CallFunc_GetMaxCount_ReturnValue2;                 // 0x01B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1BC[0x4];                                      // 0x01BC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_CustomEvent_Text;                           // 0x01C0(0x0018)(ConstParm)
	ETextCommit                                   K2Node_CustomEvent_CommitMethod;                   // 0x01D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01D9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1DA[0x2];                                      // 0x01DA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x01DC(0x0034)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0210(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_214[0x4];                                      // 0x0214(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue4;             // 0x0218(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue4;                      // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslHUD*                                K2Node_DynamicCast_AsTsl_HUD4;                     // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(class FText& Text, ETextCommit CommitMethod)> K2Node_CreateDelegate_OutputDelegate9;             // 0x0238(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget) == 0x000008, "Wrong alignment on StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget");
static_assert(sizeof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget) == 0x000248, "Wrong size on StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, EntryPoint) == 0x000000, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, CallFunc_IsLastInputGamepad_ReturnValue) == 0x000004, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::CallFunc_IsLastInputGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_CreateDelegate_OutputDelegate2) == 0x000018, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_CreateDelegate_OutputDelegate3) == 0x000028, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_CreateDelegate_OutputDelegate4) == 0x000038, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_CreateDelegate_OutputDelegate5) == 0x000048, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_CreateDelegate_OutputDelegate6) == 0x000058, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_CreateDelegate_OutputDelegate7) == 0x000068, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, m__bool_IsClosed_Variable) == 0x000078, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::m__bool_IsClosed_Variable' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, m__bool_Has_Been_Initd_Variable) == 0x000079, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::m__bool_Has_Been_Initd_Variable' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000080, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, CallFunc_GetHUD_ReturnValue) == 0x000088, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_DynamicCast_AsTsl_HUD) == 0x000090, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_DynamicCast_AsTsl_HUD' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_DynamicCast_bSuccess) == 0x000098, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_CreateDelegate_OutputDelegate8) == 0x0000A0, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, CallFunc_GetOwningPlayer_ReturnValue2) == 0x0000B0, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::CallFunc_GetOwningPlayer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, CallFunc_GetHUD_ReturnValue2) == 0x0000B8, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::CallFunc_GetHUD_ReturnValue2' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_Event_PopupStyle) == 0x0000C0, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_Event_PopupStyle' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_Event_Message) == 0x0000C8, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_Event_Message' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_Event_PressedDelegate) == 0x0000E0, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_Event_PressedDelegate' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_DynamicCast_AsTsl_HUD2) == 0x0000F0, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_DynamicCast_AsTsl_HUD2' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_DynamicCast_bSuccess2) == 0x0000F8, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, CallFunc_GetOwningPlayer_ReturnValue3) == 0x000100, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::CallFunc_GetOwningPlayer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, CallFunc_GetHUD_ReturnValue3) == 0x000108, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::CallFunc_GetHUD_ReturnValue3' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, CallFunc_GetText_ReturnValue) == 0x000110, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_DynamicCast_AsTsl_HUD3) == 0x000128, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_DynamicCast_AsTsl_HUD3' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_DynamicCast_bSuccess3) == 0x000130, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, CallFunc_Conv_TextToString_ReturnValue) == 0x000138, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, CallFunc_Concat_StrStr_ReturnValue) == 0x000148, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_CustomEvent_Container) == 0x000158, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_CustomEvent_Container' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_CustomEvent_Slot) == 0x000168, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_CustomEvent_Slot' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_CustomEvent_OtherContainer) == 0x000178, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_CustomEvent_OtherContainer' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, CallFunc_Concat_StrStr_ReturnValue2) == 0x000188, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::CallFunc_Concat_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, CallFunc_GetMaxCount_ReturnValue) == 0x000198, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::CallFunc_GetMaxCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, CallFunc_Conv_IntToText_ReturnValue) == 0x0001A0, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, CallFunc_GetMaxCount_ReturnValue2) == 0x0001B8, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::CallFunc_GetMaxCount_ReturnValue2' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_CustomEvent_Text) == 0x0001C0, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_CustomEvent_Text' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_CustomEvent_CommitMethod) == 0x0001D8, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_CustomEvent_CommitMethod' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_SwitchEnum_CmpSuccess) == 0x0001D9, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_Event_MyGeometry) == 0x0001DC, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_Event_InDeltaTime) == 0x000210, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, CallFunc_GetOwningPlayer_ReturnValue4) == 0x000218, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::CallFunc_GetOwningPlayer_ReturnValue4' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, CallFunc_GetHUD_ReturnValue4) == 0x000220, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::CallFunc_GetHUD_ReturnValue4' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_DynamicCast_AsTsl_HUD4) == 0x000228, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_DynamicCast_AsTsl_HUD4' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_DynamicCast_bSuccess4) == 0x000230, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget, K2Node_CreateDelegate_OutputDelegate9) == 0x000238, "Member 'StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");

// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.Tick
// 0x0038 (0x0038 - 0x0000)
struct StackCountHandlingPopupWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StackCountHandlingPopupWidget_C_Tick) == 0x000004, "Wrong alignment on StackCountHandlingPopupWidget_C_Tick");
static_assert(sizeof(StackCountHandlingPopupWidget_C_Tick) == 0x000038, "Wrong size on StackCountHandlingPopupWidget_C_Tick");
static_assert(offsetof(StackCountHandlingPopupWidget_C_Tick, MyGeometry) == 0x000000, "Member 'StackCountHandlingPopupWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_Tick, InDeltaTime) == 0x000034, "Member 'StackCountHandlingPopupWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.SubmitEvent
// 0x0020 (0x0020 - 0x0000)
struct StackCountHandlingPopupWidget_C_SubmitEvent final
{
public:
	class FText                                   Text;                                              // 0x0000(0x0018)(ConstParm, Parm, OutParm, ReferenceParm)
	ETextCommit                                   CommitMethod;                                      // 0x0018(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StackCountHandlingPopupWidget_C_SubmitEvent) == 0x000008, "Wrong alignment on StackCountHandlingPopupWidget_C_SubmitEvent");
static_assert(sizeof(StackCountHandlingPopupWidget_C_SubmitEvent) == 0x000020, "Wrong size on StackCountHandlingPopupWidget_C_SubmitEvent");
static_assert(offsetof(StackCountHandlingPopupWidget_C_SubmitEvent, Text) == 0x000000, "Member 'StackCountHandlingPopupWidget_C_SubmitEvent::Text' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_SubmitEvent, CommitMethod) == 0x000018, "Member 'StackCountHandlingPopupWidget_C_SubmitEvent::CommitMethod' has a wrong offset!");

// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.CustomEvent_0
// 0x0030 (0x0030 - 0x0000)
struct StackCountHandlingPopupWidget_C_CustomEvent_0 final
{
public:
	TScriptInterface<class ISlotContainerInterface> Container_0;                                       // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        Slot_0;                                            // 0x0010(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotContainerInterface> OtherContainer;                                    // 0x0020(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StackCountHandlingPopupWidget_C_CustomEvent_0) == 0x000008, "Wrong alignment on StackCountHandlingPopupWidget_C_CustomEvent_0");
static_assert(sizeof(StackCountHandlingPopupWidget_C_CustomEvent_0) == 0x000030, "Wrong size on StackCountHandlingPopupWidget_C_CustomEvent_0");
static_assert(offsetof(StackCountHandlingPopupWidget_C_CustomEvent_0, Container_0) == 0x000000, "Member 'StackCountHandlingPopupWidget_C_CustomEvent_0::Container_0' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_CustomEvent_0, Slot_0) == 0x000010, "Member 'StackCountHandlingPopupWidget_C_CustomEvent_0::Slot_0' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_CustomEvent_0, OtherContainer) == 0x000020, "Member 'StackCountHandlingPopupWidget_C_CustomEvent_0::OtherContainer' has a wrong offset!");

// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.SetPopup
// 0x0030 (0x0030 - 0x0000)
struct StackCountHandlingPopupWidget_C_SetPopup final
{
public:
	EPopupStyle                                   PopupStyle;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Message;                                           // 0x0008(0x0018)(ConstParm, Parm, OutParm, ReferenceParm)
	TDelegate<void(EPopupButtonID ButtonID)>      PressedDelegate;                                   // 0x0020(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
};
static_assert(alignof(StackCountHandlingPopupWidget_C_SetPopup) == 0x000008, "Wrong alignment on StackCountHandlingPopupWidget_C_SetPopup");
static_assert(sizeof(StackCountHandlingPopupWidget_C_SetPopup) == 0x000030, "Wrong size on StackCountHandlingPopupWidget_C_SetPopup");
static_assert(offsetof(StackCountHandlingPopupWidget_C_SetPopup, PopupStyle) == 0x000000, "Member 'StackCountHandlingPopupWidget_C_SetPopup::PopupStyle' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_SetPopup, Message) == 0x000008, "Member 'StackCountHandlingPopupWidget_C_SetPopup::Message' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_SetPopup, PressedDelegate) == 0x000020, "Member 'StackCountHandlingPopupWidget_C_SetPopup::PressedDelegate' has a wrong offset!");

// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.OnItemDropOtherContainer
// 0x0008 (0x0008 - 0x0000)
struct StackCountHandlingPopupWidget_C_OnItemDropOtherContainer final
{
public:
	class UItem*                                  Item_0;                                            // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StackCountHandlingPopupWidget_C_OnItemDropOtherContainer) == 0x000008, "Wrong alignment on StackCountHandlingPopupWidget_C_OnItemDropOtherContainer");
static_assert(sizeof(StackCountHandlingPopupWidget_C_OnItemDropOtherContainer) == 0x000008, "Wrong size on StackCountHandlingPopupWidget_C_OnItemDropOtherContainer");
static_assert(offsetof(StackCountHandlingPopupWidget_C_OnItemDropOtherContainer, Item_0) == 0x000000, "Member 'StackCountHandlingPopupWidget_C_OnItemDropOtherContainer::Item_0' has a wrong offset!");

// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.GetMaxCount
// 0x0048 (0x0048 - 0x0000)
struct StackCountHandlingPopupWidget_C_GetMaxCount final
{
public:
	int32                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AInventory*                             CallFunc_GetInventory_Inventory;                   // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ANearbyInteractiveItemExplorer*         K2Node_DynamicCast_AsNearby_Interactive_Item_Explorer; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentSpace_ReturnValue;              // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetMaxSpace_ReturnValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetSpace_ReturnValue;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetStackCount_ReturnValue;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue;        // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue2;       // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Min_ReturnValue;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StackCountHandlingPopupWidget_C_GetMaxCount) == 0x000008, "Wrong alignment on StackCountHandlingPopupWidget_C_GetMaxCount");
static_assert(sizeof(StackCountHandlingPopupWidget_C_GetMaxCount) == 0x000048, "Wrong size on StackCountHandlingPopupWidget_C_GetMaxCount");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxCount, ReturnValue) == 0x000000, "Member 'StackCountHandlingPopupWidget_C_GetMaxCount::ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxCount, CallFunc_GetInventory_Inventory) == 0x000008, "Member 'StackCountHandlingPopupWidget_C_GetMaxCount::CallFunc_GetInventory_Inventory' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxCount, K2Node_DynamicCast_AsNearby_Interactive_Item_Explorer) == 0x000010, "Member 'StackCountHandlingPopupWidget_C_GetMaxCount::K2Node_DynamicCast_AsNearby_Interactive_Item_Explorer' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxCount, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'StackCountHandlingPopupWidget_C_GetMaxCount::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxCount, CallFunc_GetCurrentSpace_ReturnValue) == 0x00001C, "Member 'StackCountHandlingPopupWidget_C_GetMaxCount::CallFunc_GetCurrentSpace_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxCount, CallFunc_GetMaxSpace_ReturnValue) == 0x000020, "Member 'StackCountHandlingPopupWidget_C_GetMaxCount::CallFunc_GetMaxSpace_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxCount, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000024, "Member 'StackCountHandlingPopupWidget_C_GetMaxCount::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxCount, CallFunc_GetSpace_ReturnValue) == 0x000028, "Member 'StackCountHandlingPopupWidget_C_GetMaxCount::CallFunc_GetSpace_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxCount, CallFunc_GetStackCount_ReturnValue) == 0x00002C, "Member 'StackCountHandlingPopupWidget_C_GetMaxCount::CallFunc_GetStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxCount, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000030, "Member 'StackCountHandlingPopupWidget_C_GetMaxCount::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxCount, CallFunc_SafeDivide_FloatFloat_ReturnValue) == 0x000034, "Member 'StackCountHandlingPopupWidget_C_GetMaxCount::CallFunc_SafeDivide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxCount, CallFunc_SafeDivide_FloatFloat_ReturnValue2) == 0x000038, "Member 'StackCountHandlingPopupWidget_C_GetMaxCount::CallFunc_SafeDivide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxCount, CallFunc_FFloor_ReturnValue) == 0x00003C, "Member 'StackCountHandlingPopupWidget_C_GetMaxCount::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxCount, CallFunc_Min_ReturnValue) == 0x000040, "Member 'StackCountHandlingPopupWidget_C_GetMaxCount::CallFunc_Min_ReturnValue' has a wrong offset!");

// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.UpdateItemName
// 0x0020 (0x0020 - 0x0000)
struct StackCountHandlingPopupWidget_C_UpdateItemName final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_GetSlotName_ReturnValue;                  // 0x0008(0x0018)()
};
static_assert(alignof(StackCountHandlingPopupWidget_C_UpdateItemName) == 0x000008, "Wrong alignment on StackCountHandlingPopupWidget_C_UpdateItemName");
static_assert(sizeof(StackCountHandlingPopupWidget_C_UpdateItemName) == 0x000020, "Wrong size on StackCountHandlingPopupWidget_C_UpdateItemName");
static_assert(offsetof(StackCountHandlingPopupWidget_C_UpdateItemName, BoundWidget) == 0x000000, "Member 'StackCountHandlingPopupWidget_C_UpdateItemName::BoundWidget' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_UpdateItemName, CallFunc_GetSlotName_ReturnValue) == 0x000008, "Member 'StackCountHandlingPopupWidget_C_UpdateItemName::CallFunc_GetSlotName_ReturnValue' has a wrong offset!");

// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.GetInventory
// 0x0038 (0x0038 - 0x0000)
struct StackCountHandlingPopupWidget_C_GetInventory final
{
public:
	class AInventory*                             Inventory_0;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AInventoryFacade*                       CallFunc_GetInventoryFacade_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AInventory*                             CallFunc_GetInventory_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StackCountHandlingPopupWidget_C_GetInventory) == 0x000008, "Wrong alignment on StackCountHandlingPopupWidget_C_GetInventory");
static_assert(sizeof(StackCountHandlingPopupWidget_C_GetInventory) == 0x000038, "Wrong size on StackCountHandlingPopupWidget_C_GetInventory");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetInventory, Inventory_0) == 0x000000, "Member 'StackCountHandlingPopupWidget_C_GetInventory::Inventory_0' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetInventory, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'StackCountHandlingPopupWidget_C_GetInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetInventory, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000010, "Member 'StackCountHandlingPopupWidget_C_GetInventory::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetInventory, CallFunc_IsValid_ReturnValue2) == 0x000018, "Member 'StackCountHandlingPopupWidget_C_GetInventory::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetInventory, CallFunc_GetInventoryFacade_ReturnValue) == 0x000020, "Member 'StackCountHandlingPopupWidget_C_GetInventory::CallFunc_GetInventoryFacade_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetInventory, CallFunc_GetInventory_ReturnValue) == 0x000028, "Member 'StackCountHandlingPopupWidget_C_GetInventory::CallFunc_GetInventory_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetInventory, CallFunc_IsValid_ReturnValue3) == 0x000030, "Member 'StackCountHandlingPopupWidget_C_GetInventory::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetInventory, CallFunc_IsValid_ReturnValue4) == 0x000031, "Member 'StackCountHandlingPopupWidget_C_GetInventory::CallFunc_IsValid_ReturnValue4' has a wrong offset!");

// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.GetMaxButtonText
// 0x0088 (0x0088 - 0x0000)
struct StackCountHandlingPopupWidget_C_GetMaxButtonText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	int32                                         CallFunc_GetMaxCount_ReturnValue;                  // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0020(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0060(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0070(0x0018)()
};
static_assert(alignof(StackCountHandlingPopupWidget_C_GetMaxButtonText) == 0x000008, "Wrong alignment on StackCountHandlingPopupWidget_C_GetMaxButtonText");
static_assert(sizeof(StackCountHandlingPopupWidget_C_GetMaxButtonText) == 0x000088, "Wrong size on StackCountHandlingPopupWidget_C_GetMaxButtonText");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxButtonText, ReturnValue) == 0x000000, "Member 'StackCountHandlingPopupWidget_C_GetMaxButtonText::ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxButtonText, CallFunc_GetMaxCount_ReturnValue) == 0x000018, "Member 'StackCountHandlingPopupWidget_C_GetMaxButtonText::CallFunc_GetMaxCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxButtonText, K2Node_MakeStruct_FormatArgumentData) == 0x000020, "Member 'StackCountHandlingPopupWidget_C_GetMaxButtonText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxButtonText, K2Node_MakeArray_Array) == 0x000060, "Member 'StackCountHandlingPopupWidget_C_GetMaxButtonText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_GetMaxButtonText, CallFunc_Format_ReturnValue) == 0x000070, "Member 'StackCountHandlingPopupWidget_C_GetMaxButtonText::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.On_InputAmountText_Prepass
// 0x0070 (0x0070 - 0x0000)
struct StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0010(0x0018)()
	int32                                         CallFunc_GetMaxCount_ReturnValue;                  // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0030(0x0018)()
	bool                                          CallFunc_NotEqual_TextText_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0050(0x0010)(ZeroConstructor)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         AmountInt;                                         // 0x0068(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass) == 0x000008, "Wrong alignment on StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass");
static_assert(sizeof(StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass) == 0x000070, "Wrong size on StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass");
static_assert(offsetof(StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass, BoundWidget) == 0x000000, "Member 'StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass::BoundWidget' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000008, "Member 'StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass, CallFunc_Conv_IntToText_ReturnValue) == 0x000010, "Member 'StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass, CallFunc_GetMaxCount_ReturnValue) == 0x000028, "Member 'StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass::CallFunc_GetMaxCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass, CallFunc_GetText_ReturnValue) == 0x000030, "Member 'StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass, CallFunc_NotEqual_TextText_ReturnValue) == 0x000048, "Member 'StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass::CallFunc_NotEqual_TextText_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass, CallFunc_Conv_TextToString_ReturnValue) == 0x000050, "Member 'StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass, CallFunc_Conv_StringToInt_ReturnValue) == 0x000060, "Member 'StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass, CallFunc_Clamp_ReturnValue) == 0x000064, "Member 'StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass, AmountInt) == 0x000068, "Member 'StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass::AmountInt' has a wrong offset!");

// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.FocusOnInputAmountText
// 0x0008 (0x0008 - 0x0000)
struct StackCountHandlingPopupWidget_C_FocusOnInputAmountText final
{
public:
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StackCountHandlingPopupWidget_C_FocusOnInputAmountText) == 0x000008, "Wrong alignment on StackCountHandlingPopupWidget_C_FocusOnInputAmountText");
static_assert(sizeof(StackCountHandlingPopupWidget_C_FocusOnInputAmountText) == 0x000008, "Wrong size on StackCountHandlingPopupWidget_C_FocusOnInputAmountText");
static_assert(offsetof(StackCountHandlingPopupWidget_C_FocusOnInputAmountText, CallFunc_GetOwningPlayer_ReturnValue) == 0x000000, "Member 'StackCountHandlingPopupWidget_C_FocusOnInputAmountText::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");

// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.OnPrepass_0
// 0x0010 (0x0010 - 0x0000)
struct StackCountHandlingPopupWidget_C_OnPrepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsXBoxOnePlatform_NewParam;               // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLastInputGamepad_ReturnValue;           // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(StackCountHandlingPopupWidget_C_OnPrepass_0) == 0x000008, "Wrong alignment on StackCountHandlingPopupWidget_C_OnPrepass_0");
static_assert(sizeof(StackCountHandlingPopupWidget_C_OnPrepass_0) == 0x000010, "Wrong size on StackCountHandlingPopupWidget_C_OnPrepass_0");
static_assert(offsetof(StackCountHandlingPopupWidget_C_OnPrepass_0, BoundWidget) == 0x000000, "Member 'StackCountHandlingPopupWidget_C_OnPrepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_OnPrepass_0, m__bool_Variable) == 0x000008, "Member 'StackCountHandlingPopupWidget_C_OnPrepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_OnPrepass_0, m__byte_Variable) == 0x000009, "Member 'StackCountHandlingPopupWidget_C_OnPrepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_OnPrepass_0, m__byte_Variable2) == 0x00000A, "Member 'StackCountHandlingPopupWidget_C_OnPrepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_OnPrepass_0, CallFunc_IsXBoxOnePlatform_NewParam) == 0x00000B, "Member 'StackCountHandlingPopupWidget_C_OnPrepass_0::CallFunc_IsXBoxOnePlatform_NewParam' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_OnPrepass_0, CallFunc_IsLastInputGamepad_ReturnValue) == 0x00000C, "Member 'StackCountHandlingPopupWidget_C_OnPrepass_0::CallFunc_IsLastInputGamepad_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_OnPrepass_0, CallFunc_BooleanOR_ReturnValue) == 0x00000D, "Member 'StackCountHandlingPopupWidget_C_OnPrepass_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_OnPrepass_0, K2Node_Select_Default) == 0x00000E, "Member 'StackCountHandlingPopupWidget_C_OnPrepass_0::K2Node_Select_Default' has a wrong offset!");

// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.AddStackCount
// 0x0068 (0x0068 - 0x0000)
struct StackCountHandlingPopupWidget_C_AddStackCount final
{
public:
	int32                                         AddCount;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetMaxCount_ReturnValue;                  // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_GetText_ReturnValue;                      // 0x0008(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0020(0x0010)(ZeroConstructor)
	int32                                         CallFunc_Conv_StringToInt_ReturnValue;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Clamp_ReturnValue;                        // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0040(0x0018)()
	class FString                                 CallFunc_Conv_IntToString_ReturnValue;             // 0x0058(0x0010)(ZeroConstructor)
};
static_assert(alignof(StackCountHandlingPopupWidget_C_AddStackCount) == 0x000008, "Wrong alignment on StackCountHandlingPopupWidget_C_AddStackCount");
static_assert(sizeof(StackCountHandlingPopupWidget_C_AddStackCount) == 0x000068, "Wrong size on StackCountHandlingPopupWidget_C_AddStackCount");
static_assert(offsetof(StackCountHandlingPopupWidget_C_AddStackCount, AddCount) == 0x000000, "Member 'StackCountHandlingPopupWidget_C_AddStackCount::AddCount' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_AddStackCount, CallFunc_GetMaxCount_ReturnValue) == 0x000004, "Member 'StackCountHandlingPopupWidget_C_AddStackCount::CallFunc_GetMaxCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_AddStackCount, CallFunc_GetText_ReturnValue) == 0x000008, "Member 'StackCountHandlingPopupWidget_C_AddStackCount::CallFunc_GetText_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_AddStackCount, CallFunc_Conv_TextToString_ReturnValue) == 0x000020, "Member 'StackCountHandlingPopupWidget_C_AddStackCount::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_AddStackCount, CallFunc_Conv_StringToInt_ReturnValue) == 0x000030, "Member 'StackCountHandlingPopupWidget_C_AddStackCount::CallFunc_Conv_StringToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_AddStackCount, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'StackCountHandlingPopupWidget_C_AddStackCount::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_AddStackCount, CallFunc_Clamp_ReturnValue) == 0x000038, "Member 'StackCountHandlingPopupWidget_C_AddStackCount::CallFunc_Clamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_AddStackCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000040, "Member 'StackCountHandlingPopupWidget_C_AddStackCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(StackCountHandlingPopupWidget_C_AddStackCount, CallFunc_Conv_IntToString_ReturnValue) == 0x000058, "Member 'StackCountHandlingPopupWidget_C_AddStackCount::CallFunc_Conv_IntToString_ReturnValue' has a wrong offset!");

}

