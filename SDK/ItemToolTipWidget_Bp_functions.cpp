#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemToolTipWidget_Bp

#include "Basic.hpp"

#include "ItemToolTipWidget_Bp_classes.hpp"
#include "ItemToolTipWidget_Bp_parameters.hpp"


namespace SDK
{

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.ExecuteUbergraph_ItemToolTipWidget_Bp
// ()
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemToolTipWidget_Bp_C::ExecuteUbergraph_ItemToolTipWidget_Bp(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "ExecuteUbergraph_ItemToolTipWidget_Bp");

	Params::ItemToolTipWidget_Bp_C_ExecuteUbergraph_ItemToolTipWidget_Bp Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.UpdateVicinityOrInventorySlotItemToolTip
// (Event, Public, BlueprintEvent)
// Parameters:
// class UEquipableItem*                   EquipableItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UEquipableItem*                   EquipmentSlotItem                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemToolTipWidget_Bp_C::UpdateVicinityOrInventorySlotItemToolTip(class UEquipableItem* EquipableItem, class UEquipableItem* EquipmentSlotItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "UpdateVicinityOrInventorySlotItemToolTip");

	Params::ItemToolTipWidget_Bp_C_UpdateVicinityOrInventorySlotItemToolTip Parms{};

	Parms.EquipableItem = EquipableItem;
	Parms.EquipmentSlotItem = EquipmentSlotItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.UpdateEquipmentSlotItemToolTip
// (Event, Public, BlueprintEvent)
// Parameters:
// class UEquipableItem*                   EquipableItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemToolTipWidget_Bp_C::UpdateEquipmentSlotItemToolTip(class UEquipableItem* EquipableItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "UpdateEquipmentSlotItemToolTip");

	Params::ItemToolTipWidget_Bp_C_UpdateEquipmentSlotItemToolTip Parms{};

	Parms.EquipableItem = EquipableItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.UpdateSlotInfo
// (Event, Public, HasOutParams, BlueprintEvent)
// Parameters:
// TScriptInterface<class ISlotInterface>  SlotInterface                                          (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)

void UItemToolTipWidget_Bp_C::UpdateSlotInfo(const TScriptInterface<class ISlotInterface>& SlotInterface)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "UpdateSlotInfo");

	Params::ItemToolTipWidget_Bp_C_UpdateSlotInfo Parms{};

	Parms.SlotInterface = SlotInterface;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UItemToolTipWidget_Bp_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.UpdateItemDetailInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UItem*                            Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemToolTipWidget_Bp_C::UpdateItemDetailInfo(class UItem* Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "UpdateItemDetailInfo");

	Params::ItemToolTipWidget_Bp_C_UpdateItemDetailInfo Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.SetItemByInterface
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class ISlotInterface>  Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemToolTipWidget_Bp_C::SetItemByInterface(TScriptInterface<class ISlotInterface> Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "SetItemByInterface");

	Params::ItemToolTipWidget_Bp_C_SetItemByInterface Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.UpdateDefaultInfo
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class ISlotInterface>  Item                                                   (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemToolTipWidget_Bp_C::UpdateDefaultInfo(TScriptInterface<class ISlotInterface> Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "UpdateDefaultInfo");

	Params::ItemToolTipWidget_Bp_C_UpdateDefaultInfo Parms{};

	Parms.Item = Item;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.FadeIn
// (Public, BlueprintCallable, BlueprintEvent)

void UItemToolTipWidget_Bp_C::FadeIn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "FadeIn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.GetWeaponPower
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ATslWeapon*                       ShooterWeapon                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Damage                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemToolTipWidget_Bp_C::GetWeaponPower(class ATslWeapon* ShooterWeapon, float* Damage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "GetWeaponPower");

	Params::ItemToolTipWidget_Bp_C_GetWeaponPower Parms{};

	Parms.ShooterWeapon = ShooterWeapon;

	UObject::ProcessEvent(Func, &Parms);

	if (Damage != nullptr)
		*Damage = Parms.Damage;
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.GetWeaponEffectiveRange
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ATslWeapon_Trajectory*            ShooterWeapon_Trajectory                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   EffectRange                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemToolTipWidget_Bp_C::GetWeaponEffectiveRange(class ATslWeapon_Trajectory* ShooterWeapon_Trajectory, float* EffectRange)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "GetWeaponEffectiveRange");

	Params::ItemToolTipWidget_Bp_C_GetWeaponEffectiveRange Parms{};

	Parms.ShooterWeapon_Trajectory = ShooterWeapon_Trajectory;

	UObject::ProcessEvent(Func, &Parms);

	if (EffectRange != nullptr)
		*EffectRange = Parms.EffectRange;
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.GetStability
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ATslWeapon_Trajectory*            ShooterWeapon_Trajectory                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Accuracy                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemToolTipWidget_Bp_C::GetStability(class ATslWeapon_Trajectory* ShooterWeapon_Trajectory, float* Accuracy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "GetStability");

	Params::ItemToolTipWidget_Bp_C_GetStability Parms{};

	Parms.ShooterWeapon_Trajectory = ShooterWeapon_Trajectory;

	UObject::ProcessEvent(Func, &Parms);

	if (Accuracy != nullptr)
		*Accuracy = Parms.Accuracy;
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.GetAttachedStability
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ATslWeapon_Trajectory*            ShooterWeapon_Trajectory                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Accuracy                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemToolTipWidget_Bp_C::GetAttachedStability(class ATslWeapon_Trajectory* ShooterWeapon_Trajectory, float* Accuracy)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "GetAttachedStability");

	Params::ItemToolTipWidget_Bp_C_GetAttachedStability Parms{};

	Parms.ShooterWeapon_Trajectory = ShooterWeapon_Trajectory;

	UObject::ProcessEvent(Func, &Parms);

	if (Accuracy != nullptr)
		*Accuracy = Parms.Accuracy;
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.GetAmmo
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWeaponItem*                      WeaponItem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   AmmoClip                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemToolTipWidget_Bp_C::GetAmmo(class UWeaponItem* WeaponItem, int32* AmmoClip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "GetAmmo");

	Params::ItemToolTipWidget_Bp_C_GetAmmo Parms{};

	Parms.WeaponItem = WeaponItem;

	UObject::ProcessEvent(Func, &Parms);

	if (AmmoClip != nullptr)
		*AmmoClip = Parms.AmmoClip;
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.GetAttachedAmmo
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UWeaponItem*                      WeaponItem                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   AmmoClip                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemToolTipWidget_Bp_C::GetAttachedAmmo(class UWeaponItem* WeaponItem, int32* AmmoClip)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "GetAttachedAmmo");

	Params::ItemToolTipWidget_Bp_C_GetAttachedAmmo Parms{};

	Parms.WeaponItem = WeaponItem;

	UObject::ProcessEvent(Func, &Parms);

	if (AmmoClip != nullptr)
		*AmmoClip = Parms.AmmoClip;
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.Clear
// (Public, BlueprintCallable, BlueprintEvent)

void UItemToolTipWidget_Bp_C::Clear()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "Clear");

	UObject::ProcessEvent(Func, nullptr);
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.OnUpdateVicinityOrInventorySlotItemToolTip
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UEquipableItem*                   EquipableItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UEquipableItem*                   EquipmentSlotItem                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemToolTipWidget_Bp_C::OnUpdateVicinityOrInventorySlotItemToolTip(class UEquipableItem* EquipableItem, class UEquipableItem* EquipmentSlotItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "OnUpdateVicinityOrInventorySlotItemToolTip");

	Params::ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip Parms{};

	Parms.EquipableItem = EquipableItem;
	Parms.EquipmentSlotItem = EquipmentSlotItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.OnUpdateEquipmentSlotItemToolTip
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UEquipableItem*                   EquipableItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemToolTipWidget_Bp_C::OnUpdateEquipmentSlotItemToolTip(class UEquipableItem* EquipableItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "OnUpdateEquipmentSlotItemToolTip");

	Params::ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip Parms{};

	Parms.EquipableItem = EquipableItem;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.GetShooterWeapon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UEquipableItem*                   EquipableItem                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ATslWeapon*                       ShooterWeapon                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class ATslWeapon_Trajectory*            ShooterWeapon_Trajectory                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemToolTipWidget_Bp_C::GetShooterWeapon(class UEquipableItem* EquipableItem, class ATslWeapon** ShooterWeapon, class ATslWeapon_Trajectory** ShooterWeapon_Trajectory)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "GetShooterWeapon");

	Params::ItemToolTipWidget_Bp_C_GetShooterWeapon Parms{};

	Parms.EquipableItem = EquipableItem;

	UObject::ProcessEvent(Func, &Parms);

	if (ShooterWeapon != nullptr)
		*ShooterWeapon = Parms.ShooterWeapon;

	if (ShooterWeapon_Trajectory != nullptr)
		*ShooterWeapon_Trajectory = Parms.ShooterWeapon_Trajectory;
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.GetFiringRate
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ATslWeapon_Trajectory*            ShooterWeapon_Trajectory                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   AmmoClip                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   FullReloadingTime                                      (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   FringRate                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemToolTipWidget_Bp_C::GetFiringRate(class ATslWeapon_Trajectory* ShooterWeapon_Trajectory, int32 AmmoClip, float FullReloadingTime, float* FringRate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "GetFiringRate");

	Params::ItemToolTipWidget_Bp_C_GetFiringRate Parms{};

	Parms.ShooterWeapon_Trajectory = ShooterWeapon_Trajectory;
	Parms.AmmoClip = AmmoClip;
	Parms.FullReloadingTime = FullReloadingTime;

	UObject::ProcessEvent(Func, &Parms);

	if (FringRate != nullptr)
		*FringRate = Parms.FringRate;
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.On_MagazineIcon_Prepass_0
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UItemToolTipWidget_Bp_C::On_MagazineIcon_Prepass_0(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "On_MagazineIcon_Prepass_0");

	Params::ItemToolTipWidget_Bp_C_On_MagazineIcon_Prepass_0 Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.GetItemDetailedName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class UEquipableItem*                   NewParam                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             Name_0                                                 (Parm, OutParm)

void UItemToolTipWidget_Bp_C::GetItemDetailedName(class UEquipableItem* NewParam, class FText* Name_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("ItemToolTipWidget_Bp_C", "GetItemDetailedName");

	Params::ItemToolTipWidget_Bp_C_GetItemDetailedName Parms{};

	Parms.NewParam = NewParam;

	UObject::ProcessEvent(Func, &Parms);

	if (Name_0 != nullptr)
		*Name_0 = std::move(Parms.Name_0);
}

}

