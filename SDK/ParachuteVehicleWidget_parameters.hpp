#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ParachuteVehicleWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function ParachuteVehicleWidget.ParachuteVehicleWidget_C.ExecuteUbergraph_ParachuteVehicleWidget
// 0x01E8 (0x01E8 - 0x0000)
struct ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m__float_Variable;                                 // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x000C(0x0034)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetPosition_ReturnValue;                  // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReleased_ReturnValue;                   // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0040)()
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x3];                                       // 0x00A1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_FMax_ReturnValue;                         // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue2;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x3];                                       // 0x00A9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue;        // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue2;         // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FMax_ReturnValue2;                        // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue2;       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue3;       // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_X;                          // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D4[0x4];                                       // 0x00D4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x00D8(0x0040)()
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue2;            // 0x0118(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData3;             // 0x0128(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData4;             // 0x0168(0x0040)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x01A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AC[0x4];                                      // 0x01AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x01B0(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_Add_FloatFloat_ReturnValue2;              // 0x01C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C4[0x4];                                      // 0x01C4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01C8(0x0018)()
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x01E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget) == 0x000008, "Wrong alignment on ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget");
static_assert(sizeof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget) == 0x0001E8, "Wrong size on ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, EntryPoint) == 0x000000, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, m__bool_Variable) == 0x000004, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, m__float_Variable) == 0x000008, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::m__float_Variable' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, K2Node_Event_MyGeometry) == 0x00000C, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, K2Node_Event_InDeltaTime) == 0x000040, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_IsValid_ReturnValue) == 0x000044, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000048, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_GetPosition_ReturnValue) == 0x000050, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_GetPosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_IsReleased_ReturnValue) == 0x000058, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_IsReleased_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_Less_FloatFloat_ReturnValue) == 0x0000A0, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_FMax_ReturnValue) == 0x0000A4, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_FMax_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_Less_FloatFloat_ReturnValue2) == 0x0000A8, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_Less_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_SafeDivide_FloatFloat_ReturnValue) == 0x0000AC, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_SafeDivide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x0000B0, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_Subtract_FloatFloat_ReturnValue2) == 0x0000B4, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_Subtract_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_FMax_ReturnValue2) == 0x0000B8, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_FMax_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, K2Node_Select_Default) == 0x0000BC, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_SafeDivide_FloatFloat_ReturnValue2) == 0x0000C0, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_SafeDivide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000C4, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_SafeDivide_FloatFloat_ReturnValue3) == 0x0000C8, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_SafeDivide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_BreakVector2D_X) == 0x0000CC, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_BreakVector2D_Y) == 0x0000D0, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, K2Node_MakeStruct_FormatArgumentData2) == 0x0000D8, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_SlotAsCanvasSlot_ReturnValue2) == 0x000118, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_SlotAsCanvasSlot_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000120, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000124, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, K2Node_MakeStruct_FormatArgumentData3) == 0x000128, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::K2Node_MakeStruct_FormatArgumentData3' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, K2Node_MakeStruct_FormatArgumentData4) == 0x000168, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::K2Node_MakeStruct_FormatArgumentData4' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x0001A8, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, K2Node_MakeArray_Array) == 0x0001B0, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_Add_FloatFloat_ReturnValue2) == 0x0001C0, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_Add_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_Format_ReturnValue) == 0x0001C8, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget, CallFunc_MakeVector2D_ReturnValue) == 0x0001E0, "Member 'ParachuteVehicleWidget_C_ExecuteUbergraph_ParachuteVehicleWidget::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");

// Function ParachuteVehicleWidget.ParachuteVehicleWidget_C.Tick
// 0x0038 (0x0038 - 0x0000)
struct ParachuteVehicleWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ParachuteVehicleWidget_C_Tick) == 0x000004, "Wrong alignment on ParachuteVehicleWidget_C_Tick");
static_assert(sizeof(ParachuteVehicleWidget_C_Tick) == 0x000038, "Wrong size on ParachuteVehicleWidget_C_Tick");
static_assert(offsetof(ParachuteVehicleWidget_C_Tick, MyGeometry) == 0x000000, "Member 'ParachuteVehicleWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_Tick, InDeltaTime) == 0x000034, "Member 'ParachuteVehicleWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function ParachuteVehicleWidget.ParachuteVehicleWidget_C.OnPrepass_ParachuteWidgetVisibility
// 0x0070 (0x0070 - 0x0000)
struct ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue2;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m__float_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         m__float_Variable2;                                // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue2;          // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum2_CmpSuccess;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m__float_Variable3;                                // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         m__float_Variable4;                                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x002D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x002E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x002F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue2;          // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue3;          // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue4;          // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue4;                 // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable2;                                 // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select2_Default;                            // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x0051(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_52[0x6];                                       // 0x0052(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AParachuteVehicle*                      CallFunc_GetParachute_ReturnValue;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AParachutePlayer_C*                     K2Node_DynamicCast_AsParachute_Player;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility) == 0x000008, "Wrong alignment on ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility");
static_assert(sizeof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility) == 0x000070, "Wrong size on ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, BoundWidget) == 0x000000, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::BoundWidget' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000008, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_IsVisible_ReturnValue) == 0x000009, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_IsVisible_ReturnValue2) == 0x00000A, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_IsVisible_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, m__bool_Variable) == 0x00000B, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, K2Node_SwitchEnum_CmpSuccess) == 0x00000C, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, m__float_Variable) == 0x000010, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::m__float_Variable' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, m__float_Variable2) == 0x000014, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::m__float_Variable2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_Greater_FloatFloat_ReturnValue2) == 0x000018, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_Greater_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, K2Node_Select_Default) == 0x00001C, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, K2Node_SwitchEnum2_CmpSuccess) == 0x000020, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::K2Node_SwitchEnum2_CmpSuccess' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, m__float_Variable3) == 0x000024, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::m__float_Variable3' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, m__float_Variable4) == 0x000028, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::m__float_Variable4' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_IsValid_ReturnValue) == 0x00002C, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_IsValid_ReturnValue2) == 0x00002D, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_IsAnimationPlaying_ReturnValue) == 0x00002E, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_Not_PreBool_ReturnValue) == 0x00002F, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_BooleanAND_ReturnValue) == 0x000030, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_IsValid_ReturnValue3) == 0x000031, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_IsAnimationPlaying_ReturnValue2) == 0x000032, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_IsAnimationPlaying_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_Not_PreBool_ReturnValue2) == 0x000033, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_BooleanAND_ReturnValue2) == 0x000034, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_IsAnimationPlaying_ReturnValue3) == 0x000035, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_IsAnimationPlaying_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_Not_PreBool_ReturnValue3) == 0x000036, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_BooleanAND_ReturnValue3) == 0x000037, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_IsValid_ReturnValue4) == 0x000038, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_IsAnimationPlaying_ReturnValue4) == 0x000039, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_IsAnimationPlaying_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_Not_PreBool_ReturnValue4) == 0x00003A, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_Not_PreBool_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_BooleanAND_ReturnValue4) == 0x00003B, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, m__bool_Variable2) == 0x00003C, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, K2Node_Select2_Default) == 0x000040, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000048, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_IsValid_ReturnValue5) == 0x000050, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_IsValid_ReturnValue6) == 0x000051, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_GetParachute_ReturnValue) == 0x000058, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_GetParachute_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, K2Node_DynamicCast_AsParachute_Player) == 0x000060, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::K2Node_DynamicCast_AsParachute_Player' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, K2Node_DynamicCast_bSuccess) == 0x000068, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility, CallFunc_IsValid_ReturnValue7) == 0x000069, "Member 'ParachuteVehicleWidget_C_OnPrepass_ParachuteWidgetVisibility::CallFunc_IsValid_ReturnValue7' has a wrong offset!");

// Function ParachuteVehicleWidget.ParachuteVehicleWidget_C.Get_AirSpeed_Text_0
// 0x00A0 (0x00A0 - 0x0000)
struct ParachuteVehicleWidget_C_Get_AirSpeed_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	float                                         CallFunc_Abs_ReturnValue;                          // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0020(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0088(0x0018)()
};
static_assert(alignof(ParachuteVehicleWidget_C_Get_AirSpeed_Text_0) == 0x000008, "Wrong alignment on ParachuteVehicleWidget_C_Get_AirSpeed_Text_0");
static_assert(sizeof(ParachuteVehicleWidget_C_Get_AirSpeed_Text_0) == 0x0000A0, "Wrong size on ParachuteVehicleWidget_C_Get_AirSpeed_Text_0");
static_assert(offsetof(ParachuteVehicleWidget_C_Get_AirSpeed_Text_0, ReturnValue) == 0x000000, "Member 'ParachuteVehicleWidget_C_Get_AirSpeed_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_Get_AirSpeed_Text_0, CallFunc_Abs_ReturnValue) == 0x000018, "Member 'ParachuteVehicleWidget_C_Get_AirSpeed_Text_0::CallFunc_Abs_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_Get_AirSpeed_Text_0, CallFunc_Conv_FloatToText_ReturnValue) == 0x000020, "Member 'ParachuteVehicleWidget_C_Get_AirSpeed_Text_0::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_Get_AirSpeed_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'ParachuteVehicleWidget_C_Get_AirSpeed_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_Get_AirSpeed_Text_0, K2Node_MakeArray_Array) == 0x000078, "Member 'ParachuteVehicleWidget_C_Get_AirSpeed_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_Get_AirSpeed_Text_0, CallFunc_Format_ReturnValue) == 0x000088, "Member 'ParachuteVehicleWidget_C_Get_AirSpeed_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function ParachuteVehicleWidget.ParachuteVehicleWidget_C.On_Parachute_Prepass_0
// 0x0030 (0x0030 - 0x0000)
struct ParachuteVehicleWidget_C_On_Parachute_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         m__float_Variable;                                 // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable2;                                 // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m__float_Variable2;                                // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue2;          // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0) == 0x000008, "Wrong alignment on ParachuteVehicleWidget_C_On_Parachute_Prepass_0");
static_assert(sizeof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0) == 0x000030, "Wrong size on ParachuteVehicleWidget_C_On_Parachute_Prepass_0");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, BoundWidget) == 0x000000, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, CallFunc_IsVisible_ReturnValue) == 0x000008, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::CallFunc_IsVisible_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000009, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, CallFunc_IsValid_ReturnValue) == 0x00000A, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, CallFunc_Not_PreBool_ReturnValue) == 0x00000B, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, CallFunc_BooleanAND_ReturnValue) == 0x00000C, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, m__byte_Variable) == 0x00000D, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, m__byte_Variable2) == 0x00000E, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, m__bool_Variable) == 0x00000F, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, m__float_Variable) == 0x000010, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::m__float_Variable' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, m__bool_Variable2) == 0x000014, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, m__float_Variable2) == 0x000018, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::m__float_Variable2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, CallFunc_Greater_FloatFloat_ReturnValue) == 0x00001C, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, K2Node_Select_Default) == 0x000020, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, K2Node_Select2_Default) == 0x000024, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, CallFunc_IsValid_ReturnValue2) == 0x000025, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, CallFunc_IsAnimationPlaying_ReturnValue2) == 0x000026, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::CallFunc_IsAnimationPlaying_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, CallFunc_Not_PreBool_ReturnValue2) == 0x000027, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, CallFunc_BooleanAND_ReturnValue2) == 0x000028, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ParachuteVehicleWidget_C_On_Parachute_Prepass_0, K2Node_SwitchEnum_CmpSuccess) == 0x000029, "Member 'ParachuteVehicleWidget_C_On_Parachute_Prepass_0::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

}

