#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HudMain

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "TslGame_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function HudMain.HudMain_C.ExecuteUbergraph_HudMain
// 0x0110 (0x0110 - 0x0000)
struct HudMain_C_ExecuteUbergraph_HudMain final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable2;                                 // 0x0007(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	EWidgetShowType                               m__byte_Variable3;                                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0020(0x0008)()
	EWidgetShowType                               m__byte_Variable4;                                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerController*                   K2Node_DynamicCast_AsTsl_Player_Controller;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTslGameInstance*                       K2Node_DynamicCast_AsTsl_Game_Instance;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReplaying_ReturnValue;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x2];                                       // 0x005A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetReplayCurrentTime_ReturnValue;         // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 K2Node_CustomEvent_WidgetName;                     // 0x0070(0x0010)(ZeroConstructor)
	bool                                          K2Node_CustomEvent_bShow;                          // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslHUD*                                K2Node_DynamicCast_AsTsl_HUD;                      // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EWidgetShowType                               K2Node_Select2_Default;                            // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue2;           // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FUiType>                        CallFunc_GetMiniMapTypes_ReturnValue;              // 0x0098(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_GetSelectMiniMapTypeIndex_ReturnValue;    // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FUiType                                CallFunc_Array_Get_Item;                           // 0x00B0(0x0028)()
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x00D8(0x0034)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_ExecuteUbergraph_HudMain) == 0x000008, "Wrong alignment on HudMain_C_ExecuteUbergraph_HudMain");
static_assert(sizeof(HudMain_C_ExecuteUbergraph_HudMain) == 0x000110, "Wrong size on HudMain_C_ExecuteUbergraph_HudMain");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, EntryPoint) == 0x000000, "Member 'HudMain_C_ExecuteUbergraph_HudMain::EntryPoint' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, m__bool_Variable) == 0x000004, "Member 'HudMain_C_ExecuteUbergraph_HudMain::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, m__byte_Variable) == 0x000005, "Member 'HudMain_C_ExecuteUbergraph_HudMain::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, m__byte_Variable2) == 0x000006, "Member 'HudMain_C_ExecuteUbergraph_HudMain::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, m__bool_Variable2) == 0x000007, "Member 'HudMain_C_ExecuteUbergraph_HudMain::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'HudMain_C_ExecuteUbergraph_HudMain::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, m__byte_Variable3) == 0x000018, "Member 'HudMain_C_ExecuteUbergraph_HudMain::m__byte_Variable3' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000020, "Member 'HudMain_C_ExecuteUbergraph_HudMain::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, m__byte_Variable4) == 0x000028, "Member 'HudMain_C_ExecuteUbergraph_HudMain::m__byte_Variable4' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, CallFunc_GetOwningPlayer_ReturnValue) == 0x000030, "Member 'HudMain_C_ExecuteUbergraph_HudMain::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, CallFunc_GetGameInstance_ReturnValue) == 0x000038, "Member 'HudMain_C_ExecuteUbergraph_HudMain::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, K2Node_DynamicCast_AsTsl_Player_Controller) == 0x000040, "Member 'HudMain_C_ExecuteUbergraph_HudMain::K2Node_DynamicCast_AsTsl_Player_Controller' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'HudMain_C_ExecuteUbergraph_HudMain::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, K2Node_DynamicCast_AsTsl_Game_Instance) == 0x000050, "Member 'HudMain_C_ExecuteUbergraph_HudMain::K2Node_DynamicCast_AsTsl_Game_Instance' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, K2Node_DynamicCast_bSuccess2) == 0x000058, "Member 'HudMain_C_ExecuteUbergraph_HudMain::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, CallFunc_IsReplaying_ReturnValue) == 0x000059, "Member 'HudMain_C_ExecuteUbergraph_HudMain::CallFunc_IsReplaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, CallFunc_GetReplayCurrentTime_ReturnValue) == 0x00005C, "Member 'HudMain_C_ExecuteUbergraph_HudMain::CallFunc_GetReplayCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000060, "Member 'HudMain_C_ExecuteUbergraph_HudMain::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, CallFunc_GetHUD_ReturnValue) == 0x000068, "Member 'HudMain_C_ExecuteUbergraph_HudMain::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, K2Node_CustomEvent_WidgetName) == 0x000070, "Member 'HudMain_C_ExecuteUbergraph_HudMain::K2Node_CustomEvent_WidgetName' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, K2Node_CustomEvent_bShow) == 0x000080, "Member 'HudMain_C_ExecuteUbergraph_HudMain::K2Node_CustomEvent_bShow' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, K2Node_DynamicCast_AsTsl_HUD) == 0x000088, "Member 'HudMain_C_ExecuteUbergraph_HudMain::K2Node_DynamicCast_AsTsl_HUD' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, K2Node_DynamicCast_bSuccess3) == 0x000090, "Member 'HudMain_C_ExecuteUbergraph_HudMain::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, K2Node_Select_Default) == 0x000091, "Member 'HudMain_C_ExecuteUbergraph_HudMain::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000092, "Member 'HudMain_C_ExecuteUbergraph_HudMain::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, K2Node_Select2_Default) == 0x000093, "Member 'HudMain_C_ExecuteUbergraph_HudMain::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, CallFunc_EqualEqual_StrStr_ReturnValue2) == 0x000094, "Member 'HudMain_C_ExecuteUbergraph_HudMain::CallFunc_EqualEqual_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, CallFunc_GetMiniMapTypes_ReturnValue) == 0x000098, "Member 'HudMain_C_ExecuteUbergraph_HudMain::CallFunc_GetMiniMapTypes_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, CallFunc_GetSelectMiniMapTypeIndex_ReturnValue) == 0x0000A8, "Member 'HudMain_C_ExecuteUbergraph_HudMain::CallFunc_GetSelectMiniMapTypeIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, CallFunc_Array_Get_Item) == 0x0000B0, "Member 'HudMain_C_ExecuteUbergraph_HudMain::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, K2Node_Event_MyGeometry) == 0x0000D8, "Member 'HudMain_C_ExecuteUbergraph_HudMain::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(HudMain_C_ExecuteUbergraph_HudMain, K2Node_Event_InDeltaTime) == 0x00010C, "Member 'HudMain_C_ExecuteUbergraph_HudMain::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function HudMain.HudMain_C.Tick
// 0x0038 (0x0038 - 0x0000)
struct HudMain_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_Tick) == 0x000004, "Wrong alignment on HudMain_C_Tick");
static_assert(sizeof(HudMain_C_Tick) == 0x000038, "Wrong size on HudMain_C_Tick");
static_assert(offsetof(HudMain_C_Tick, MyGeometry) == 0x000000, "Member 'HudMain_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(HudMain_C_Tick, InDeltaTime) == 0x000034, "Member 'HudMain_C_Tick::InDeltaTime' has a wrong offset!");

// Function HudMain.HudMain_C.OnShowWidget
// 0x0018 (0x0018 - 0x0000)
struct HudMain_C_OnShowWidget final
{
public:
	class FString                                 WidgetName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor)
	bool                                          bShow;                                             // 0x0010(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_OnShowWidget) == 0x000008, "Wrong alignment on HudMain_C_OnShowWidget");
static_assert(sizeof(HudMain_C_OnShowWidget) == 0x000018, "Wrong size on HudMain_C_OnShowWidget");
static_assert(offsetof(HudMain_C_OnShowWidget, WidgetName) == 0x000000, "Member 'HudMain_C_OnShowWidget::WidgetName' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnShowWidget, bShow) == 0x000010, "Member 'HudMain_C_OnShowWidget::bShow' has a wrong offset!");

// Function HudMain.HudMain_C.InitializeHUD
// 0x0268 (0x0268 - 0x0000)
struct HudMain_C_InitializeHUD final
{
public:
	bool                                          bIsReplaying;                                      // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x0028(0x0010)(ZeroConstructor, NoDestructor)
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig;                 // 0x0038(0x0010)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x0048(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate5;             // 0x0058(0x0010)(ZeroConstructor, NoDestructor)
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig2;                // 0x0068(0x0010)()
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig3;                // 0x0078(0x0010)()
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig4;                // 0x0088(0x0010)()
	int32                                         CallFunc_GetSelectMiniMapTypeIndex_ReturnValue;    // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FUiType>                        CallFunc_GetMiniMapTypes_ReturnValue;              // 0x00A0(0x0010)(ZeroConstructor, ReferenceParm)
	class UClass*                                 CallFunc_GetMiniMapType_MiniMapype;                // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FUiType                                CallFunc_Array_Get_Item;                           // 0x00B8(0x0028)()
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig5;                // 0x00E0(0x0010)()
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig6;                // 0x00F0(0x0010)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate6;             // 0x0100(0x0010)(ZeroConstructor, NoDestructor)
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig7;                // 0x0110(0x0010)()
	EObserverAuthorityType                        CallFunc_GetObserverAuthorityType_ReturnValue;     // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig8;                // 0x0128(0x0010)()
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig9;                // 0x0140(0x0010)()
	class UHitNotifyWidget_C*                     CallFunc_Create_ReturnValue;                       // 0x0150(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig10;               // 0x0158(0x0010)()
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig11;               // 0x0168(0x0010)()
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig12;               // 0x0178(0x0010)()
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig13;               // 0x0188(0x0010)()
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig14;               // 0x0198(0x0010)()
	TDelegate<void(float ActualDamage, EDamageTypeCategory DamageTypeCategory)> K2Node_CreateDelegate_OutputDelegate7;             // 0x01A8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig15;               // 0x01B8(0x0010)()
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig16;               // 0x01C8(0x0010)()
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig17;               // 0x01D8(0x0010)()
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig18;               // 0x01E8(0x0010)()
	TDelegate<void(ESystemMessageType MessageType, class FText Message)> K2Node_CreateDelegate_OutputDelegate8;             // 0x01F8(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void(const struct FDeathMessage& DeathMessage)> K2Node_CreateDelegate_OutputDelegate9;             // 0x0208(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate10;            // 0x0218(0x0010)(ZeroConstructor, NoDestructor)
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig19;               // 0x0228(0x0010)()
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate11;            // 0x0238(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate12;            // 0x0248(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate13;            // 0x0258(0x0010)(ZeroConstructor, NoDestructor)
};
static_assert(alignof(HudMain_C_InitializeHUD) == 0x000008, "Wrong alignment on HudMain_C_InitializeHUD");
static_assert(sizeof(HudMain_C_InitializeHUD) == 0x000268, "Wrong size on HudMain_C_InitializeHUD");
static_assert(offsetof(HudMain_C_InitializeHUD, bIsReplaying) == 0x000000, "Member 'HudMain_C_InitializeHUD::bIsReplaying' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'HudMain_C_InitializeHUD::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_CreateDelegate_OutputDelegate2) == 0x000018, "Member 'HudMain_C_InitializeHUD::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_CreateDelegate_OutputDelegate3) == 0x000028, "Member 'HudMain_C_InitializeHUD::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig) == 0x000038, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_CreateDelegate_OutputDelegate4) == 0x000048, "Member 'HudMain_C_InitializeHUD::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_CreateDelegate_OutputDelegate5) == 0x000058, "Member 'HudMain_C_InitializeHUD::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig2) == 0x000068, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig2' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig3) == 0x000078, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig3' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig4) == 0x000088, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig4' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, CallFunc_GetSelectMiniMapTypeIndex_ReturnValue) == 0x000098, "Member 'HudMain_C_InitializeHUD::CallFunc_GetSelectMiniMapTypeIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, CallFunc_GetMiniMapTypes_ReturnValue) == 0x0000A0, "Member 'HudMain_C_InitializeHUD::CallFunc_GetMiniMapTypes_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, CallFunc_GetMiniMapType_MiniMapype) == 0x0000B0, "Member 'HudMain_C_InitializeHUD::CallFunc_GetMiniMapType_MiniMapype' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, CallFunc_Array_Get_Item) == 0x0000B8, "Member 'HudMain_C_InitializeHUD::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig5) == 0x0000E0, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig5' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig6) == 0x0000F0, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig6' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_CreateDelegate_OutputDelegate6) == 0x000100, "Member 'HudMain_C_InitializeHUD::K2Node_CreateDelegate_OutputDelegate6' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig7) == 0x000110, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig7' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, CallFunc_GetObserverAuthorityType_ReturnValue) == 0x000120, "Member 'HudMain_C_InitializeHUD::CallFunc_GetObserverAuthorityType_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig8) == 0x000128, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig8' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000138, "Member 'HudMain_C_InitializeHUD::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig9) == 0x000140, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig9' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, CallFunc_Create_ReturnValue) == 0x000150, "Member 'HudMain_C_InitializeHUD::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig10) == 0x000158, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig10' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig11) == 0x000168, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig11' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig12) == 0x000178, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig12' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig13) == 0x000188, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig13' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig14) == 0x000198, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig14' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_CreateDelegate_OutputDelegate7) == 0x0001A8, "Member 'HudMain_C_InitializeHUD::K2Node_CreateDelegate_OutputDelegate7' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig15) == 0x0001B8, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig15' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig16) == 0x0001C8, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig16' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig17) == 0x0001D8, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig17' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig18) == 0x0001E8, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig18' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_CreateDelegate_OutputDelegate8) == 0x0001F8, "Member 'HudMain_C_InitializeHUD::K2Node_CreateDelegate_OutputDelegate8' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_CreateDelegate_OutputDelegate9) == 0x000208, "Member 'HudMain_C_InitializeHUD::K2Node_CreateDelegate_OutputDelegate9' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_CreateDelegate_OutputDelegate10) == 0x000218, "Member 'HudMain_C_InitializeHUD::K2Node_CreateDelegate_OutputDelegate10' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_MakeStruct_TslWidgetConfig19) == 0x000228, "Member 'HudMain_C_InitializeHUD::K2Node_MakeStruct_TslWidgetConfig19' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_CreateDelegate_OutputDelegate11) == 0x000238, "Member 'HudMain_C_InitializeHUD::K2Node_CreateDelegate_OutputDelegate11' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_CreateDelegate_OutputDelegate12) == 0x000248, "Member 'HudMain_C_InitializeHUD::K2Node_CreateDelegate_OutputDelegate12' has a wrong offset!");
static_assert(offsetof(HudMain_C_InitializeHUD, K2Node_CreateDelegate_OutputDelegate13) == 0x000258, "Member 'HudMain_C_InitializeHUD::K2Node_CreateDelegate_OutputDelegate13' has a wrong offset!");

// Function HudMain.HudMain_C.GetHpRatio
// 0x0018 (0x0018 - 0x0000)
struct HudMain_C_GetHpRatio final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetPossessCharacter_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_GetHpRatio) == 0x000008, "Wrong alignment on HudMain_C_GetHpRatio");
static_assert(sizeof(HudMain_C_GetHpRatio) == 0x000018, "Wrong size on HudMain_C_GetHpRatio");
static_assert(offsetof(HudMain_C_GetHpRatio, ReturnValue) == 0x000000, "Member 'HudMain_C_GetHpRatio::ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_GetHpRatio, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'HudMain_C_GetHpRatio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_GetHpRatio, CallFunc_GetPossessCharacter_ReturnValue) == 0x000008, "Member 'HudMain_C_GetHpRatio::CallFunc_GetPossessCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_GetHpRatio, CallFunc_IsValid_ReturnValue2) == 0x000010, "Member 'HudMain_C_GetHpRatio::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HudMain_C_GetHpRatio, CallFunc_SafeDivide_FloatFloat_ReturnValue) == 0x000014, "Member 'HudMain_C_GetHpRatio::CallFunc_SafeDivide_FloatFloat_ReturnValue' has a wrong offset!");

// Function HudMain.HudMain_C.Get_HealthMax_Text_0
// 0x0048 (0x0048 - 0x0000)
struct HudMain_C_Get_HealthMax_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetPossessCharacter_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
};
static_assert(alignof(HudMain_C_Get_HealthMax_Text_0) == 0x000008, "Wrong alignment on HudMain_C_Get_HealthMax_Text_0");
static_assert(sizeof(HudMain_C_Get_HealthMax_Text_0) == 0x000048, "Wrong size on HudMain_C_Get_HealthMax_Text_0");
static_assert(offsetof(HudMain_C_Get_HealthMax_Text_0, ReturnValue) == 0x000000, "Member 'HudMain_C_Get_HealthMax_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_HealthMax_Text_0, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'HudMain_C_Get_HealthMax_Text_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_HealthMax_Text_0, CallFunc_GetPossessCharacter_ReturnValue) == 0x000020, "Member 'HudMain_C_Get_HealthMax_Text_0::CallFunc_GetPossessCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_HealthMax_Text_0, CallFunc_IsValid_ReturnValue2) == 0x000028, "Member 'HudMain_C_Get_HealthMax_Text_0::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_HealthMax_Text_0, CallFunc_FFloor_ReturnValue) == 0x00002C, "Member 'HudMain_C_Get_HealthMax_Text_0::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_HealthMax_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'HudMain_C_Get_HealthMax_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function HudMain.HudMain_C.Get_Health_Text_0
// 0x0048 (0x0048 - 0x0000)
struct HudMain_C_Get_Health_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetPossessCharacter_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
};
static_assert(alignof(HudMain_C_Get_Health_Text_0) == 0x000008, "Wrong alignment on HudMain_C_Get_Health_Text_0");
static_assert(sizeof(HudMain_C_Get_Health_Text_0) == 0x000048, "Wrong size on HudMain_C_Get_Health_Text_0");
static_assert(offsetof(HudMain_C_Get_Health_Text_0, ReturnValue) == 0x000000, "Member 'HudMain_C_Get_Health_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Health_Text_0, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'HudMain_C_Get_Health_Text_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Health_Text_0, CallFunc_GetPossessCharacter_ReturnValue) == 0x000020, "Member 'HudMain_C_Get_Health_Text_0::CallFunc_GetPossessCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Health_Text_0, CallFunc_IsValid_ReturnValue2) == 0x000028, "Member 'HudMain_C_Get_Health_Text_0::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Health_Text_0, CallFunc_FFloor_ReturnValue) == 0x00002C, "Member 'HudMain_C_Get_Health_Text_0::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Health_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'HudMain_C_Get_Health_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function HudMain.HudMain_C.Get_NumPlayersLeft_Text_0
// 0x0048 (0x0048 - 0x0000)
struct HudMain_C_Get_NumPlayersLeft_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslGameState*                          K2Node_DynamicCast_AsTsl_Game_State;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0030(0x0018)()
};
static_assert(alignof(HudMain_C_Get_NumPlayersLeft_Text_0) == 0x000008, "Wrong alignment on HudMain_C_Get_NumPlayersLeft_Text_0");
static_assert(sizeof(HudMain_C_Get_NumPlayersLeft_Text_0) == 0x000048, "Wrong size on HudMain_C_Get_NumPlayersLeft_Text_0");
static_assert(offsetof(HudMain_C_Get_NumPlayersLeft_Text_0, ReturnValue) == 0x000000, "Member 'HudMain_C_Get_NumPlayersLeft_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_NumPlayersLeft_Text_0, CallFunc_GetGameState_ReturnValue) == 0x000018, "Member 'HudMain_C_Get_NumPlayersLeft_Text_0::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_NumPlayersLeft_Text_0, K2Node_DynamicCast_AsTsl_Game_State) == 0x000020, "Member 'HudMain_C_Get_NumPlayersLeft_Text_0::K2Node_DynamicCast_AsTsl_Game_State' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_NumPlayersLeft_Text_0, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'HudMain_C_Get_NumPlayersLeft_Text_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_NumPlayersLeft_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000030, "Member 'HudMain_C_Get_NumPlayersLeft_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function HudMain.HudMain_C.Get_PlayerCoordinate_Text_0
// 0x0058 (0x0058 - 0x0000)
struct HudMain_C_Get_PlayerCoordinate_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetPossessCharacter_ReturnValue;          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_GetLocationString_ReturnValue;            // 0x0028(0x0010)(ZeroConstructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0040(0x0018)()
};
static_assert(alignof(HudMain_C_Get_PlayerCoordinate_Text_0) == 0x000008, "Wrong alignment on HudMain_C_Get_PlayerCoordinate_Text_0");
static_assert(sizeof(HudMain_C_Get_PlayerCoordinate_Text_0) == 0x000058, "Wrong size on HudMain_C_Get_PlayerCoordinate_Text_0");
static_assert(offsetof(HudMain_C_Get_PlayerCoordinate_Text_0, ReturnValue) == 0x000000, "Member 'HudMain_C_Get_PlayerCoordinate_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_PlayerCoordinate_Text_0, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'HudMain_C_Get_PlayerCoordinate_Text_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_PlayerCoordinate_Text_0, CallFunc_GetPossessCharacter_ReturnValue) == 0x000020, "Member 'HudMain_C_Get_PlayerCoordinate_Text_0::CallFunc_GetPossessCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_PlayerCoordinate_Text_0, CallFunc_GetLocationString_ReturnValue) == 0x000028, "Member 'HudMain_C_Get_PlayerCoordinate_Text_0::CallFunc_GetLocationString_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_PlayerCoordinate_Text_0, CallFunc_IsValid_ReturnValue2) == 0x000038, "Member 'HudMain_C_Get_PlayerCoordinate_Text_0::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_PlayerCoordinate_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000040, "Member 'HudMain_C_Get_PlayerCoordinate_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function HudMain.HudMain_C.OnKey_ToggleInventory
// 0x0040 (0x0040 - 0x0000)
struct HudMain_C_OnKey_ToggleInventory final
{
public:
	bool                                          m__bool_Variable;                                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m__string_Variable;                                // 0x0008(0x0010)(ZeroConstructor)
	class FString                                 m__string_Variable2;                               // 0x0018(0x0010)(ZeroConstructor)
	class FString                                 K2Node_Select_Default;                             // 0x0028(0x0010)(ZeroConstructor)
	bool                                          CallFunc_IsCharacterAlive_IsAlive;                 // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWidgetShow_ReturnValue;                 // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWasInventoryShow;                                 // 0x003A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_OnKey_ToggleInventory) == 0x000008, "Wrong alignment on HudMain_C_OnKey_ToggleInventory");
static_assert(sizeof(HudMain_C_OnKey_ToggleInventory) == 0x000040, "Wrong size on HudMain_C_OnKey_ToggleInventory");
static_assert(offsetof(HudMain_C_OnKey_ToggleInventory, m__bool_Variable) == 0x000000, "Member 'HudMain_C_OnKey_ToggleInventory::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnKey_ToggleInventory, m__string_Variable) == 0x000008, "Member 'HudMain_C_OnKey_ToggleInventory::m__string_Variable' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnKey_ToggleInventory, m__string_Variable2) == 0x000018, "Member 'HudMain_C_OnKey_ToggleInventory::m__string_Variable2' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnKey_ToggleInventory, K2Node_Select_Default) == 0x000028, "Member 'HudMain_C_OnKey_ToggleInventory::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnKey_ToggleInventory, CallFunc_IsCharacterAlive_IsAlive) == 0x000038, "Member 'HudMain_C_OnKey_ToggleInventory::CallFunc_IsCharacterAlive_IsAlive' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnKey_ToggleInventory, CallFunc_IsWidgetShow_ReturnValue) == 0x000039, "Member 'HudMain_C_OnKey_ToggleInventory::CallFunc_IsWidgetShow_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnKey_ToggleInventory, bWasInventoryShow) == 0x00003A, "Member 'HudMain_C_OnKey_ToggleInventory::bWasInventoryShow' has a wrong offset!");

// Function HudMain.HudMain_C.OnToggleMap
// 0x0006 (0x0006 - 0x0000)
struct HudMain_C_OnToggleMap final
{
public:
	bool                                          CallFunc_IsObserving_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSpectating_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCharacterAlive_IsAlive;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWidgetShow_ReturnValue;                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWasMapShow;                                       // 0x0005(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_OnToggleMap) == 0x000001, "Wrong alignment on HudMain_C_OnToggleMap");
static_assert(sizeof(HudMain_C_OnToggleMap) == 0x000006, "Wrong size on HudMain_C_OnToggleMap");
static_assert(offsetof(HudMain_C_OnToggleMap, CallFunc_IsObserving_ReturnValue) == 0x000000, "Member 'HudMain_C_OnToggleMap::CallFunc_IsObserving_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleMap, CallFunc_IsSpectating_ReturnValue) == 0x000001, "Member 'HudMain_C_OnToggleMap::CallFunc_IsSpectating_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleMap, CallFunc_IsCharacterAlive_IsAlive) == 0x000002, "Member 'HudMain_C_OnToggleMap::CallFunc_IsCharacterAlive_IsAlive' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleMap, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'HudMain_C_OnToggleMap::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleMap, CallFunc_IsWidgetShow_ReturnValue) == 0x000004, "Member 'HudMain_C_OnToggleMap::CallFunc_IsWidgetShow_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleMap, bWasMapShow) == 0x000005, "Member 'HudMain_C_OnToggleMap::bWasMapShow' has a wrong offset!");

// Function HudMain.HudMain_C.Get_DebugInformation_Text_0
// 0x0050 (0x0050 - 0x0000)
struct HudMain_C_Get_DebugInformation_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerController*                   K2Node_DynamicCast_AsTsl_Player_Controller;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetHudDebugText_ReturnValue;              // 0x0030(0x0018)()
	bool                                          IsWeaponProcessor;                                 // 0x0048(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          IsValidFacade;                                     // 0x0049(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_Get_DebugInformation_Text_0) == 0x000008, "Wrong alignment on HudMain_C_Get_DebugInformation_Text_0");
static_assert(sizeof(HudMain_C_Get_DebugInformation_Text_0) == 0x000050, "Wrong size on HudMain_C_Get_DebugInformation_Text_0");
static_assert(offsetof(HudMain_C_Get_DebugInformation_Text_0, ReturnValue) == 0x000000, "Member 'HudMain_C_Get_DebugInformation_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_DebugInformation_Text_0, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'HudMain_C_Get_DebugInformation_Text_0::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_DebugInformation_Text_0, K2Node_DynamicCast_AsTsl_Player_Controller) == 0x000020, "Member 'HudMain_C_Get_DebugInformation_Text_0::K2Node_DynamicCast_AsTsl_Player_Controller' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_DebugInformation_Text_0, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'HudMain_C_Get_DebugInformation_Text_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_DebugInformation_Text_0, CallFunc_GetHudDebugText_ReturnValue) == 0x000030, "Member 'HudMain_C_Get_DebugInformation_Text_0::CallFunc_GetHudDebugText_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_DebugInformation_Text_0, IsWeaponProcessor) == 0x000048, "Member 'HudMain_C_Get_DebugInformation_Text_0::IsWeaponProcessor' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_DebugInformation_Text_0, IsValidFacade) == 0x000049, "Member 'HudMain_C_Get_DebugInformation_Text_0::IsValidFacade' has a wrong offset!");

// Function HudMain.HudMain_C.GetFillColorAndOpacity_0
// 0x0010 (0x0010 - 0x0000)
struct HudMain_C_GetFillColorAndOpacity_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_GetFillColorAndOpacity_0) == 0x000004, "Wrong alignment on HudMain_C_GetFillColorAndOpacity_0");
static_assert(sizeof(HudMain_C_GetFillColorAndOpacity_0) == 0x000010, "Wrong size on HudMain_C_GetFillColorAndOpacity_0");
static_assert(offsetof(HudMain_C_GetFillColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'HudMain_C_GetFillColorAndOpacity_0::ReturnValue' has a wrong offset!");

// Function HudMain.HudMain_C.Get_Vehicle_Health_Ratio
// 0x0038 (0x0038 - 0x0000)
struct HudMain_C_Get_Vehicle_Health_Ratio final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetPossessCharacter_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_GetVehiclePawn_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UTslVehicleCommonComponent*             CallFunc_GetVehicleCommonComponent_ReturnValue;    // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetVehicleBaseHealth_ReturnValue;         // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetVehicleHealth_ReturnValue;             // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_Get_Vehicle_Health_Ratio) == 0x000008, "Wrong alignment on HudMain_C_Get_Vehicle_Health_Ratio");
static_assert(sizeof(HudMain_C_Get_Vehicle_Health_Ratio) == 0x000038, "Wrong size on HudMain_C_Get_Vehicle_Health_Ratio");
static_assert(offsetof(HudMain_C_Get_Vehicle_Health_Ratio, ReturnValue) == 0x000000, "Member 'HudMain_C_Get_Vehicle_Health_Ratio::ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Vehicle_Health_Ratio, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'HudMain_C_Get_Vehicle_Health_Ratio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Vehicle_Health_Ratio, CallFunc_GetPossessCharacter_ReturnValue) == 0x000008, "Member 'HudMain_C_Get_Vehicle_Health_Ratio::CallFunc_GetPossessCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Vehicle_Health_Ratio, CallFunc_GetVehiclePawn_ReturnValue) == 0x000010, "Member 'HudMain_C_Get_Vehicle_Health_Ratio::CallFunc_GetVehiclePawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Vehicle_Health_Ratio, CallFunc_IsValid_ReturnValue2) == 0x000018, "Member 'HudMain_C_Get_Vehicle_Health_Ratio::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Vehicle_Health_Ratio, CallFunc_GetVehicleCommonComponent_ReturnValue) == 0x000020, "Member 'HudMain_C_Get_Vehicle_Health_Ratio::CallFunc_GetVehicleCommonComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Vehicle_Health_Ratio, CallFunc_IsValid_ReturnValue3) == 0x000028, "Member 'HudMain_C_Get_Vehicle_Health_Ratio::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Vehicle_Health_Ratio, CallFunc_GetVehicleBaseHealth_ReturnValue) == 0x00002C, "Member 'HudMain_C_Get_Vehicle_Health_Ratio::CallFunc_GetVehicleBaseHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Vehicle_Health_Ratio, CallFunc_GetVehicleHealth_ReturnValue) == 0x000030, "Member 'HudMain_C_Get_Vehicle_Health_Ratio::CallFunc_GetVehicleHealth_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Vehicle_Health_Ratio, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000034, "Member 'HudMain_C_Get_Vehicle_Health_Ratio::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function HudMain.HudMain_C.OnKey_SystemMenuOrEscape
// 0x0004 (0x0004 - 0x0000)
struct HudMain_C_OnKey_SystemMenuOrEscape final
{
public:
	bool                                          CallFunc_IsReplaying_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HideWidgetByEscape_ReturnValue;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWidgetHide;                                       // 0x0003(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_OnKey_SystemMenuOrEscape) == 0x000001, "Wrong alignment on HudMain_C_OnKey_SystemMenuOrEscape");
static_assert(sizeof(HudMain_C_OnKey_SystemMenuOrEscape) == 0x000004, "Wrong size on HudMain_C_OnKey_SystemMenuOrEscape");
static_assert(offsetof(HudMain_C_OnKey_SystemMenuOrEscape, CallFunc_IsReplaying_ReturnValue) == 0x000000, "Member 'HudMain_C_OnKey_SystemMenuOrEscape::CallFunc_IsReplaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnKey_SystemMenuOrEscape, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'HudMain_C_OnKey_SystemMenuOrEscape::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnKey_SystemMenuOrEscape, CallFunc_HideWidgetByEscape_ReturnValue) == 0x000002, "Member 'HudMain_C_OnKey_SystemMenuOrEscape::CallFunc_HideWidgetByEscape_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnKey_SystemMenuOrEscape, bWidgetHide) == 0x000003, "Member 'HudMain_C_OnKey_SystemMenuOrEscape::bWidgetHide' has a wrong offset!");

// Function HudMain.HudMain_C.Get_HealthBar_FillColorAndOpacity_0
// 0x0018 (0x0018 - 0x0000)
struct HudMain_C_Get_HealthBar_FillColorAndOpacity_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetHpRatio_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue2;     // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue3;     // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_Get_HealthBar_FillColorAndOpacity_0) == 0x000004, "Wrong alignment on HudMain_C_Get_HealthBar_FillColorAndOpacity_0");
static_assert(sizeof(HudMain_C_Get_HealthBar_FillColorAndOpacity_0) == 0x000018, "Wrong size on HudMain_C_Get_HealthBar_FillColorAndOpacity_0");
static_assert(offsetof(HudMain_C_Get_HealthBar_FillColorAndOpacity_0, ReturnValue) == 0x000000, "Member 'HudMain_C_Get_HealthBar_FillColorAndOpacity_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_HealthBar_FillColorAndOpacity_0, CallFunc_GetHpRatio_ReturnValue) == 0x000010, "Member 'HudMain_C_Get_HealthBar_FillColorAndOpacity_0::CallFunc_GetHpRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_HealthBar_FillColorAndOpacity_0, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'HudMain_C_Get_HealthBar_FillColorAndOpacity_0::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_HealthBar_FillColorAndOpacity_0, CallFunc_GreaterEqual_FloatFloat_ReturnValue2) == 0x000015, "Member 'HudMain_C_Get_HealthBar_FillColorAndOpacity_0::CallFunc_GreaterEqual_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_HealthBar_FillColorAndOpacity_0, CallFunc_GreaterEqual_FloatFloat_ReturnValue3) == 0x000016, "Member 'HudMain_C_Get_HealthBar_FillColorAndOpacity_0::CallFunc_GreaterEqual_FloatFloat_ReturnValue3' has a wrong offset!");

// Function HudMain.HudMain_C.OnButtonClick
// 0x0010 (0x0010 - 0x0000)
struct HudMain_C_OnButtonClick final
{
public:
	class FString                                 ButotnName;                                        // 0x0000(0x0010)(Parm, ZeroConstructor)
};
static_assert(alignof(HudMain_C_OnButtonClick) == 0x000008, "Wrong alignment on HudMain_C_OnButtonClick");
static_assert(sizeof(HudMain_C_OnButtonClick) == 0x000010, "Wrong size on HudMain_C_OnButtonClick");
static_assert(offsetof(HudMain_C_OnButtonClick, ButotnName) == 0x000000, "Member 'HudMain_C_OnButtonClick::ButotnName' has a wrong offset!");

// Function HudMain.HudMain_C.OnDisplayKilledMessage
// 0x01E0 (0x01E0 - 0x0000)
struct HudMain_C_OnDisplayKilledMessage final
{
public:
	struct FDeathMessage                          DeathMessage;                                      // 0x0000(0x0080)(Parm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0080(0x0040)()
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USystemMessageWidget_C*                 K2Node_DynamicCast_AsSystem_Message_Widget;        // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D1[0x7];                                       // 0x00D1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00D8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x00F0(0x0040)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0130(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMessageWidget_C*                       CallFunc_Create_ReturnValue;                       // 0x0138(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue2;           // 0x0140(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData3;             // 0x0158(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0198(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x01A8(0x0018)()
	class FString                                 Victim;                                            // 0x01C0(0x0010)(Edit, ZeroConstructor)
	class FString                                 KillerPlayerName;                                  // 0x01D0(0x0010)(Edit, ZeroConstructor)
};
static_assert(alignof(HudMain_C_OnDisplayKilledMessage) == 0x000008, "Wrong alignment on HudMain_C_OnDisplayKilledMessage");
static_assert(sizeof(HudMain_C_OnDisplayKilledMessage) == 0x0001E0, "Wrong size on HudMain_C_OnDisplayKilledMessage");
static_assert(offsetof(HudMain_C_OnDisplayKilledMessage, DeathMessage) == 0x000000, "Member 'HudMain_C_OnDisplayKilledMessage::DeathMessage' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplayKilledMessage, K2Node_MakeStruct_FormatArgumentData) == 0x000080, "Member 'HudMain_C_OnDisplayKilledMessage::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplayKilledMessage, CallFunc_GetWidget_ReturnValue) == 0x0000C0, "Member 'HudMain_C_OnDisplayKilledMessage::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplayKilledMessage, K2Node_DynamicCast_AsSystem_Message_Widget) == 0x0000C8, "Member 'HudMain_C_OnDisplayKilledMessage::K2Node_DynamicCast_AsSystem_Message_Widget' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplayKilledMessage, K2Node_DynamicCast_bSuccess) == 0x0000D0, "Member 'HudMain_C_OnDisplayKilledMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplayKilledMessage, CallFunc_Conv_StringToText_ReturnValue) == 0x0000D8, "Member 'HudMain_C_OnDisplayKilledMessage::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplayKilledMessage, K2Node_MakeStruct_FormatArgumentData2) == 0x0000F0, "Member 'HudMain_C_OnDisplayKilledMessage::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplayKilledMessage, CallFunc_GetOwningPlayer_ReturnValue) == 0x000130, "Member 'HudMain_C_OnDisplayKilledMessage::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplayKilledMessage, CallFunc_Create_ReturnValue) == 0x000138, "Member 'HudMain_C_OnDisplayKilledMessage::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplayKilledMessage, CallFunc_Conv_StringToText_ReturnValue2) == 0x000140, "Member 'HudMain_C_OnDisplayKilledMessage::CallFunc_Conv_StringToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplayKilledMessage, K2Node_MakeStruct_FormatArgumentData3) == 0x000158, "Member 'HudMain_C_OnDisplayKilledMessage::K2Node_MakeStruct_FormatArgumentData3' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplayKilledMessage, K2Node_MakeArray_Array) == 0x000198, "Member 'HudMain_C_OnDisplayKilledMessage::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplayKilledMessage, CallFunc_Format_ReturnValue) == 0x0001A8, "Member 'HudMain_C_OnDisplayKilledMessage::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplayKilledMessage, Victim) == 0x0001C0, "Member 'HudMain_C_OnDisplayKilledMessage::Victim' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplayKilledMessage, KillerPlayerName) == 0x0001D0, "Member 'HudMain_C_OnDisplayKilledMessage::KillerPlayerName' has a wrong offset!");

// Function HudMain.HudMain_C.OnDisplaySystemMessage
// 0x0118 (0x0118 - 0x0000)
struct HudMain_C_OnDisplaySystemMessage final
{
public:
	ESystemMessageType                            MessageType;                                       // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Message;                                           // 0x0008(0x0018)(Parm)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMessageWidget_C*                       CallFunc_Create_ReturnValue;                       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class USystemMessageWidget_C*                 K2Node_DynamicCast_AsSystem_Message_Widget;        // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0050(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor2;                     // 0x0078(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor3;                     // 0x00A0(0x0028)()
	struct FSlateColor                            K2Node_MakeStruct_SlateColor4;                     // 0x00C8(0x0028)()
	struct FSlateColor                            TextColor;                                         // 0x00F0(0x0028)(Edit)
};
static_assert(alignof(HudMain_C_OnDisplaySystemMessage) == 0x000008, "Wrong alignment on HudMain_C_OnDisplaySystemMessage");
static_assert(sizeof(HudMain_C_OnDisplaySystemMessage) == 0x000118, "Wrong size on HudMain_C_OnDisplaySystemMessage");
static_assert(offsetof(HudMain_C_OnDisplaySystemMessage, MessageType) == 0x000000, "Member 'HudMain_C_OnDisplaySystemMessage::MessageType' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplaySystemMessage, Message) == 0x000008, "Member 'HudMain_C_OnDisplaySystemMessage::Message' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplaySystemMessage, K2Node_SwitchEnum_CmpSuccess) == 0x000020, "Member 'HudMain_C_OnDisplaySystemMessage::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplaySystemMessage, CallFunc_GetOwningPlayer_ReturnValue) == 0x000028, "Member 'HudMain_C_OnDisplaySystemMessage::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplaySystemMessage, CallFunc_GetWidget_ReturnValue) == 0x000030, "Member 'HudMain_C_OnDisplaySystemMessage::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplaySystemMessage, CallFunc_Create_ReturnValue) == 0x000038, "Member 'HudMain_C_OnDisplaySystemMessage::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplaySystemMessage, K2Node_DynamicCast_AsSystem_Message_Widget) == 0x000040, "Member 'HudMain_C_OnDisplaySystemMessage::K2Node_DynamicCast_AsSystem_Message_Widget' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplaySystemMessage, K2Node_DynamicCast_bSuccess) == 0x000048, "Member 'HudMain_C_OnDisplaySystemMessage::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplaySystemMessage, K2Node_MakeStruct_SlateColor) == 0x000050, "Member 'HudMain_C_OnDisplaySystemMessage::K2Node_MakeStruct_SlateColor' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplaySystemMessage, K2Node_MakeStruct_SlateColor2) == 0x000078, "Member 'HudMain_C_OnDisplaySystemMessage::K2Node_MakeStruct_SlateColor2' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplaySystemMessage, K2Node_MakeStruct_SlateColor3) == 0x0000A0, "Member 'HudMain_C_OnDisplaySystemMessage::K2Node_MakeStruct_SlateColor3' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplaySystemMessage, K2Node_MakeStruct_SlateColor4) == 0x0000C8, "Member 'HudMain_C_OnDisplaySystemMessage::K2Node_MakeStruct_SlateColor4' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnDisplaySystemMessage, TextColor) == 0x0000F0, "Member 'HudMain_C_OnDisplaySystemMessage::TextColor' has a wrong offset!");

// Function HudMain.HudMain_C.Get_VisibilityOnMatchState
// 0x0020 (0x0020 - 0x0000)
struct HudMain_C_Get_VisibilityOnMatchState final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATSLGameState_C*                        K2Node_DynamicCast_AsTSLGame_State;                // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchName_CmpSuccess;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_Get_VisibilityOnMatchState) == 0x000008, "Wrong alignment on HudMain_C_Get_VisibilityOnMatchState");
static_assert(sizeof(HudMain_C_Get_VisibilityOnMatchState) == 0x000020, "Wrong size on HudMain_C_Get_VisibilityOnMatchState");
static_assert(offsetof(HudMain_C_Get_VisibilityOnMatchState, ReturnValue) == 0x000000, "Member 'HudMain_C_Get_VisibilityOnMatchState::ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_VisibilityOnMatchState, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'HudMain_C_Get_VisibilityOnMatchState::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_VisibilityOnMatchState, K2Node_DynamicCast_AsTSLGame_State) == 0x000010, "Member 'HudMain_C_Get_VisibilityOnMatchState::K2Node_DynamicCast_AsTSLGame_State' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_VisibilityOnMatchState, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'HudMain_C_Get_VisibilityOnMatchState::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_VisibilityOnMatchState, K2Node_SwitchName_CmpSuccess) == 0x000019, "Member 'HudMain_C_Get_VisibilityOnMatchState::K2Node_SwitchName_CmpSuccess' has a wrong offset!");

// Function HudMain.HudMain_C.Get_ParachuteText_Visibility_0
// 0x0038 (0x0038 - 0x0000)
struct HudMain_C_Get_ParachuteText_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetPossessCharacter_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ITslVehicleInterface>  CallFunc_GetVehicleInterface_ReturnValue;          // 0x0010(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsFallingWithParachute_ReturnValue;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class AParachuteVehicle*                      K2Node_DynamicCast_AsParachute_Vehicle;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsParachuting_ReturnValue;                // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CanReleaseByInput_ReturnValue;            // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_Get_ParachuteText_Visibility_0) == 0x000008, "Wrong alignment on HudMain_C_Get_ParachuteText_Visibility_0");
static_assert(sizeof(HudMain_C_Get_ParachuteText_Visibility_0) == 0x000038, "Wrong size on HudMain_C_Get_ParachuteText_Visibility_0");
static_assert(offsetof(HudMain_C_Get_ParachuteText_Visibility_0, ReturnValue) == 0x000000, "Member 'HudMain_C_Get_ParachuteText_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_ParachuteText_Visibility_0, CallFunc_IsValid_ReturnValue) == 0x000001, "Member 'HudMain_C_Get_ParachuteText_Visibility_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_ParachuteText_Visibility_0, CallFunc_GetPossessCharacter_ReturnValue) == 0x000008, "Member 'HudMain_C_Get_ParachuteText_Visibility_0::CallFunc_GetPossessCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_ParachuteText_Visibility_0, CallFunc_GetVehicleInterface_ReturnValue) == 0x000010, "Member 'HudMain_C_Get_ParachuteText_Visibility_0::CallFunc_GetVehicleInterface_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_ParachuteText_Visibility_0, CallFunc_IsFallingWithParachute_ReturnValue) == 0x000020, "Member 'HudMain_C_Get_ParachuteText_Visibility_0::CallFunc_IsFallingWithParachute_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_ParachuteText_Visibility_0, K2Node_DynamicCast_AsParachute_Vehicle) == 0x000028, "Member 'HudMain_C_Get_ParachuteText_Visibility_0::K2Node_DynamicCast_AsParachute_Vehicle' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_ParachuteText_Visibility_0, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'HudMain_C_Get_ParachuteText_Visibility_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_ParachuteText_Visibility_0, CallFunc_IsParachuting_ReturnValue) == 0x000031, "Member 'HudMain_C_Get_ParachuteText_Visibility_0::CallFunc_IsParachuting_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_ParachuteText_Visibility_0, CallFunc_CanReleaseByInput_ReturnValue) == 0x000032, "Member 'HudMain_C_Get_ParachuteText_Visibility_0::CallFunc_CanReleaseByInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_ParachuteText_Visibility_0, CallFunc_Not_PreBool_ReturnValue) == 0x000033, "Member 'HudMain_C_Get_ParachuteText_Visibility_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_ParachuteText_Visibility_0, CallFunc_IsValid_ReturnValue2) == 0x000034, "Member 'HudMain_C_Get_ParachuteText_Visibility_0::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_ParachuteText_Visibility_0, CallFunc_BooleanAND_ReturnValue) == 0x000035, "Member 'HudMain_C_Get_ParachuteText_Visibility_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_ParachuteText_Visibility_0, CallFunc_BooleanAND_ReturnValue2) == 0x000036, "Member 'HudMain_C_Get_ParachuteText_Visibility_0::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");

// Function HudMain.HudMain_C.OnNitifyHit
// 0x0008 (0x0008 - 0x0000)
struct HudMain_C_OnNitifyHit final
{
public:
	float                                         DamagePercent;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EDamageTypeCategory                           DamageTypeCategory;                                // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_OnNitifyHit) == 0x000004, "Wrong alignment on HudMain_C_OnNitifyHit");
static_assert(sizeof(HudMain_C_OnNitifyHit) == 0x000008, "Wrong size on HudMain_C_OnNitifyHit");
static_assert(offsetof(HudMain_C_OnNitifyHit, DamagePercent) == 0x000000, "Member 'HudMain_C_OnNitifyHit::DamagePercent' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnNitifyHit, DamageTypeCategory) == 0x000004, "Member 'HudMain_C_OnNitifyHit::DamageTypeCategory' has a wrong offset!");

// Function HudMain.HudMain_C.GetBoostRatio
// 0x0018 (0x0018 - 0x0000)
struct HudMain_C_GetBoostRatio final
{
public:
	float                                         ReturnValue;                                       // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetPossessCharacter_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_GetBoostRatio) == 0x000008, "Wrong alignment on HudMain_C_GetBoostRatio");
static_assert(sizeof(HudMain_C_GetBoostRatio) == 0x000018, "Wrong size on HudMain_C_GetBoostRatio");
static_assert(offsetof(HudMain_C_GetBoostRatio, ReturnValue) == 0x000000, "Member 'HudMain_C_GetBoostRatio::ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_GetBoostRatio, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'HudMain_C_GetBoostRatio::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_GetBoostRatio, CallFunc_GetPossessCharacter_ReturnValue) == 0x000008, "Member 'HudMain_C_GetBoostRatio::CallFunc_GetPossessCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_GetBoostRatio, CallFunc_IsValid_ReturnValue2) == 0x000010, "Member 'HudMain_C_GetBoostRatio::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HudMain_C_GetBoostRatio, CallFunc_SafeDivide_FloatFloat_ReturnValue) == 0x000014, "Member 'HudMain_C_GetBoostRatio::CallFunc_SafeDivide_FloatFloat_ReturnValue' has a wrong offset!");

// Function HudMain.HudMain_C.On_BaseCanvas_Prepass_0
// 0x0008 (0x0008 - 0x0000)
struct HudMain_C_On_BaseCanvas_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_On_BaseCanvas_Prepass_0) == 0x000008, "Wrong alignment on HudMain_C_On_BaseCanvas_Prepass_0");
static_assert(sizeof(HudMain_C_On_BaseCanvas_Prepass_0) == 0x000008, "Wrong size on HudMain_C_On_BaseCanvas_Prepass_0");
static_assert(offsetof(HudMain_C_On_BaseCanvas_Prepass_0, BoundWidget) == 0x000000, "Member 'HudMain_C_On_BaseCanvas_Prepass_0::BoundWidget' has a wrong offset!");

// Function HudMain.HudMain_C.OnPrepass_VisibilityOnMatchState
// 0x0010 (0x0010 - 0x0000)
struct HudMain_C_OnPrepass_VisibilityOnMatchState final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              CallFunc_Get_VisibilityOnMatchState_ReturnValue;   // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_OnPrepass_VisibilityOnMatchState) == 0x000008, "Wrong alignment on HudMain_C_OnPrepass_VisibilityOnMatchState");
static_assert(sizeof(HudMain_C_OnPrepass_VisibilityOnMatchState) == 0x000010, "Wrong size on HudMain_C_OnPrepass_VisibilityOnMatchState");
static_assert(offsetof(HudMain_C_OnPrepass_VisibilityOnMatchState, BoundWidget) == 0x000000, "Member 'HudMain_C_OnPrepass_VisibilityOnMatchState::BoundWidget' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnPrepass_VisibilityOnMatchState, CallFunc_Get_VisibilityOnMatchState_ReturnValue) == 0x000008, "Member 'HudMain_C_OnPrepass_VisibilityOnMatchState::CallFunc_Get_VisibilityOnMatchState_ReturnValue' has a wrong offset!");

// Function HudMain.HudMain_C.OnPrepass_0
// 0x0028 (0x0028 - 0x0000)
struct HudMain_C_OnPrepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerController*                   K2Node_DynamicCast_AsTsl_Player_Controller;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSpectating_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_OnPrepass_0) == 0x000008, "Wrong alignment on HudMain_C_OnPrepass_0");
static_assert(sizeof(HudMain_C_OnPrepass_0) == 0x000028, "Wrong size on HudMain_C_OnPrepass_0");
static_assert(offsetof(HudMain_C_OnPrepass_0, BoundWidget) == 0x000000, "Member 'HudMain_C_OnPrepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnPrepass_0, m__bool_Variable) == 0x000008, "Member 'HudMain_C_OnPrepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnPrepass_0, m__byte_Variable) == 0x000009, "Member 'HudMain_C_OnPrepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnPrepass_0, m__byte_Variable2) == 0x00000A, "Member 'HudMain_C_OnPrepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnPrepass_0, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'HudMain_C_OnPrepass_0::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnPrepass_0, K2Node_DynamicCast_AsTsl_Player_Controller) == 0x000018, "Member 'HudMain_C_OnPrepass_0::K2Node_DynamicCast_AsTsl_Player_Controller' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnPrepass_0, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'HudMain_C_OnPrepass_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnPrepass_0, CallFunc_IsSpectating_ReturnValue) == 0x000021, "Member 'HudMain_C_OnPrepass_0::CallFunc_IsSpectating_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnPrepass_0, K2Node_Select_Default) == 0x000022, "Member 'HudMain_C_OnPrepass_0::K2Node_Select_Default' has a wrong offset!");

// Function HudMain.HudMain_C.On_OnlySpectating_Prepass_0
// 0x0028 (0x0028 - 0x0000)
struct HudMain_C_On_OnlySpectating_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerController*                   K2Node_DynamicCast_AsTsl_Player_Controller;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSpectating_ReturnValue;                 // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_On_OnlySpectating_Prepass_0) == 0x000008, "Wrong alignment on HudMain_C_On_OnlySpectating_Prepass_0");
static_assert(sizeof(HudMain_C_On_OnlySpectating_Prepass_0) == 0x000028, "Wrong size on HudMain_C_On_OnlySpectating_Prepass_0");
static_assert(offsetof(HudMain_C_On_OnlySpectating_Prepass_0, BoundWidget) == 0x000000, "Member 'HudMain_C_On_OnlySpectating_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_OnlySpectating_Prepass_0, m__bool_Variable) == 0x000008, "Member 'HudMain_C_On_OnlySpectating_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_OnlySpectating_Prepass_0, m__byte_Variable) == 0x000009, "Member 'HudMain_C_On_OnlySpectating_Prepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_OnlySpectating_Prepass_0, m__byte_Variable2) == 0x00000A, "Member 'HudMain_C_On_OnlySpectating_Prepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_OnlySpectating_Prepass_0, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'HudMain_C_On_OnlySpectating_Prepass_0::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_OnlySpectating_Prepass_0, K2Node_DynamicCast_AsTsl_Player_Controller) == 0x000018, "Member 'HudMain_C_On_OnlySpectating_Prepass_0::K2Node_DynamicCast_AsTsl_Player_Controller' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_OnlySpectating_Prepass_0, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'HudMain_C_On_OnlySpectating_Prepass_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_OnlySpectating_Prepass_0, CallFunc_IsSpectating_ReturnValue) == 0x000021, "Member 'HudMain_C_On_OnlySpectating_Prepass_0::CallFunc_IsSpectating_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_OnlySpectating_Prepass_0, K2Node_Select_Default) == 0x000022, "Member 'HudMain_C_On_OnlySpectating_Prepass_0::K2Node_Select_Default' has a wrong offset!");

// Function HudMain.HudMain_C.Get_TextBlock_1_Text_0
// 0x0068 (0x0068 - 0x0000)
struct HudMain_C_Get_TextBlock_1_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerController*                   K2Node_DynamicCast_AsTsl_Player_Controller;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetViewTargetTslCharacter_ReturnValue;    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0038(0x0010)(ZeroConstructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0050(0x0018)()
};
static_assert(alignof(HudMain_C_Get_TextBlock_1_Text_0) == 0x000008, "Wrong alignment on HudMain_C_Get_TextBlock_1_Text_0");
static_assert(sizeof(HudMain_C_Get_TextBlock_1_Text_0) == 0x000068, "Wrong size on HudMain_C_Get_TextBlock_1_Text_0");
static_assert(offsetof(HudMain_C_Get_TextBlock_1_Text_0, ReturnValue) == 0x000000, "Member 'HudMain_C_Get_TextBlock_1_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_TextBlock_1_Text_0, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'HudMain_C_Get_TextBlock_1_Text_0::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_TextBlock_1_Text_0, K2Node_DynamicCast_AsTsl_Player_Controller) == 0x000020, "Member 'HudMain_C_Get_TextBlock_1_Text_0::K2Node_DynamicCast_AsTsl_Player_Controller' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_TextBlock_1_Text_0, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'HudMain_C_Get_TextBlock_1_Text_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_TextBlock_1_Text_0, CallFunc_GetViewTargetTslCharacter_ReturnValue) == 0x000030, "Member 'HudMain_C_Get_TextBlock_1_Text_0::CallFunc_GetViewTargetTslCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_TextBlock_1_Text_0, CallFunc_GetPlayerName_ReturnValue) == 0x000038, "Member 'HudMain_C_Get_TextBlock_1_Text_0::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_TextBlock_1_Text_0, CallFunc_IsValid_ReturnValue) == 0x000048, "Member 'HudMain_C_Get_TextBlock_1_Text_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_TextBlock_1_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000050, "Member 'HudMain_C_Get_TextBlock_1_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function HudMain.HudMain_C.On_InventoryShowHiddenCanvas_Prepass_0
// 0x0010 (0x0010 - 0x0000)
struct HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWidgetShow_ReturnValue;                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWidgetShow_ReturnValue2;                // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0) == 0x000008, "Wrong alignment on HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0");
static_assert(sizeof(HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0) == 0x000010, "Wrong size on HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0");
static_assert(offsetof(HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0, BoundWidget) == 0x000000, "Member 'HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0, m__bool_Variable) == 0x000008, "Member 'HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0, m__byte_Variable) == 0x000009, "Member 'HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0, m__byte_Variable2) == 0x00000A, "Member 'HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0, CallFunc_IsWidgetShow_ReturnValue) == 0x00000B, "Member 'HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0::CallFunc_IsWidgetShow_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0, CallFunc_IsWidgetShow_ReturnValue2) == 0x00000C, "Member 'HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0::CallFunc_IsWidgetShow_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0, CallFunc_BooleanOR_ReturnValue) == 0x00000D, "Member 'HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0, K2Node_Select_Default) == 0x00000E, "Member 'HudMain_C_On_InventoryShowHiddenCanvas_Prepass_0::K2Node_Select_Default' has a wrong offset!");

// Function HudMain.HudMain_C.OnToggleInventory
// 0x0078 (0x0078 - 0x0000)
struct HudMain_C_OnToggleInventory final
{
public:
	bool                                          Bold;                                              // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m__string_Variable;                                // 0x0008(0x0010)(ZeroConstructor)
	class FString                                 m__string_Variable2;                               // 0x0018(0x0010)(ZeroConstructor)
	bool                                          m__bool_Variable2;                                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m__string_Variable3;                               // 0x0030(0x0010)(ZeroConstructor)
	class FString                                 m__string_Variable4;                               // 0x0040(0x0010)(ZeroConstructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0058(0x0010)(ZeroConstructor)
	class FString                                 K2Node_Select2_Default;                            // 0x0068(0x0010)(ZeroConstructor)
};
static_assert(alignof(HudMain_C_OnToggleInventory) == 0x000008, "Wrong alignment on HudMain_C_OnToggleInventory");
static_assert(sizeof(HudMain_C_OnToggleInventory) == 0x000078, "Wrong size on HudMain_C_OnToggleInventory");
static_assert(offsetof(HudMain_C_OnToggleInventory, Bold) == 0x000000, "Member 'HudMain_C_OnToggleInventory::Bold' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleInventory, m__bool_Variable) == 0x000001, "Member 'HudMain_C_OnToggleInventory::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleInventory, m__string_Variable) == 0x000008, "Member 'HudMain_C_OnToggleInventory::m__string_Variable' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleInventory, m__string_Variable2) == 0x000018, "Member 'HudMain_C_OnToggleInventory::m__string_Variable2' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleInventory, m__bool_Variable2) == 0x000028, "Member 'HudMain_C_OnToggleInventory::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleInventory, m__string_Variable3) == 0x000030, "Member 'HudMain_C_OnToggleInventory::m__string_Variable3' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleInventory, m__string_Variable4) == 0x000040, "Member 'HudMain_C_OnToggleInventory::m__string_Variable4' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleInventory, CallFunc_Not_PreBool_ReturnValue) == 0x000050, "Member 'HudMain_C_OnToggleInventory::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleInventory, K2Node_Select_Default) == 0x000058, "Member 'HudMain_C_OnToggleInventory::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleInventory, K2Node_Select2_Default) == 0x000068, "Member 'HudMain_C_OnToggleInventory::K2Node_Select2_Default' has a wrong offset!");

// Function HudMain.HudMain_C.IsCharacterAlive
// 0x0018 (0x0018 - 0x0000)
struct HudMain_C_IsCharacterAlive final
{
public:
	bool                                          IsAlive;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDying_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0012(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_IsCharacterAlive) == 0x000008, "Wrong alignment on HudMain_C_IsCharacterAlive");
static_assert(sizeof(HudMain_C_IsCharacterAlive) == 0x000018, "Wrong size on HudMain_C_IsCharacterAlive");
static_assert(offsetof(HudMain_C_IsCharacterAlive, IsAlive) == 0x000000, "Member 'HudMain_C_IsCharacterAlive::IsAlive' has a wrong offset!");
static_assert(offsetof(HudMain_C_IsCharacterAlive, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000008, "Member 'HudMain_C_IsCharacterAlive::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(HudMain_C_IsCharacterAlive, CallFunc_IsDying_ReturnValue) == 0x000010, "Member 'HudMain_C_IsCharacterAlive::CallFunc_IsDying_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_IsCharacterAlive, CallFunc_IsValid_ReturnValue) == 0x000011, "Member 'HudMain_C_IsCharacterAlive::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_IsCharacterAlive, CallFunc_Not_PreBool_ReturnValue) == 0x000012, "Member 'HudMain_C_IsCharacterAlive::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function HudMain.HudMain_C.On_SpectatingKeyInfo_Prepass_0
// 0x0030 (0x0030 - 0x0000)
struct HudMain_C_On_SpectatingKeyInfo_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerController*                   K2Node_DynamicCast_AsTsl_Player_Controller;        // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAliveTeamMemberCount_ReturnValue;      // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_On_SpectatingKeyInfo_Prepass_0) == 0x000008, "Wrong alignment on HudMain_C_On_SpectatingKeyInfo_Prepass_0");
static_assert(sizeof(HudMain_C_On_SpectatingKeyInfo_Prepass_0) == 0x000030, "Wrong size on HudMain_C_On_SpectatingKeyInfo_Prepass_0");
static_assert(offsetof(HudMain_C_On_SpectatingKeyInfo_Prepass_0, BoundWidget) == 0x000000, "Member 'HudMain_C_On_SpectatingKeyInfo_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_SpectatingKeyInfo_Prepass_0, m__bool_Variable) == 0x000008, "Member 'HudMain_C_On_SpectatingKeyInfo_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_SpectatingKeyInfo_Prepass_0, m__byte_Variable) == 0x000009, "Member 'HudMain_C_On_SpectatingKeyInfo_Prepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_SpectatingKeyInfo_Prepass_0, m__byte_Variable2) == 0x00000A, "Member 'HudMain_C_On_SpectatingKeyInfo_Prepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_SpectatingKeyInfo_Prepass_0, CallFunc_GetOwningPlayer_ReturnValue) == 0x000010, "Member 'HudMain_C_On_SpectatingKeyInfo_Prepass_0::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_SpectatingKeyInfo_Prepass_0, K2Node_DynamicCast_AsTsl_Player_Controller) == 0x000018, "Member 'HudMain_C_On_SpectatingKeyInfo_Prepass_0::K2Node_DynamicCast_AsTsl_Player_Controller' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_SpectatingKeyInfo_Prepass_0, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'HudMain_C_On_SpectatingKeyInfo_Prepass_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_SpectatingKeyInfo_Prepass_0, CallFunc_GetAliveTeamMemberCount_ReturnValue) == 0x000024, "Member 'HudMain_C_On_SpectatingKeyInfo_Prepass_0::CallFunc_GetAliveTeamMemberCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_SpectatingKeyInfo_Prepass_0, CallFunc_Greater_IntInt_ReturnValue) == 0x000028, "Member 'HudMain_C_On_SpectatingKeyInfo_Prepass_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_SpectatingKeyInfo_Prepass_0, K2Node_Select_Default) == 0x000029, "Member 'HudMain_C_On_SpectatingKeyInfo_Prepass_0::K2Node_Select_Default' has a wrong offset!");

// Function HudMain.HudMain_C.Get_KeyInfo_Text_0
// 0x0130 (0x0130 - 0x0000)
struct HudMain_C_Get_KeyInfo_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	struct FTslInputKey                           CallFunc_GetActionKey_ReturnValue;                 // 0x0018(0x0020)()
	struct FTslInputKey                           CallFunc_GetActionKey_ReturnValue2;                // 0x0038(0x0020)()
	class FText                                   CallFunc_GetKeyName_ReturnValue;                   // 0x0058(0x0018)()
	class FText                                   CallFunc_GetKeyName_ReturnValue2;                  // 0x0070(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0088(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x00C8(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0108(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0118(0x0018)()
};
static_assert(alignof(HudMain_C_Get_KeyInfo_Text_0) == 0x000008, "Wrong alignment on HudMain_C_Get_KeyInfo_Text_0");
static_assert(sizeof(HudMain_C_Get_KeyInfo_Text_0) == 0x000130, "Wrong size on HudMain_C_Get_KeyInfo_Text_0");
static_assert(offsetof(HudMain_C_Get_KeyInfo_Text_0, ReturnValue) == 0x000000, "Member 'HudMain_C_Get_KeyInfo_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_KeyInfo_Text_0, CallFunc_GetActionKey_ReturnValue) == 0x000018, "Member 'HudMain_C_Get_KeyInfo_Text_0::CallFunc_GetActionKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_KeyInfo_Text_0, CallFunc_GetActionKey_ReturnValue2) == 0x000038, "Member 'HudMain_C_Get_KeyInfo_Text_0::CallFunc_GetActionKey_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_KeyInfo_Text_0, CallFunc_GetKeyName_ReturnValue) == 0x000058, "Member 'HudMain_C_Get_KeyInfo_Text_0::CallFunc_GetKeyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_KeyInfo_Text_0, CallFunc_GetKeyName_ReturnValue2) == 0x000070, "Member 'HudMain_C_Get_KeyInfo_Text_0::CallFunc_GetKeyName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_KeyInfo_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000088, "Member 'HudMain_C_Get_KeyInfo_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_KeyInfo_Text_0, K2Node_MakeStruct_FormatArgumentData2) == 0x0000C8, "Member 'HudMain_C_Get_KeyInfo_Text_0::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_KeyInfo_Text_0, K2Node_MakeArray_Array) == 0x000108, "Member 'HudMain_C_Get_KeyInfo_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_KeyInfo_Text_0, CallFunc_Format_ReturnValue) == 0x000118, "Member 'HudMain_C_Get_KeyInfo_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");

// Function HudMain.HudMain_C.OnTogglePlayerList
// 0x0028 (0x0028 - 0x0000)
struct HudMain_C_OnTogglePlayerList final
{
public:
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsObserving_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig;                 // 0x0010(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_OnTogglePlayerList) == 0x000008, "Wrong alignment on HudMain_C_OnTogglePlayerList");
static_assert(sizeof(HudMain_C_OnTogglePlayerList) == 0x000028, "Wrong size on HudMain_C_OnTogglePlayerList");
static_assert(offsetof(HudMain_C_OnTogglePlayerList, CallFunc_GetWidget_ReturnValue) == 0x000000, "Member 'HudMain_C_OnTogglePlayerList::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnTogglePlayerList, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'HudMain_C_OnTogglePlayerList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnTogglePlayerList, CallFunc_IsObserving_ReturnValue) == 0x000009, "Member 'HudMain_C_OnTogglePlayerList::CallFunc_IsObserving_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnTogglePlayerList, K2Node_MakeStruct_TslWidgetConfig) == 0x000010, "Member 'HudMain_C_OnTogglePlayerList::K2Node_MakeStruct_TslWidgetConfig' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnTogglePlayerList, CallFunc_IsValid_ReturnValue2) == 0x000020, "Member 'HudMain_C_OnTogglePlayerList::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnTogglePlayerList, CallFunc_IsValid_ReturnValue3) == 0x000021, "Member 'HudMain_C_OnTogglePlayerList::CallFunc_IsValid_ReturnValue3' has a wrong offset!");

// Function HudMain.HudMain_C.On_CharacterCanvas_Prepass_0
// 0x0020 (0x0020 - 0x0000)
struct HudMain_C_On_CharacterCanvas_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsShowMapOrInventory_bIsShow;             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslPlayerController*                   CallFunc_GetOwningTslPlayerController_ReturnValue; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSpectating_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsObserving_ReturnValue;                  // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_On_CharacterCanvas_Prepass_0) == 0x000008, "Wrong alignment on HudMain_C_On_CharacterCanvas_Prepass_0");
static_assert(sizeof(HudMain_C_On_CharacterCanvas_Prepass_0) == 0x000020, "Wrong size on HudMain_C_On_CharacterCanvas_Prepass_0");
static_assert(offsetof(HudMain_C_On_CharacterCanvas_Prepass_0, BoundWidget) == 0x000000, "Member 'HudMain_C_On_CharacterCanvas_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_CharacterCanvas_Prepass_0, m__bool_Variable) == 0x000008, "Member 'HudMain_C_On_CharacterCanvas_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_CharacterCanvas_Prepass_0, m__byte_Variable) == 0x000009, "Member 'HudMain_C_On_CharacterCanvas_Prepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_CharacterCanvas_Prepass_0, m__byte_Variable2) == 0x00000A, "Member 'HudMain_C_On_CharacterCanvas_Prepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_CharacterCanvas_Prepass_0, CallFunc_IsShowMapOrInventory_bIsShow) == 0x00000B, "Member 'HudMain_C_On_CharacterCanvas_Prepass_0::CallFunc_IsShowMapOrInventory_bIsShow' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_CharacterCanvas_Prepass_0, CallFunc_GetOwningTslPlayerController_ReturnValue) == 0x000010, "Member 'HudMain_C_On_CharacterCanvas_Prepass_0::CallFunc_GetOwningTslPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_CharacterCanvas_Prepass_0, CallFunc_IsSpectating_ReturnValue) == 0x000018, "Member 'HudMain_C_On_CharacterCanvas_Prepass_0::CallFunc_IsSpectating_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_CharacterCanvas_Prepass_0, CallFunc_IsValid_ReturnValue) == 0x000019, "Member 'HudMain_C_On_CharacterCanvas_Prepass_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_CharacterCanvas_Prepass_0, CallFunc_Not_PreBool_ReturnValue) == 0x00001A, "Member 'HudMain_C_On_CharacterCanvas_Prepass_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_CharacterCanvas_Prepass_0, CallFunc_IsObserving_ReturnValue) == 0x00001B, "Member 'HudMain_C_On_CharacterCanvas_Prepass_0::CallFunc_IsObserving_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_CharacterCanvas_Prepass_0, CallFunc_BooleanAND_ReturnValue) == 0x00001C, "Member 'HudMain_C_On_CharacterCanvas_Prepass_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_CharacterCanvas_Prepass_0, CallFunc_BooleanOR_ReturnValue) == 0x00001D, "Member 'HudMain_C_On_CharacterCanvas_Prepass_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_CharacterCanvas_Prepass_0, K2Node_Select_Default) == 0x00001E, "Member 'HudMain_C_On_CharacterCanvas_Prepass_0::K2Node_Select_Default' has a wrong offset!");

// Function HudMain.HudMain_C.OnPrepass_1
// 0x0018 (0x0018 - 0x0000)
struct HudMain_C_OnPrepass_1 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsObserving_ReturnValue;                  // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSpectating_ReturnValue;                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_OnPrepass_1) == 0x000008, "Wrong alignment on HudMain_C_OnPrepass_1");
static_assert(sizeof(HudMain_C_OnPrepass_1) == 0x000018, "Wrong size on HudMain_C_OnPrepass_1");
static_assert(offsetof(HudMain_C_OnPrepass_1, BoundWidget) == 0x000000, "Member 'HudMain_C_OnPrepass_1::BoundWidget' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnPrepass_1, m__byte_Variable) == 0x000008, "Member 'HudMain_C_OnPrepass_1::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnPrepass_1, m__byte_Variable2) == 0x000009, "Member 'HudMain_C_OnPrepass_1::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnPrepass_1, m__bool_Variable) == 0x00000A, "Member 'HudMain_C_OnPrepass_1::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnPrepass_1, CallFunc_IsObserving_ReturnValue) == 0x00000B, "Member 'HudMain_C_OnPrepass_1::CallFunc_IsObserving_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnPrepass_1, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'HudMain_C_OnPrepass_1::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnPrepass_1, CallFunc_IsSpectating_ReturnValue) == 0x00000D, "Member 'HudMain_C_OnPrepass_1::CallFunc_IsSpectating_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnPrepass_1, CallFunc_Not_PreBool_ReturnValue) == 0x00000E, "Member 'HudMain_C_OnPrepass_1::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnPrepass_1, CallFunc_BooleanAND_ReturnValue) == 0x00000F, "Member 'HudMain_C_OnPrepass_1::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnPrepass_1, K2Node_Select_Default) == 0x000010, "Member 'HudMain_C_OnPrepass_1::K2Node_Select_Default' has a wrong offset!");

// Function HudMain.HudMain_C.Get_Spectating_Text_0
// 0x0060 (0x0060 - 0x0000)
struct HudMain_C_Get_Spectating_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerController*                   K2Node_DynamicCast_AsTsl_Player_Controller;        // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsObserving_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSameObservingCameraMode_ReturnValue;    // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   FollowCamText;                                     // 0x0030(0x0018)(Edit)
	class FText                                   SpectatingText;                                    // 0x0048(0x0018)(Edit)
};
static_assert(alignof(HudMain_C_Get_Spectating_Text_0) == 0x000008, "Wrong alignment on HudMain_C_Get_Spectating_Text_0");
static_assert(sizeof(HudMain_C_Get_Spectating_Text_0) == 0x000060, "Wrong size on HudMain_C_Get_Spectating_Text_0");
static_assert(offsetof(HudMain_C_Get_Spectating_Text_0, ReturnValue) == 0x000000, "Member 'HudMain_C_Get_Spectating_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Spectating_Text_0, CallFunc_GetOwningPlayer_ReturnValue) == 0x000018, "Member 'HudMain_C_Get_Spectating_Text_0::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Spectating_Text_0, K2Node_DynamicCast_AsTsl_Player_Controller) == 0x000020, "Member 'HudMain_C_Get_Spectating_Text_0::K2Node_DynamicCast_AsTsl_Player_Controller' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Spectating_Text_0, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'HudMain_C_Get_Spectating_Text_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Spectating_Text_0, CallFunc_IsObserving_ReturnValue) == 0x000029, "Member 'HudMain_C_Get_Spectating_Text_0::CallFunc_IsObserving_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Spectating_Text_0, CallFunc_IsSameObservingCameraMode_ReturnValue) == 0x00002A, "Member 'HudMain_C_Get_Spectating_Text_0::CallFunc_IsSameObservingCameraMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Spectating_Text_0, FollowCamText) == 0x000030, "Member 'HudMain_C_Get_Spectating_Text_0::FollowCamText' has a wrong offset!");
static_assert(offsetof(HudMain_C_Get_Spectating_Text_0, SpectatingText) == 0x000048, "Member 'HudMain_C_Get_Spectating_Text_0::SpectatingText' has a wrong offset!");

// Function HudMain.HudMain_C.On_BlueZoneGpsWidget_RoundType_Prepass_0
// 0x0008 (0x0008 - 0x0000)
struct HudMain_C_On_BlueZoneGpsWidget_RoundType_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_On_BlueZoneGpsWidget_RoundType_Prepass_0) == 0x000008, "Wrong alignment on HudMain_C_On_BlueZoneGpsWidget_RoundType_Prepass_0");
static_assert(sizeof(HudMain_C_On_BlueZoneGpsWidget_RoundType_Prepass_0) == 0x000008, "Wrong size on HudMain_C_On_BlueZoneGpsWidget_RoundType_Prepass_0");
static_assert(offsetof(HudMain_C_On_BlueZoneGpsWidget_RoundType_Prepass_0, BoundWidget) == 0x000000, "Member 'HudMain_C_On_BlueZoneGpsWidget_RoundType_Prepass_0::BoundWidget' has a wrong offset!");

// Function HudMain.HudMain_C.OnKey_MapPressed
// 0x0002 (0x0002 - 0x0000)
struct HudMain_C_OnKey_MapPressed final
{
public:
	ETslInputModes                                CallFunc_GetTslInputMode_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_OnKey_MapPressed) == 0x000001, "Wrong alignment on HudMain_C_OnKey_MapPressed");
static_assert(sizeof(HudMain_C_OnKey_MapPressed) == 0x000002, "Wrong size on HudMain_C_OnKey_MapPressed");
static_assert(offsetof(HudMain_C_OnKey_MapPressed, CallFunc_GetTslInputMode_ReturnValue) == 0x000000, "Member 'HudMain_C_OnKey_MapPressed::CallFunc_GetTslInputMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnKey_MapPressed, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'HudMain_C_OnKey_MapPressed::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function HudMain.HudMain_C.OnKey_MapReleased
// 0x0002 (0x0002 - 0x0000)
struct HudMain_C_OnKey_MapReleased final
{
public:
	ETslInputModes                                CallFunc_GetTslInputMode_ReturnValue;              // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_OnKey_MapReleased) == 0x000001, "Wrong alignment on HudMain_C_OnKey_MapReleased");
static_assert(sizeof(HudMain_C_OnKey_MapReleased) == 0x000002, "Wrong size on HudMain_C_OnKey_MapReleased");
static_assert(offsetof(HudMain_C_OnKey_MapReleased, CallFunc_GetTslInputMode_ReturnValue) == 0x000000, "Member 'HudMain_C_OnKey_MapReleased::CallFunc_GetTslInputMode_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnKey_MapReleased, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000001, "Member 'HudMain_C_OnKey_MapReleased::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function HudMain.HudMain_C.OnMapShow
// 0x0004 (0x0004 - 0x0000)
struct HudMain_C_OnMapShow final
{
public:
	bool                                          CallFunc_IsObserving_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSpectating_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCharacterAlive_IsAlive;                 // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_OnMapShow) == 0x000001, "Wrong alignment on HudMain_C_OnMapShow");
static_assert(sizeof(HudMain_C_OnMapShow) == 0x000004, "Wrong size on HudMain_C_OnMapShow");
static_assert(offsetof(HudMain_C_OnMapShow, CallFunc_IsObserving_ReturnValue) == 0x000000, "Member 'HudMain_C_OnMapShow::CallFunc_IsObserving_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnMapShow, CallFunc_IsSpectating_ReturnValue) == 0x000001, "Member 'HudMain_C_OnMapShow::CallFunc_IsSpectating_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnMapShow, CallFunc_IsCharacterAlive_IsAlive) == 0x000002, "Member 'HudMain_C_OnMapShow::CallFunc_IsCharacterAlive_IsAlive' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnMapShow, CallFunc_BooleanOR_ReturnValue) == 0x000003, "Member 'HudMain_C_OnMapShow::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function HudMain.HudMain_C.OnToggleBattleList
// 0x0028 (0x0028 - 0x0000)
struct HudMain_C_OnToggleBattleList final
{
public:
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsObserving_ReturnValue;                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig;                 // 0x0010(0x0010)()
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_OnToggleBattleList) == 0x000008, "Wrong alignment on HudMain_C_OnToggleBattleList");
static_assert(sizeof(HudMain_C_OnToggleBattleList) == 0x000028, "Wrong size on HudMain_C_OnToggleBattleList");
static_assert(offsetof(HudMain_C_OnToggleBattleList, CallFunc_GetWidget_ReturnValue) == 0x000000, "Member 'HudMain_C_OnToggleBattleList::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleBattleList, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'HudMain_C_OnToggleBattleList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleBattleList, CallFunc_IsObserving_ReturnValue) == 0x000009, "Member 'HudMain_C_OnToggleBattleList::CallFunc_IsObserving_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleBattleList, K2Node_MakeStruct_TslWidgetConfig) == 0x000010, "Member 'HudMain_C_OnToggleBattleList::K2Node_MakeStruct_TslWidgetConfig' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleBattleList, CallFunc_IsValid_ReturnValue2) == 0x000020, "Member 'HudMain_C_OnToggleBattleList::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleBattleList, CallFunc_IsValid_ReturnValue3) == 0x000021, "Member 'HudMain_C_OnToggleBattleList::CallFunc_IsValid_ReturnValue3' has a wrong offset!");

// Function HudMain.HudMain_C.ShowReplayTimeline
// 0x0030 (0x0030 - 0x0000)
struct HudMain_C_ShowReplayTimeline final
{
public:
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReplaying_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UReplayTimeline_C*                      K2Node_DynamicCast_AsReplay_Timeline;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue2;                   // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsVisible_ReturnValue;                    // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_ShowReplayTimeline) == 0x000008, "Wrong alignment on HudMain_C_ShowReplayTimeline");
static_assert(sizeof(HudMain_C_ShowReplayTimeline) == 0x000030, "Wrong size on HudMain_C_ShowReplayTimeline");
static_assert(offsetof(HudMain_C_ShowReplayTimeline, CallFunc_GetWidget_ReturnValue) == 0x000000, "Member 'HudMain_C_ShowReplayTimeline::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_ShowReplayTimeline, CallFunc_IsReplaying_ReturnValue) == 0x000008, "Member 'HudMain_C_ShowReplayTimeline::CallFunc_IsReplaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_ShowReplayTimeline, K2Node_DynamicCast_AsReplay_Timeline) == 0x000010, "Member 'HudMain_C_ShowReplayTimeline::K2Node_DynamicCast_AsReplay_Timeline' has a wrong offset!");
static_assert(offsetof(HudMain_C_ShowReplayTimeline, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'HudMain_C_ShowReplayTimeline::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HudMain_C_ShowReplayTimeline, CallFunc_GetWidget_ReturnValue2) == 0x000020, "Member 'HudMain_C_ShowReplayTimeline::CallFunc_GetWidget_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HudMain_C_ShowReplayTimeline, CallFunc_IsVisible_ReturnValue) == 0x000028, "Member 'HudMain_C_ShowReplayTimeline::CallFunc_IsVisible_ReturnValue' has a wrong offset!");

// Function HudMain.HudMain_C.On_Name_Prepass_0
// 0x0058 (0x0058 - 0x0000)
struct HudMain_C_On_Name_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTextBlock*                             K2Node_DynamicCast_AsText;                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EColorBlindType                               CallFunc_GetCurrentColorBlindKey_ReturnValue;      // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FColorBlindColorData                   CallFunc_Array_Get_Item;                           // 0x0018(0x0014)()
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0030(0x0028)()
};
static_assert(alignof(HudMain_C_On_Name_Prepass_0) == 0x000008, "Wrong alignment on HudMain_C_On_Name_Prepass_0");
static_assert(sizeof(HudMain_C_On_Name_Prepass_0) == 0x000058, "Wrong size on HudMain_C_On_Name_Prepass_0");
static_assert(offsetof(HudMain_C_On_Name_Prepass_0, BoundWidget) == 0x000000, "Member 'HudMain_C_On_Name_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_Name_Prepass_0, K2Node_DynamicCast_AsText) == 0x000008, "Member 'HudMain_C_On_Name_Prepass_0::K2Node_DynamicCast_AsText' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_Name_Prepass_0, K2Node_DynamicCast_bSuccess) == 0x000010, "Member 'HudMain_C_On_Name_Prepass_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_Name_Prepass_0, CallFunc_GetCurrentColorBlindKey_ReturnValue) == 0x000011, "Member 'HudMain_C_On_Name_Prepass_0::CallFunc_GetCurrentColorBlindKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_Name_Prepass_0, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000014, "Member 'HudMain_C_On_Name_Prepass_0::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_Name_Prepass_0, CallFunc_Array_Get_Item) == 0x000018, "Member 'HudMain_C_On_Name_Prepass_0::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HudMain_C_On_Name_Prepass_0, K2Node_MakeStruct_SlateColor) == 0x000030, "Member 'HudMain_C_On_Name_Prepass_0::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function HudMain.HudMain_C.OnToggleOption
// 0x0003 (0x0003 - 0x0000)
struct HudMain_C_OnToggleOption final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HideWidgetByEscape_ReturnValue;           // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bWidgetHide;                                       // 0x0002(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_OnToggleOption) == 0x000001, "Wrong alignment on HudMain_C_OnToggleOption");
static_assert(sizeof(HudMain_C_OnToggleOption) == 0x000003, "Wrong size on HudMain_C_OnToggleOption");
static_assert(offsetof(HudMain_C_OnToggleOption, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'HudMain_C_OnToggleOption::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleOption, CallFunc_HideWidgetByEscape_ReturnValue) == 0x000001, "Member 'HudMain_C_OnToggleOption::CallFunc_HideWidgetByEscape_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnToggleOption, bWidgetHide) == 0x000002, "Member 'HudMain_C_OnToggleOption::bWidgetHide' has a wrong offset!");

// Function HudMain.HudMain_C.InitForReplay
// 0x0001 (0x0001 - 0x0000)
struct HudMain_C_InitForReplay final
{
public:
	bool                                          CallFunc_IsReplaying_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_InitForReplay) == 0x000001, "Wrong alignment on HudMain_C_InitForReplay");
static_assert(sizeof(HudMain_C_InitForReplay) == 0x000001, "Wrong size on HudMain_C_InitForReplay");
static_assert(offsetof(HudMain_C_InitForReplay, CallFunc_IsReplaying_ReturnValue) == 0x000000, "Member 'HudMain_C_InitForReplay::CallFunc_IsReplaying_ReturnValue' has a wrong offset!");

// Function HudMain.HudMain_C.OnKey_ReplayMenuOrEscape
// 0x0004 (0x0004 - 0x0000)
struct HudMain_C_OnKey_ReplayMenuOrEscape final
{
public:
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReplaying_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HideWidgetByEscape_ReturnValue;           // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          WidgetHide;                                        // 0x0003(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_OnKey_ReplayMenuOrEscape) == 0x000001, "Wrong alignment on HudMain_C_OnKey_ReplayMenuOrEscape");
static_assert(sizeof(HudMain_C_OnKey_ReplayMenuOrEscape) == 0x000004, "Wrong size on HudMain_C_OnKey_ReplayMenuOrEscape");
static_assert(offsetof(HudMain_C_OnKey_ReplayMenuOrEscape, CallFunc_Not_PreBool_ReturnValue) == 0x000000, "Member 'HudMain_C_OnKey_ReplayMenuOrEscape::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnKey_ReplayMenuOrEscape, CallFunc_IsReplaying_ReturnValue) == 0x000001, "Member 'HudMain_C_OnKey_ReplayMenuOrEscape::CallFunc_IsReplaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnKey_ReplayMenuOrEscape, CallFunc_HideWidgetByEscape_ReturnValue) == 0x000002, "Member 'HudMain_C_OnKey_ReplayMenuOrEscape::CallFunc_HideWidgetByEscape_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_OnKey_ReplayMenuOrEscape, WidgetHide) == 0x000003, "Member 'HudMain_C_OnKey_ReplayMenuOrEscape::WidgetHide' has a wrong offset!");

// Function HudMain.HudMain_C.BindEventForMapClosing
// 0x0028 (0x0028 - 0x0000)
struct HudMain_C_BindEventForMapClosing final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UNewWorldMapWidget_C*                   K2Node_DynamicCast_AsNew_World_Map_Widget;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_BindEventForMapClosing) == 0x000008, "Wrong alignment on HudMain_C_BindEventForMapClosing");
static_assert(sizeof(HudMain_C_BindEventForMapClosing) == 0x000028, "Wrong size on HudMain_C_BindEventForMapClosing");
static_assert(offsetof(HudMain_C_BindEventForMapClosing, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'HudMain_C_BindEventForMapClosing::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(HudMain_C_BindEventForMapClosing, CallFunc_GetWidget_ReturnValue) == 0x000010, "Member 'HudMain_C_BindEventForMapClosing::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_BindEventForMapClosing, K2Node_DynamicCast_AsNew_World_Map_Widget) == 0x000018, "Member 'HudMain_C_BindEventForMapClosing::K2Node_DynamicCast_AsNew_World_Map_Widget' has a wrong offset!");
static_assert(offsetof(HudMain_C_BindEventForMapClosing, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'HudMain_C_BindEventForMapClosing::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function HudMain.HudMain_C.IsShowMapOrInventory
// 0x0004 (0x0004 - 0x0000)
struct HudMain_C_IsShowMapOrInventory final
{
public:
	bool                                          bIsShow;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWidgetShow_ReturnValue;                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsWidgetShow_ReturnValue2;                // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_IsShowMapOrInventory) == 0x000001, "Wrong alignment on HudMain_C_IsShowMapOrInventory");
static_assert(sizeof(HudMain_C_IsShowMapOrInventory) == 0x000004, "Wrong size on HudMain_C_IsShowMapOrInventory");
static_assert(offsetof(HudMain_C_IsShowMapOrInventory, bIsShow) == 0x000000, "Member 'HudMain_C_IsShowMapOrInventory::bIsShow' has a wrong offset!");
static_assert(offsetof(HudMain_C_IsShowMapOrInventory, CallFunc_IsWidgetShow_ReturnValue) == 0x000001, "Member 'HudMain_C_IsShowMapOrInventory::CallFunc_IsWidgetShow_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_IsShowMapOrInventory, CallFunc_IsWidgetShow_ReturnValue2) == 0x000002, "Member 'HudMain_C_IsShowMapOrInventory::CallFunc_IsWidgetShow_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HudMain_C_IsShowMapOrInventory, CallFunc_IsValid_ReturnValue) == 0x000003, "Member 'HudMain_C_IsShowMapOrInventory::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function HudMain.HudMain_C.GetMiniMapType
// 0x0028 (0x0028 - 0x0000)
struct HudMain_C_GetMiniMapType final
{
public:
	int32                                         Index_0;                                           // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 MiniMapype;                                        // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                 CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UClass*                                 CallFunc_Array_Get_Item2;                          // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HudMain_C_GetMiniMapType) == 0x000008, "Wrong alignment on HudMain_C_GetMiniMapType");
static_assert(sizeof(HudMain_C_GetMiniMapType) == 0x000028, "Wrong size on HudMain_C_GetMiniMapType");
static_assert(offsetof(HudMain_C_GetMiniMapType, Index_0) == 0x000000, "Member 'HudMain_C_GetMiniMapType::Index_0' has a wrong offset!");
static_assert(offsetof(HudMain_C_GetMiniMapType, MiniMapype) == 0x000008, "Member 'HudMain_C_GetMiniMapType::MiniMapype' has a wrong offset!");
static_assert(offsetof(HudMain_C_GetMiniMapType, CallFunc_Array_Get_Item) == 0x000010, "Member 'HudMain_C_GetMiniMapType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(HudMain_C_GetMiniMapType, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000018, "Member 'HudMain_C_GetMiniMapType::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(HudMain_C_GetMiniMapType, CallFunc_Array_Get_Item2) == 0x000020, "Member 'HudMain_C_GetMiniMapType::CallFunc_Array_Get_Item2' has a wrong offset!");

}

