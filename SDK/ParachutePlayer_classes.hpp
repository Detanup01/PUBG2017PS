#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ParachutePlayer

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "TslGame_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass ParachutePlayer.ParachutePlayer_C
// 0x00F8 (0x0630 - 0x0538)
class AParachutePlayer_C final : public AParachuteVehicle
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0538(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UParachuteVehicleSeatInteraction*       ParachuteVehicleSeatInteraction;                   // 0x0540(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               CloudEffectParachuting;                            // 0x0548(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UParticleSystemComponent*               CloudEffectFalling;                                // 0x0550(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UCameraComponent*                       FreeFallFirstPersonCameraInVehicle;                // 0x0558(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USpringArmInVehicleComponent*           FreeFallFirstSpringArmInVehicle;                   // 0x0560(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UCameraComponent*                       FreeFallThirdPersonCameraInVehicle;                // 0x0568(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USpringArmInVehicleComponent*           FreeFallThirdPersonSpringArmInVehicle;             // 0x0570(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UCameraComponent*                       FirstPersonCameraInVehicle;                        // 0x0578(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class UCameraComponent*                       ThirdPersonCameraInVehicle;                        // 0x0580(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USpringArmInVehicleComponent*           FirstPersonSpringArmInVehicle;                     // 0x0588(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USpringArmInVehicleComponent*           ThirdPersonSpringArmInVehicle;                     // 0x0590(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	float                                         m____0______1_48D534754930C313D14949AAF35C3B50;    // 0x0598(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ETimelineDirection                            m____0__Direction_48D534754930C313D14949AAF35C3B50; // 0x059C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59D[0x3];                                      // 0x059D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UTimelineComponent*                     m____________0;                                    // 0x05A0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         MaxTerminalVelocity;                               // 0x05A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         MaxDecreaseTerminalVelocity;                       // 0x05AC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         LandingBrakeFactor;                                // 0x05B0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         MaxLateralSpeed;                                   // 0x05B4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          isDebug;                                           // 0x05B8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5B9[0x7];                                      // 0x05B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	UMulticastDelegateProperty_                   On_Land;                                           // 0x05C0(0x0010)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, BlueprintAssignable, BlueprintCallable)
	struct FVector2D                              TestCoord_Start;                                   // 0x05D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector2D                              TestCoord_End;                                     // 0x05D8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ParachuteFallingAltitudeStart;                     // 0x05E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         ParachuteFallingAltitude;                          // 0x05E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         SpeedKPH;                                          // 0x05E8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         ActualAltitude;                                    // 0x05EC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         InitialSunMultiplier;                              // 0x05F0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         InitialFogMultiplier;                              // 0x05F4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         InitialStartDistance;                              // 0x05F8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         StartSunMultiplier;                                // 0x05FC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         StartFogMultiplier;                                // 0x0600(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         StartStartDistance;                                // 0x0604(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UAtmosphericFogComponent*               RefAtmosphereFogComponent;                         // 0x0608(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UExponentialHeightFogComponent*         RefExponontialFogComponent;                        // 0x0610(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         VerticalSpeedKPH;                                  // 0x0618(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	struct FVector                                LastVelocity;                                      // 0x061C(0x000C)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         RelativeVelocity;                                  // 0x0628(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_ParachutePlayer(int32 EntryPoint);
	void ReceiveBeginPlay();
	void ReceiveTick(float DeltaSeconds);
	void ReceiveHit(class UPrimitiveComponent* MyComp, class AActor* Other, class UPrimitiveComponent* OtherComp, bool bSelfMoved, const struct FVector& HitLocation, const struct FVector& HitNormal, const struct FVector& NormalImpulse, const struct FHitResult& Hit);
	void ReceiveEndPlay(EEndPlayReason EndPlayReason);
	void m____________0__UpdateFunc();
	void m____________0__FinishedFunc();
	void UserConstructionScript();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ParachutePlayer_C">();
	}
	static class AParachutePlayer_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<AParachutePlayer_C>();
	}
};
static_assert(alignof(AParachutePlayer_C) == 0x000008, "Wrong alignment on AParachutePlayer_C");
static_assert(sizeof(AParachutePlayer_C) == 0x000630, "Wrong size on AParachutePlayer_C");
static_assert(offsetof(AParachutePlayer_C, UberGraphFrame) == 0x000538, "Member 'AParachutePlayer_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, ParachuteVehicleSeatInteraction) == 0x000540, "Member 'AParachutePlayer_C::ParachuteVehicleSeatInteraction' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, CloudEffectParachuting) == 0x000548, "Member 'AParachutePlayer_C::CloudEffectParachuting' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, CloudEffectFalling) == 0x000550, "Member 'AParachutePlayer_C::CloudEffectFalling' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, FreeFallFirstPersonCameraInVehicle) == 0x000558, "Member 'AParachutePlayer_C::FreeFallFirstPersonCameraInVehicle' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, FreeFallFirstSpringArmInVehicle) == 0x000560, "Member 'AParachutePlayer_C::FreeFallFirstSpringArmInVehicle' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, FreeFallThirdPersonCameraInVehicle) == 0x000568, "Member 'AParachutePlayer_C::FreeFallThirdPersonCameraInVehicle' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, FreeFallThirdPersonSpringArmInVehicle) == 0x000570, "Member 'AParachutePlayer_C::FreeFallThirdPersonSpringArmInVehicle' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, FirstPersonCameraInVehicle) == 0x000578, "Member 'AParachutePlayer_C::FirstPersonCameraInVehicle' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, ThirdPersonCameraInVehicle) == 0x000580, "Member 'AParachutePlayer_C::ThirdPersonCameraInVehicle' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, FirstPersonSpringArmInVehicle) == 0x000588, "Member 'AParachutePlayer_C::FirstPersonSpringArmInVehicle' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, ThirdPersonSpringArmInVehicle) == 0x000590, "Member 'AParachutePlayer_C::ThirdPersonSpringArmInVehicle' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, m____0______1_48D534754930C313D14949AAF35C3B50) == 0x000598, "Member 'AParachutePlayer_C::m____0______1_48D534754930C313D14949AAF35C3B50' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, m____0__Direction_48D534754930C313D14949AAF35C3B50) == 0x00059C, "Member 'AParachutePlayer_C::m____0__Direction_48D534754930C313D14949AAF35C3B50' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, m____________0) == 0x0005A0, "Member 'AParachutePlayer_C::m____________0' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, MaxTerminalVelocity) == 0x0005A8, "Member 'AParachutePlayer_C::MaxTerminalVelocity' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, MaxDecreaseTerminalVelocity) == 0x0005AC, "Member 'AParachutePlayer_C::MaxDecreaseTerminalVelocity' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, LandingBrakeFactor) == 0x0005B0, "Member 'AParachutePlayer_C::LandingBrakeFactor' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, MaxLateralSpeed) == 0x0005B4, "Member 'AParachutePlayer_C::MaxLateralSpeed' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, isDebug) == 0x0005B8, "Member 'AParachutePlayer_C::isDebug' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, On_Land) == 0x0005C0, "Member 'AParachutePlayer_C::On_Land' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, TestCoord_Start) == 0x0005D0, "Member 'AParachutePlayer_C::TestCoord_Start' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, TestCoord_End) == 0x0005D8, "Member 'AParachutePlayer_C::TestCoord_End' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, ParachuteFallingAltitudeStart) == 0x0005E0, "Member 'AParachutePlayer_C::ParachuteFallingAltitudeStart' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, ParachuteFallingAltitude) == 0x0005E4, "Member 'AParachutePlayer_C::ParachuteFallingAltitude' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, SpeedKPH) == 0x0005E8, "Member 'AParachutePlayer_C::SpeedKPH' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, ActualAltitude) == 0x0005EC, "Member 'AParachutePlayer_C::ActualAltitude' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, InitialSunMultiplier) == 0x0005F0, "Member 'AParachutePlayer_C::InitialSunMultiplier' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, InitialFogMultiplier) == 0x0005F4, "Member 'AParachutePlayer_C::InitialFogMultiplier' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, InitialStartDistance) == 0x0005F8, "Member 'AParachutePlayer_C::InitialStartDistance' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, StartSunMultiplier) == 0x0005FC, "Member 'AParachutePlayer_C::StartSunMultiplier' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, StartFogMultiplier) == 0x000600, "Member 'AParachutePlayer_C::StartFogMultiplier' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, StartStartDistance) == 0x000604, "Member 'AParachutePlayer_C::StartStartDistance' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, RefAtmosphereFogComponent) == 0x000608, "Member 'AParachutePlayer_C::RefAtmosphereFogComponent' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, RefExponontialFogComponent) == 0x000610, "Member 'AParachutePlayer_C::RefExponontialFogComponent' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, VerticalSpeedKPH) == 0x000618, "Member 'AParachutePlayer_C::VerticalSpeedKPH' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, LastVelocity) == 0x00061C, "Member 'AParachutePlayer_C::LastVelocity' has a wrong offset!");
static_assert(offsetof(AParachutePlayer_C, RelativeVelocity) == 0x000628, "Member 'AParachutePlayer_C::RelativeVelocity' has a wrong offset!");

}

