#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UiHelperFunctionsBp

#include "Basic.hpp"

#include "Engine_classes.hpp"
#include "TslGame_structs.hpp"


namespace SDK
{

// BlueprintGeneratedClass UiHelperFunctionsBp.UiHelperFunctionsBp_C
// 0x0000 (0x0028 - 0x0028)
class UUiHelperFunctionsBp_C final : public UBlueprintFunctionLibrary
{
public:
	static TArray<TScriptInterface<class ISlotInterface>> SortItemBp(TArray<TScriptInterface<class ISlotInterface>>& InItemList, bool bSort, class UObject* m_WorldContext);
	static void GetDynamicMaterial(class UWidget* Widget, class UObject* m_WorldContext, class UMaterialInstanceDynamic** DynamicMaterial);
	static void CreateAndSetMaterial(class UWidget* Widget, class UMaterialInstance* Material, class UObject* m_WorldContext, class UMaterialInstanceDynamic** DynamicMaterial);
	static void GetTeamMarkerColor(int32 MemberNumber, class UObject* m_WorldContext, struct FLinearColor* NewParam);
	static void NotifyWidgetShowed(class UUserWidget* Widget, const class FString& WidgetName, bool bShow, class UObject* m_WorldContext);
	static void GetTslCharacters_Bp(const class UObject* WorldContextObject, class UObject* m_WorldContext, TArray<class ATslCharacter*>* OutActors);
	static void GetCharacterStateIcon(int32 State, class UObject* m_WorldContext, class UTexture2D** NewParam);
	static void GetSpectatorColor(bool bISpectator, class UObject* m_WorldContext, struct FLinearColor* Color);
	static void GetStateByCharacter(class ATslCharacter* Character, class UObject* m_WorldContext, int32* OutState);
	static void GetStateByTeam(class ATeam* Team, class UObject* m_WorldContext, int32* State);
	static void IsSpectatorTeam(class UUserWidget* Widget, class ATslCharacter* Character, class UObject* m_WorldContext, bool* bIsTeam);
	static void GetTeamColor(class UObject* m_WorldContext, struct FLinearColor* Color);
	static void IsLastSpectatorTeam(class UUserWidget* Widget, class ATslCharacter* Character, class UObject* m_WorldContext, bool* bIsTeam);
	static void GetBluezoneReleaseTimeBp(class UObject* WorldContextObject, class UObject* m_WorldContext, float* ReleaseTime);
	static void GetBluezoneWarningTimeBp(class UObject* WorldContextObject, class UObject* m_WorldContext, float* WarningTime);
	static void GetCharacterAngle(class UUserWidget* Widget, class UObject* m_WorldContext, float* Angle);
	static void GetCharacterPosititon(class UUserWidget* Widget, class UObject* m_WorldContext, struct FVector* Position);
	static void GetCharacterLook(class UUserWidget* Widget, class UObject* m_WorldContext, struct FVector* Look);
	static void CancelSelfAttachmentPutMode(class UUserWidget* Widget, class UObject* m_WorldContext);

	static void GetDistanceColor(float Distance, class UObject* m_WorldContext, struct FLinearColor* Color);
	static void IsXBoxOnePlatform(class UObject* m_WorldContext, bool* NewParam);
	static void InventoryFocusingColor(class UObject* m_WorldContext, struct FLinearColor* NewParam);
	static void GetInventoryWidget(class UUserWidget* Widget, class UObject* m_WorldContext, class UInventoryWidget_C** InventoryWidget);
	static void IsSelfAttachmentPutMode(class UUserWidget* Widget, class UObject* m_WorldContext, bool* bResult);
	static void GetSelfPutAttachment(class UUserWidget* Widget, class UObject* m_WorldContext, class UAttachableItem** GamepadadSelectedAttachableItem);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"UiHelperFunctionsBp_C">();
	}
	static class UUiHelperFunctionsBp_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UUiHelperFunctionsBp_C>();
	}
};
static_assert(alignof(UUiHelperFunctionsBp_C) == 0x000008, "Wrong alignment on UUiHelperFunctionsBp_C");
static_assert(sizeof(UUiHelperFunctionsBp_C) == 0x000028, "Wrong size on UUiHelperFunctionsBp_C");

}

