#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerHeadWidget

#include "Basic.hpp"

#include "PlayerHeadWidget_classes.hpp"
#include "PlayerHeadWidget_parameters.hpp"


namespace SDK
{

// Function PlayerHeadWidget.PlayerHeadWidget_C.ExecuteUbergraph_PlayerHeadWidget
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::ExecuteUbergraph_PlayerHeadWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "ExecuteUbergraph_PlayerHeadWidget");

	Params::PlayerHeadWidget_C_ExecuteUbergraph_PlayerHeadWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.SetCharacterIconPosition_UC
// (Event, Public, BlueprintEvent)
// Parameters:
// struct FVector2D                        Pos_UC                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    IsHidden                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::SetCharacterIconPosition_UC(const struct FVector2D& Pos_UC, bool IsHidden)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "SetCharacterIconPosition_UC");

	Params::PlayerHeadWidget_C_SetCharacterIconPosition_UC Parms{};

	Parms.Pos_UC = std::move(Pos_UC);
	Parms.IsHidden = IsHidden;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "Tick");

	Params::PlayerHeadWidget_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UPlayerHeadWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.UpdateHealthGauge
// (Public, BlueprintCallable, BlueprintEvent)

void UPlayerHeadWidget_C::UpdateHealthGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "UpdateHealthGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.GetGroggyHealthPercent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   GroggyHealth                                           (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::GetGroggyHealthPercent(float* GroggyHealth)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "GetGroggyHealthPercent");

	Params::PlayerHeadWidget_C_GetGroggyHealthPercent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (GroggyHealth != nullptr)
		*GroggyHealth = Parms.GroggyHealth;
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.GetHealthPercent
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   Health                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::GetHealthPercent(float* Health)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "GetHealthPercent");

	Params::PlayerHeadWidget_C_GetHealthPercent Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Health != nullptr)
		*Health = Parms.Health;
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.IsGroggy
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    IsGroggy_0                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::IsGroggy(bool* IsGroggy_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "IsGroggy");

	Params::PlayerHeadWidget_C_IsGroggy Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsGroggy_0 != nullptr)
		*IsGroggy_0 = Parms.IsGroggy_0;
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.InitBoostGauge
// (Public, BlueprintCallable, BlueprintEvent)

void UPlayerHeadWidget_C::InitBoostGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "InitBoostGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.SetBoostGauge
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   BoostGauge                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::SetBoostGauge(float BoostGauge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "SetBoostGauge");

	Params::PlayerHeadWidget_C_SetBoostGauge Parms{};

	Parms.BoostGauge = BoostGauge;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.UpdateBoostGauge
// (Public, BlueprintCallable, BlueprintEvent)

void UPlayerHeadWidget_C::UpdateBoostGauge()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "UpdateBoostGauge");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.GetBoostGauge
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// float                                   BoostGauge                                             (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::GetBoostGauge(float* BoostGauge)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "GetBoostGauge");

	Params::PlayerHeadWidget_C_GetBoostGauge Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (BoostGauge != nullptr)
		*BoostGauge = Parms.BoostGauge;
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.GetTslWeaponVisibility
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// ESlateVisibility                        Visible                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::GetTslWeaponVisibility(ESlateVisibility* Visible)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "GetTslWeaponVisibility");

	Params::PlayerHeadWidget_C_GetTslWeaponVisibility Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Visible != nullptr)
		*Visible = Parms.Visible;
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.On_WeaponImageSizeBox_Prepass_0
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::On_WeaponImageSizeBox_Prepass_0(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "On_WeaponImageSizeBox_Prepass_0");

	Params::PlayerHeadWidget_C_On_WeaponImageSizeBox_Prepass_0 Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.On_weaponImage_Prepass_0
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::On_weaponImage_Prepass_0(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "On_weaponImage_Prepass_0");

	Params::PlayerHeadWidget_C_On_weaponImage_Prepass_0 Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.UpdateIcon
// (Public, BlueprintCallable, BlueprintEvent)

void UPlayerHeadWidget_C::UpdateIcon()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "UpdateIcon");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.GetTslWeaponColor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FLinearColor                     ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

struct FLinearColor UPlayerHeadWidget_C::GetTslWeaponColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "GetTslWeaponColor");

	Params::PlayerHeadWidget_C_GetTslWeaponColor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.GetWeaponProcessor
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AWeaponProcessor*                 WeaponProcessor                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::GetWeaponProcessor(class AWeaponProcessor** WeaponProcessor)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "GetWeaponProcessor");

	Params::PlayerHeadWidget_C_GetWeaponProcessor Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WeaponProcessor != nullptr)
		*WeaponProcessor = Parms.WeaponProcessor;
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.IsCurrentWeapon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    bCurrentWeapon                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::IsCurrentWeapon(bool* bCurrentWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "IsCurrentWeapon");

	Params::PlayerHeadWidget_C_IsCurrentWeapon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (bCurrentWeapon != nullptr)
		*bCurrentWeapon = Parms.bCurrentWeapon;
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.GetWeaponIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   SlotIndex_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::GetWeaponIndex(int32* SlotIndex_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "GetWeaponIndex");

	Params::PlayerHeadWidget_C_GetWeaponIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SlotIndex_0 != nullptr)
		*SlotIndex_0 = Parms.SlotIndex_0;
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.GetAmmoWeapon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// int32                                   Ammo                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::GetAmmoWeapon(int32* Ammo)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "GetAmmoWeapon");

	Params::PlayerHeadWidget_C_GetAmmoWeapon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Ammo != nullptr)
		*Ammo = Parms.Ammo;
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.GetCurrentWeapon
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ATslWeapon*                       CurrentWeapon                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::GetCurrentWeapon(class ATslWeapon** CurrentWeapon)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "GetCurrentWeapon");

	Params::PlayerHeadWidget_C_GetCurrentWeapon Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CurrentWeapon != nullptr)
		*CurrentWeapon = Parms.CurrentWeapon;
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.On_WeaponHandsOnLoadedAmmoCount_Prepass_0
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::On_WeaponHandsOnLoadedAmmoCount_Prepass_0(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "On_WeaponHandsOnLoadedAmmoCount_Prepass_0");

	Params::PlayerHeadWidget_C_On_WeaponHandsOnLoadedAmmoCount_Prepass_0 Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.GetCurrentWeaponGun
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class ATslWeapon_Gun*                   WeaponGun                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::GetCurrentWeaponGun(class ATslWeapon_Gun** WeaponGun)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "GetCurrentWeaponGun");

	Params::PlayerHeadWidget_C_GetCurrentWeaponGun Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (WeaponGun != nullptr)
		*WeaponGun = Parms.WeaponGun;
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.Get_PlayerName_Text_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UPlayerHeadWidget_C::Get_PlayerName_Text_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "Get_PlayerName_Text_0");

	Params::PlayerHeadWidget_C_Get_PlayerName_Text_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.UpdateTextColor
// (Public, BlueprintCallable, BlueprintEvent)

void UPlayerHeadWidget_C::UpdateTextColor()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "UpdateTextColor");

	UObject::ProcessEvent(Func, nullptr);
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.OnPrepass_0
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::OnPrepass_0(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "OnPrepass_0");

	Params::PlayerHeadWidget_C_OnPrepass_0 Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.OnPrepass_1
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::OnPrepass_1(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "OnPrepass_1");

	Params::PlayerHeadWidget_C_OnPrepass_1 Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.IsEmptyPlayerName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    EmptyPlayerName                                        (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::IsEmptyPlayerName(bool* EmptyPlayerName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "IsEmptyPlayerName");

	Params::PlayerHeadWidget_C_IsEmptyPlayerName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (EmptyPlayerName != nullptr)
		*EmptyPlayerName = Parms.EmptyPlayerName;
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.On_HeadBorder_Prepass_0
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::On_HeadBorder_Prepass_0(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "On_HeadBorder_Prepass_0");

	Params::PlayerHeadWidget_C_On_HeadBorder_Prepass_0 Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function PlayerHeadWidget.PlayerHeadWidget_C.AddAlphaWhenADS
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UPlayerHeadWidget_C::AddAlphaWhenADS(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("PlayerHeadWidget_C", "AddAlphaWhenADS");

	Params::PlayerHeadWidget_C_AddAlphaWhenADS Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}

}

