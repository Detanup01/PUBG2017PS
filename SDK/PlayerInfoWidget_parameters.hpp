#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerInfoWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "TslGame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "InputCore_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PlayerInfoWidget.PlayerInfoWidget_C.ExecuteUbergraph_PlayerInfoWidget
// 0x02F0 (0x02F0 - 0x0000)
struct PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsReplaying_ReturnValue;                  // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAttacked_ReturnValue;                   // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsHitted_ReturnValue;                     // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsAnimationPlaying_ReturnValue2;          // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry2;                          // 0x0040(0x0034)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0074(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0078(0x0034)(IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          K2Node_Event_MouseEvent2;                          // 0x00B0(0x0078)(ConstParm)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0128(0x0078)(ConstParm)
	class ATslHUD*                                CallFunc_GetTslHUD_ReturnValue;                    // 0x01A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EPopupButtonID                                K2Node_CustomEvent_ButtonID;                       // 0x01A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x01A9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1AA[0x6];                                      // 0x01AA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x01B0(0x0010)(ZeroConstructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x01C0(0x0018)()
	TDelegate<void(EPopupButtonID ButtonID)>      K2Node_CreateDelegate_OutputDelegate3;             // 0x01D8(0x0010)(ZeroConstructor, NoDestructor)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x01E8(0x0040)()
	class ATslPlayerController*                   CallFunc_GetOwningTslPlayerController_ReturnValue; // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue;              // 0x0230(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0248(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_249[0x7];                                      // 0x0249(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslHUD*                                CallFunc_GetTslHUD_ReturnValue2;                   // 0x0250(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_MakeLiteralText_ReturnValue2;             // 0x0258(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x0270(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x02B0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x02C0(0x0018)()
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x02D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerController*                   K2Node_DynamicCast_AsTsl_Player_Controller;        // 0x02E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x02E8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget) == 0x000008, "Wrong alignment on PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget");
static_assert(sizeof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget) == 0x0002F0, "Wrong size on PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, EntryPoint) == 0x000000, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, K2Node_CreateDelegate_OutputDelegate2) == 0x000018, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, CallFunc_IsReplaying_ReturnValue) == 0x000028, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::CallFunc_IsReplaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000030, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, CallFunc_IsAnimationPlaying_ReturnValue) == 0x000039, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::CallFunc_IsAnimationPlaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, CallFunc_IsAttacked_ReturnValue) == 0x00003A, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::CallFunc_IsAttacked_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, CallFunc_IsHitted_ReturnValue) == 0x00003B, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::CallFunc_IsHitted_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, CallFunc_IsAnimationPlaying_ReturnValue2) == 0x00003C, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::CallFunc_IsAnimationPlaying_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, K2Node_Event_MyGeometry2) == 0x000040, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::K2Node_Event_MyGeometry2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, K2Node_Event_InDeltaTime) == 0x000074, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, K2Node_Event_MyGeometry) == 0x000078, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, K2Node_Event_MouseEvent2) == 0x0000B0, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::K2Node_Event_MouseEvent2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, K2Node_Event_MouseEvent) == 0x000128, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::K2Node_Event_MouseEvent' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, CallFunc_GetTslHUD_ReturnValue) == 0x0001A0, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::CallFunc_GetTslHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, K2Node_CustomEvent_ButtonID) == 0x0001A8, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::K2Node_CustomEvent_ButtonID' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, K2Node_SwitchEnum_CmpSuccess) == 0x0001A9, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, CallFunc_GetPlayerName_ReturnValue) == 0x0001B0, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, CallFunc_Conv_StringToText_ReturnValue) == 0x0001C0, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, K2Node_CreateDelegate_OutputDelegate3) == 0x0001D8, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, K2Node_MakeStruct_FormatArgumentData) == 0x0001E8, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, CallFunc_GetOwningTslPlayerController_ReturnValue) == 0x000228, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::CallFunc_GetOwningTslPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, CallFunc_MakeLiteralText_ReturnValue) == 0x000230, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::CallFunc_MakeLiteralText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, CallFunc_IsValid_ReturnValue2) == 0x000248, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, CallFunc_GetTslHUD_ReturnValue2) == 0x000250, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::CallFunc_GetTslHUD_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, CallFunc_MakeLiteralText_ReturnValue2) == 0x000258, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::CallFunc_MakeLiteralText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, K2Node_MakeStruct_FormatArgumentData2) == 0x000270, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, K2Node_MakeArray_Array) == 0x0002B0, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, CallFunc_Format_ReturnValue) == 0x0002C0, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x0002D8, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, K2Node_DynamicCast_AsTsl_Player_Controller) == 0x0002E0, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::K2Node_DynamicCast_AsTsl_Player_Controller' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget, K2Node_DynamicCast_bSuccess) == 0x0002E8, "Member 'PlayerInfoWidget_C_ExecuteUbergraph_PlayerInfoWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PlayerInfoWidget.PlayerInfoWidget_C.CustomEvent_0
// 0x0001 (0x0001 - 0x0000)
struct PlayerInfoWidget_C_CustomEvent_0 final
{
public:
	EPopupButtonID                                ButtonID;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerInfoWidget_C_CustomEvent_0) == 0x000001, "Wrong alignment on PlayerInfoWidget_C_CustomEvent_0");
static_assert(sizeof(PlayerInfoWidget_C_CustomEvent_0) == 0x000001, "Wrong size on PlayerInfoWidget_C_CustomEvent_0");
static_assert(offsetof(PlayerInfoWidget_C_CustomEvent_0, ButtonID) == 0x000000, "Member 'PlayerInfoWidget_C_CustomEvent_0::ButtonID' has a wrong offset!");

// Function PlayerInfoWidget.PlayerInfoWidget_C.OnMouseLeave
// 0x0078 (0x0078 - 0x0000)
struct PlayerInfoWidget_C_OnMouseLeave final
{
public:
	struct FPointerEvent                          MouseEvent;                                        // 0x0000(0x0078)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PlayerInfoWidget_C_OnMouseLeave) == 0x000008, "Wrong alignment on PlayerInfoWidget_C_OnMouseLeave");
static_assert(sizeof(PlayerInfoWidget_C_OnMouseLeave) == 0x000078, "Wrong size on PlayerInfoWidget_C_OnMouseLeave");
static_assert(offsetof(PlayerInfoWidget_C_OnMouseLeave, MouseEvent) == 0x000000, "Member 'PlayerInfoWidget_C_OnMouseLeave::MouseEvent' has a wrong offset!");

// Function PlayerInfoWidget.PlayerInfoWidget_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct PlayerInfoWidget_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(PlayerInfoWidget_C_OnMouseEnter) == 0x000008, "Wrong alignment on PlayerInfoWidget_C_OnMouseEnter");
static_assert(sizeof(PlayerInfoWidget_C_OnMouseEnter) == 0x0000B0, "Wrong size on PlayerInfoWidget_C_OnMouseEnter");
static_assert(offsetof(PlayerInfoWidget_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'PlayerInfoWidget_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'PlayerInfoWidget_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function PlayerInfoWidget.PlayerInfoWidget_C.Tick
// 0x0038 (0x0038 - 0x0000)
struct PlayerInfoWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerInfoWidget_C_Tick) == 0x000004, "Wrong alignment on PlayerInfoWidget_C_Tick");
static_assert(sizeof(PlayerInfoWidget_C_Tick) == 0x000038, "Wrong size on PlayerInfoWidget_C_Tick");
static_assert(offsetof(PlayerInfoWidget_C_Tick, MyGeometry) == 0x000000, "Member 'PlayerInfoWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_Tick, InDeltaTime) == 0x000034, "Member 'PlayerInfoWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function PlayerInfoWidget.PlayerInfoWidget_C.UpdateHealthPrepass
// 0x0020 (0x0020 - 0x0000)
struct PlayerInfoWidget_C_UpdateHealthPrepass final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x2];                                        // 0x000A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGroggying_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerInfoWidget_C_UpdateHealthPrepass) == 0x000008, "Wrong alignment on PlayerInfoWidget_C_UpdateHealthPrepass");
static_assert(sizeof(PlayerInfoWidget_C_UpdateHealthPrepass) == 0x000020, "Wrong size on PlayerInfoWidget_C_UpdateHealthPrepass");
static_assert(offsetof(PlayerInfoWidget_C_UpdateHealthPrepass, BoundWidget) == 0x000000, "Member 'PlayerInfoWidget_C_UpdateHealthPrepass::BoundWidget' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_UpdateHealthPrepass, m__bool_Variable) == 0x000008, "Member 'PlayerInfoWidget_C_UpdateHealthPrepass::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_UpdateHealthPrepass, CallFunc_IsValid_ReturnValue) == 0x000009, "Member 'PlayerInfoWidget_C_UpdateHealthPrepass::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_UpdateHealthPrepass, CallFunc_Divide_FloatFloat_ReturnValue) == 0x00000C, "Member 'PlayerInfoWidget_C_UpdateHealthPrepass::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_UpdateHealthPrepass, CallFunc_IsGroggying_ReturnValue) == 0x000010, "Member 'PlayerInfoWidget_C_UpdateHealthPrepass::CallFunc_IsGroggying_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_UpdateHealthPrepass, CallFunc_SafeDivide_FloatFloat_ReturnValue) == 0x000014, "Member 'PlayerInfoWidget_C_UpdateHealthPrepass::CallFunc_SafeDivide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_UpdateHealthPrepass, K2Node_Select_Default) == 0x000018, "Member 'PlayerInfoWidget_C_UpdateHealthPrepass::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_UpdateHealthPrepass, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'PlayerInfoWidget_C_UpdateHealthPrepass::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function PlayerInfoWidget.PlayerInfoWidget_C.On_InfoLayer_Prepass_0
// 0x0010 (0x0010 - 0x0000)
struct PlayerInfoWidget_C_On_InfoLayer_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerInfoWidget_C_On_InfoLayer_Prepass_0) == 0x000008, "Wrong alignment on PlayerInfoWidget_C_On_InfoLayer_Prepass_0");
static_assert(sizeof(PlayerInfoWidget_C_On_InfoLayer_Prepass_0) == 0x000010, "Wrong size on PlayerInfoWidget_C_On_InfoLayer_Prepass_0");
static_assert(offsetof(PlayerInfoWidget_C_On_InfoLayer_Prepass_0, BoundWidget) == 0x000000, "Member 'PlayerInfoWidget_C_On_InfoLayer_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_InfoLayer_Prepass_0, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'PlayerInfoWidget_C_On_InfoLayer_Prepass_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function PlayerInfoWidget.PlayerInfoWidget_C.On_BoostGauge_Prepass_0
// 0x0010 (0x0010 - 0x0000)
struct PlayerInfoWidget_C_On_BoostGauge_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue;        // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerInfoWidget_C_On_BoostGauge_Prepass_0) == 0x000008, "Wrong alignment on PlayerInfoWidget_C_On_BoostGauge_Prepass_0");
static_assert(sizeof(PlayerInfoWidget_C_On_BoostGauge_Prepass_0) == 0x000010, "Wrong size on PlayerInfoWidget_C_On_BoostGauge_Prepass_0");
static_assert(offsetof(PlayerInfoWidget_C_On_BoostGauge_Prepass_0, BoundWidget) == 0x000000, "Member 'PlayerInfoWidget_C_On_BoostGauge_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_BoostGauge_Prepass_0, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'PlayerInfoWidget_C_On_BoostGauge_Prepass_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_BoostGauge_Prepass_0, CallFunc_SafeDivide_FloatFloat_ReturnValue) == 0x00000C, "Member 'PlayerInfoWidget_C_On_BoostGauge_Prepass_0::CallFunc_SafeDivide_FloatFloat_ReturnValue' has a wrong offset!");

// Function PlayerInfoWidget.PlayerInfoWidget_C.On_KillCount_Prepass_0
// 0x0068 (0x0068 - 0x0000)
struct PlayerInfoWidget_C_On_KillCount_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_GetVehiclePawn_ReturnValue;               // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslPlayerState*                        K2Node_DynamicCast_AsTsl_Player_State;             // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslPlayerState*                        CallFunc_GetTslPlayerState_ReturnValue;            // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetKills_ReturnValue;                     // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetKills_ReturnValue2;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
	class FText                                   CallFunc_Conv_IntToText_ReturnValue2;              // 0x0050(0x0018)()
};
static_assert(alignof(PlayerInfoWidget_C_On_KillCount_Prepass_0) == 0x000008, "Wrong alignment on PlayerInfoWidget_C_On_KillCount_Prepass_0");
static_assert(sizeof(PlayerInfoWidget_C_On_KillCount_Prepass_0) == 0x000068, "Wrong size on PlayerInfoWidget_C_On_KillCount_Prepass_0");
static_assert(offsetof(PlayerInfoWidget_C_On_KillCount_Prepass_0, BoundWidget) == 0x000000, "Member 'PlayerInfoWidget_C_On_KillCount_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_KillCount_Prepass_0, CallFunc_GetVehiclePawn_ReturnValue) == 0x000008, "Member 'PlayerInfoWidget_C_On_KillCount_Prepass_0::CallFunc_GetVehiclePawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_KillCount_Prepass_0, CallFunc_IsInVehicle_ReturnValue) == 0x000010, "Member 'PlayerInfoWidget_C_On_KillCount_Prepass_0::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_KillCount_Prepass_0, K2Node_DynamicCast_AsTsl_Player_State) == 0x000018, "Member 'PlayerInfoWidget_C_On_KillCount_Prepass_0::K2Node_DynamicCast_AsTsl_Player_State' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_KillCount_Prepass_0, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PlayerInfoWidget_C_On_KillCount_Prepass_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_KillCount_Prepass_0, CallFunc_GetTslPlayerState_ReturnValue) == 0x000028, "Member 'PlayerInfoWidget_C_On_KillCount_Prepass_0::CallFunc_GetTslPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_KillCount_Prepass_0, CallFunc_GetKills_ReturnValue) == 0x000030, "Member 'PlayerInfoWidget_C_On_KillCount_Prepass_0::CallFunc_GetKills_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_KillCount_Prepass_0, CallFunc_GetKills_ReturnValue2) == 0x000034, "Member 'PlayerInfoWidget_C_On_KillCount_Prepass_0::CallFunc_GetKills_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_KillCount_Prepass_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'PlayerInfoWidget_C_On_KillCount_Prepass_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_KillCount_Prepass_0, CallFunc_Conv_IntToText_ReturnValue2) == 0x000050, "Member 'PlayerInfoWidget_C_On_KillCount_Prepass_0::CallFunc_Conv_IntToText_ReturnValue2' has a wrong offset!");

// Function PlayerInfoWidget.PlayerInfoWidget_C.On_IconImage_Prepass_0
// 0x0030 (0x0030 - 0x0000)
struct PlayerInfoWidget_C_On_IconImage_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsGroggying_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_GetVehiclePawn_ReturnValue;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AParachuteVehicle*                      K2Node_DynamicCast_AsParachute_Vehicle;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDying_ReturnValue;                      // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         State;                                             // 0x002C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerInfoWidget_C_On_IconImage_Prepass_0) == 0x000008, "Wrong alignment on PlayerInfoWidget_C_On_IconImage_Prepass_0");
static_assert(sizeof(PlayerInfoWidget_C_On_IconImage_Prepass_0) == 0x000030, "Wrong size on PlayerInfoWidget_C_On_IconImage_Prepass_0");
static_assert(offsetof(PlayerInfoWidget_C_On_IconImage_Prepass_0, BoundWidget) == 0x000000, "Member 'PlayerInfoWidget_C_On_IconImage_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_IconImage_Prepass_0, CallFunc_IsGroggying_ReturnValue) == 0x000008, "Member 'PlayerInfoWidget_C_On_IconImage_Prepass_0::CallFunc_IsGroggying_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_IconImage_Prepass_0, CallFunc_GetVehiclePawn_ReturnValue) == 0x000010, "Member 'PlayerInfoWidget_C_On_IconImage_Prepass_0::CallFunc_GetVehiclePawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_IconImage_Prepass_0, K2Node_DynamicCast_AsParachute_Vehicle) == 0x000018, "Member 'PlayerInfoWidget_C_On_IconImage_Prepass_0::K2Node_DynamicCast_AsParachute_Vehicle' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_IconImage_Prepass_0, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PlayerInfoWidget_C_On_IconImage_Prepass_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_IconImage_Prepass_0, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000024, "Member 'PlayerInfoWidget_C_On_IconImage_Prepass_0::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_IconImage_Prepass_0, CallFunc_IsDying_ReturnValue) == 0x000028, "Member 'PlayerInfoWidget_C_On_IconImage_Prepass_0::CallFunc_IsDying_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_IconImage_Prepass_0, CallFunc_IsInVehicle_ReturnValue) == 0x000029, "Member 'PlayerInfoWidget_C_On_IconImage_Prepass_0::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_IconImage_Prepass_0, State) == 0x00002C, "Member 'PlayerInfoWidget_C_On_IconImage_Prepass_0::State' has a wrong offset!");

// Function PlayerInfoWidget.PlayerInfoWidget_C.On_IconLayer_Prepass_0
// 0x0010 (0x0010 - 0x0000)
struct PlayerInfoWidget_C_On_IconLayer_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerInfoWidget_C_On_IconLayer_Prepass_0) == 0x000008, "Wrong alignment on PlayerInfoWidget_C_On_IconLayer_Prepass_0");
static_assert(sizeof(PlayerInfoWidget_C_On_IconLayer_Prepass_0) == 0x000010, "Wrong size on PlayerInfoWidget_C_On_IconLayer_Prepass_0");
static_assert(offsetof(PlayerInfoWidget_C_On_IconLayer_Prepass_0, BoundWidget) == 0x000000, "Member 'PlayerInfoWidget_C_On_IconLayer_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_IconLayer_Prepass_0, m__bool_Variable) == 0x000008, "Member 'PlayerInfoWidget_C_On_IconLayer_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_IconLayer_Prepass_0, m__byte_Variable) == 0x000009, "Member 'PlayerInfoWidget_C_On_IconLayer_Prepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_IconLayer_Prepass_0, m__byte_Variable2) == 0x00000A, "Member 'PlayerInfoWidget_C_On_IconLayer_Prepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_IconLayer_Prepass_0, CallFunc_IsValid_ReturnValue) == 0x00000B, "Member 'PlayerInfoWidget_C_On_IconLayer_Prepass_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_IconLayer_Prepass_0, K2Node_Select_Default) == 0x00000C, "Member 'PlayerInfoWidget_C_On_IconLayer_Prepass_0::K2Node_Select_Default' has a wrong offset!");

// Function PlayerInfoWidget.PlayerInfoWidget_C.On_PlayerName_Prepass_0
// 0x00B8 (0x00B8 - 0x0000)
struct PlayerInfoWidget_C_On_PlayerName_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0010(0x0010)(ZeroConstructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           CallFunc_GetSpectatorColor_Color;                  // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           CallFunc_GetTeamColor_Color;                       // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLastSpectatorTeam_bIsTeam;              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue2;               // 0x0048(0x0010)(ZeroConstructor)
	bool                                          CallFunc_IsSpectatorTeam_bIsTeam;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0060(0x0018)()
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x007C(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsLastSpectatedCharacter_ReturnValue;     // 0x008C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_8D[0x3];                                       // 0x008D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_MakeStruct_SlateColor;                      // 0x0090(0x0028)()
};
static_assert(alignof(PlayerInfoWidget_C_On_PlayerName_Prepass_0) == 0x000008, "Wrong alignment on PlayerInfoWidget_C_On_PlayerName_Prepass_0");
static_assert(sizeof(PlayerInfoWidget_C_On_PlayerName_Prepass_0) == 0x0000B8, "Wrong size on PlayerInfoWidget_C_On_PlayerName_Prepass_0");
static_assert(offsetof(PlayerInfoWidget_C_On_PlayerName_Prepass_0, BoundWidget) == 0x000000, "Member 'PlayerInfoWidget_C_On_PlayerName_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_PlayerName_Prepass_0, m__bool_Variable) == 0x000008, "Member 'PlayerInfoWidget_C_On_PlayerName_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_PlayerName_Prepass_0, CallFunc_GetPlayerName_ReturnValue) == 0x000010, "Member 'PlayerInfoWidget_C_On_PlayerName_Prepass_0::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_PlayerName_Prepass_0, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000020, "Member 'PlayerInfoWidget_C_On_PlayerName_Prepass_0::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_PlayerName_Prepass_0, CallFunc_GetSpectatorColor_Color) == 0x000024, "Member 'PlayerInfoWidget_C_On_PlayerName_Prepass_0::CallFunc_GetSpectatorColor_Color' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_PlayerName_Prepass_0, CallFunc_GetTeamColor_Color) == 0x000034, "Member 'PlayerInfoWidget_C_On_PlayerName_Prepass_0::CallFunc_GetTeamColor_Color' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_PlayerName_Prepass_0, CallFunc_IsLastSpectatorTeam_bIsTeam) == 0x000044, "Member 'PlayerInfoWidget_C_On_PlayerName_Prepass_0::CallFunc_IsLastSpectatorTeam_bIsTeam' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_PlayerName_Prepass_0, CallFunc_GetPlayerName_ReturnValue2) == 0x000048, "Member 'PlayerInfoWidget_C_On_PlayerName_Prepass_0::CallFunc_GetPlayerName_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_PlayerName_Prepass_0, CallFunc_IsSpectatorTeam_bIsTeam) == 0x000058, "Member 'PlayerInfoWidget_C_On_PlayerName_Prepass_0::CallFunc_IsSpectatorTeam_bIsTeam' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_PlayerName_Prepass_0, CallFunc_Conv_StringToText_ReturnValue) == 0x000060, "Member 'PlayerInfoWidget_C_On_PlayerName_Prepass_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_PlayerName_Prepass_0, CallFunc_BooleanOR_ReturnValue) == 0x000078, "Member 'PlayerInfoWidget_C_On_PlayerName_Prepass_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_PlayerName_Prepass_0, K2Node_Select_Default) == 0x00007C, "Member 'PlayerInfoWidget_C_On_PlayerName_Prepass_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_PlayerName_Prepass_0, CallFunc_IsLastSpectatedCharacter_ReturnValue) == 0x00008C, "Member 'PlayerInfoWidget_C_On_PlayerName_Prepass_0::CallFunc_IsLastSpectatedCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_PlayerName_Prepass_0, K2Node_MakeStruct_SlateColor) == 0x000090, "Member 'PlayerInfoWidget_C_On_PlayerName_Prepass_0::K2Node_MakeStruct_SlateColor' has a wrong offset!");

// Function PlayerInfoWidget.PlayerInfoWidget_C.OnPrepass_0
// 0x0040 (0x0040 - 0x0000)
struct PlayerInfoWidget_C_OnPrepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable2;                                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable3;                                 // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable4;                                 // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E[0x2];                                        // 0x000E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslPlayerState*                        CallFunc_GetTslPlayerState_ReturnValue;            // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_GetVehiclePawn_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetKills_ReturnValue;                     // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslPlayerState*                        K2Node_DynamicCast_AsTsl_Player_State;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetKills_ReturnValue2;                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsInVehicle_ReturnValue;                  // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerInfoWidget_C_OnPrepass_0) == 0x000008, "Wrong alignment on PlayerInfoWidget_C_OnPrepass_0");
static_assert(sizeof(PlayerInfoWidget_C_OnPrepass_0) == 0x000040, "Wrong size on PlayerInfoWidget_C_OnPrepass_0");
static_assert(offsetof(PlayerInfoWidget_C_OnPrepass_0, BoundWidget) == 0x000000, "Member 'PlayerInfoWidget_C_OnPrepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnPrepass_0, m__bool_Variable) == 0x000008, "Member 'PlayerInfoWidget_C_OnPrepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnPrepass_0, m__byte_Variable) == 0x000009, "Member 'PlayerInfoWidget_C_OnPrepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnPrepass_0, m__byte_Variable2) == 0x00000A, "Member 'PlayerInfoWidget_C_OnPrepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnPrepass_0, m__bool_Variable2) == 0x00000B, "Member 'PlayerInfoWidget_C_OnPrepass_0::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnPrepass_0, m__byte_Variable3) == 0x00000C, "Member 'PlayerInfoWidget_C_OnPrepass_0::m__byte_Variable3' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnPrepass_0, m__byte_Variable4) == 0x00000D, "Member 'PlayerInfoWidget_C_OnPrepass_0::m__byte_Variable4' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnPrepass_0, CallFunc_GetTslPlayerState_ReturnValue) == 0x000010, "Member 'PlayerInfoWidget_C_OnPrepass_0::CallFunc_GetTslPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnPrepass_0, CallFunc_GetVehiclePawn_ReturnValue) == 0x000018, "Member 'PlayerInfoWidget_C_OnPrepass_0::CallFunc_GetVehiclePawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnPrepass_0, CallFunc_GetKills_ReturnValue) == 0x000020, "Member 'PlayerInfoWidget_C_OnPrepass_0::CallFunc_GetKills_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnPrepass_0, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000024, "Member 'PlayerInfoWidget_C_OnPrepass_0::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnPrepass_0, K2Node_DynamicCast_AsTsl_Player_State) == 0x000028, "Member 'PlayerInfoWidget_C_OnPrepass_0::K2Node_DynamicCast_AsTsl_Player_State' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnPrepass_0, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'PlayerInfoWidget_C_OnPrepass_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnPrepass_0, CallFunc_GetKills_ReturnValue2) == 0x000034, "Member 'PlayerInfoWidget_C_OnPrepass_0::CallFunc_GetKills_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnPrepass_0, K2Node_Select_Default) == 0x000038, "Member 'PlayerInfoWidget_C_OnPrepass_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnPrepass_0, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x000039, "Member 'PlayerInfoWidget_C_OnPrepass_0::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnPrepass_0, CallFunc_IsInVehicle_ReturnValue) == 0x00003A, "Member 'PlayerInfoWidget_C_OnPrepass_0::CallFunc_IsInVehicle_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnPrepass_0, K2Node_Select2_Default) == 0x00003B, "Member 'PlayerInfoWidget_C_OnPrepass_0::K2Node_Select2_Default' has a wrong offset!");

// Function PlayerInfoWidget.PlayerInfoWidget_C.On_KickButtonLayer_Prepass_0
// 0x0018 (0x0018 - 0x0000)
struct PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKickEnableCharacter_ReturnValue;        // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWorldDeltaSeconds_ReturnValue;         // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x0015(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0016(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0017(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0) == 0x000008, "Wrong alignment on PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0");
static_assert(sizeof(PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0) == 0x000018, "Wrong size on PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0");
static_assert(offsetof(PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0, BoundWidget) == 0x000000, "Member 'PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0, m__byte_Variable) == 0x000008, "Member 'PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0, CallFunc_IsKickEnableCharacter_ReturnValue) == 0x000009, "Member 'PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0::CallFunc_IsKickEnableCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0, CallFunc_BooleanAND_ReturnValue) == 0x00000A, "Member 'PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0, CallFunc_GetWorldDeltaSeconds_ReturnValue) == 0x00000C, "Member 'PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0::CallFunc_GetWorldDeltaSeconds_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0, CallFunc_Add_FloatFloat_ReturnValue) == 0x000010, "Member 'PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000014, "Member 'PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0, m__byte_Variable2) == 0x000015, "Member 'PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0, m__bool_Variable) == 0x000016, "Member 'PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0, K2Node_Select_Default) == 0x000017, "Member 'PlayerInfoWidget_C_On_KickButtonLayer_Prepass_0::K2Node_Select_Default' has a wrong offset!");

// Function PlayerInfoWidget.PlayerInfoWidget_C.OnMouseButtonDown_0
// 0x02B0 (0x02B0 - 0x0000)
struct PlayerInfoWidget_C_OnMouseButtonDown_0 final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, Parm, OutParm, ReferenceParm)
	struct FEventReply                            ReturnValue;                                       // 0x00B0(0x00A8)(Parm, OutParm, ReturnParm)
	bool                                          CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue; // 0x0158(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_159[0x7];                                      // 0x0159(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0160(0x00A8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x0208(0x00A8)()
};
static_assert(alignof(PlayerInfoWidget_C_OnMouseButtonDown_0) == 0x000008, "Wrong alignment on PlayerInfoWidget_C_OnMouseButtonDown_0");
static_assert(sizeof(PlayerInfoWidget_C_OnMouseButtonDown_0) == 0x0002B0, "Wrong size on PlayerInfoWidget_C_OnMouseButtonDown_0");
static_assert(offsetof(PlayerInfoWidget_C_OnMouseButtonDown_0, MyGeometry) == 0x000000, "Member 'PlayerInfoWidget_C_OnMouseButtonDown_0::MyGeometry' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnMouseButtonDown_0, MouseEvent) == 0x000038, "Member 'PlayerInfoWidget_C_OnMouseButtonDown_0::MouseEvent' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnMouseButtonDown_0, ReturnValue) == 0x0000B0, "Member 'PlayerInfoWidget_C_OnMouseButtonDown_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnMouseButtonDown_0, CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue) == 0x000158, "Member 'PlayerInfoWidget_C_OnMouseButtonDown_0::CallFunc_PointerEvent_IsMouseButtonDown_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnMouseButtonDown_0, CallFunc_Unhandled_ReturnValue) == 0x000160, "Member 'PlayerInfoWidget_C_OnMouseButtonDown_0::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnMouseButtonDown_0, CallFunc_Handled_ReturnValue) == 0x000208, "Member 'PlayerInfoWidget_C_OnMouseButtonDown_0::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function PlayerInfoWidget.PlayerInfoWidget_C.OnKeyDown
// 0x0290 (0x0290 - 0x0000)
struct PlayerInfoWidget_C_OnKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00A8)(Parm, OutParm, ReturnParm)
	struct FKey                                   CallFunc_GetKey_ReturnValue;                       // 0x0120(0x0018)()
	bool                                          CallFunc_EqualEqual_KeyKey_ReturnValue;            // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0140(0x00A8)()
	struct FEventReply                            CallFunc_Handled_ReturnValue;                      // 0x01E8(0x00A8)()
};
static_assert(alignof(PlayerInfoWidget_C_OnKeyDown) == 0x000008, "Wrong alignment on PlayerInfoWidget_C_OnKeyDown");
static_assert(sizeof(PlayerInfoWidget_C_OnKeyDown) == 0x000290, "Wrong size on PlayerInfoWidget_C_OnKeyDown");
static_assert(offsetof(PlayerInfoWidget_C_OnKeyDown, MyGeometry) == 0x000000, "Member 'PlayerInfoWidget_C_OnKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnKeyDown, InKeyEvent) == 0x000038, "Member 'PlayerInfoWidget_C_OnKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnKeyDown, ReturnValue) == 0x000078, "Member 'PlayerInfoWidget_C_OnKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnKeyDown, CallFunc_GetKey_ReturnValue) == 0x000120, "Member 'PlayerInfoWidget_C_OnKeyDown::CallFunc_GetKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnKeyDown, CallFunc_EqualEqual_KeyKey_ReturnValue) == 0x000138, "Member 'PlayerInfoWidget_C_OnKeyDown::CallFunc_EqualEqual_KeyKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000140, "Member 'PlayerInfoWidget_C_OnKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_OnKeyDown, CallFunc_Handled_ReturnValue) == 0x0001E8, "Member 'PlayerInfoWidget_C_OnKeyDown::CallFunc_Handled_ReturnValue' has a wrong offset!");

// Function PlayerInfoWidget.PlayerInfoWidget_C.SetCameraMode_Spectator
// 0x0030 (0x0030 - 0x0000)
struct PlayerInfoWidget_C_SetCameraMode_Spectator final
{
public:
	class ATslPlayerController*                   CallFunc_GetOwningTslPlayerController_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A[0x6];                                        // 0x000A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpectatorPawn*                         CallFunc_GetSpectatorPawn_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReplaying_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslSpectatorPawn*                      K2Node_DynamicCast_AsTsl_Spectator_Pawn;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDying_ReturnValue;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerInfoWidget_C_SetCameraMode_Spectator) == 0x000008, "Wrong alignment on PlayerInfoWidget_C_SetCameraMode_Spectator");
static_assert(sizeof(PlayerInfoWidget_C_SetCameraMode_Spectator) == 0x000030, "Wrong size on PlayerInfoWidget_C_SetCameraMode_Spectator");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Spectator, CallFunc_GetOwningTslPlayerController_ReturnValue) == 0x000000, "Member 'PlayerInfoWidget_C_SetCameraMode_Spectator::CallFunc_GetOwningTslPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Spectator, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'PlayerInfoWidget_C_SetCameraMode_Spectator::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Spectator, CallFunc_IsValid_ReturnValue2) == 0x000009, "Member 'PlayerInfoWidget_C_SetCameraMode_Spectator::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Spectator, CallFunc_GetSpectatorPawn_ReturnValue) == 0x000010, "Member 'PlayerInfoWidget_C_SetCameraMode_Spectator::CallFunc_GetSpectatorPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Spectator, CallFunc_IsReplaying_ReturnValue) == 0x000018, "Member 'PlayerInfoWidget_C_SetCameraMode_Spectator::CallFunc_IsReplaying_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Spectator, K2Node_DynamicCast_AsTsl_Spectator_Pawn) == 0x000020, "Member 'PlayerInfoWidget_C_SetCameraMode_Spectator::K2Node_DynamicCast_AsTsl_Spectator_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Spectator, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'PlayerInfoWidget_C_SetCameraMode_Spectator::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Spectator, CallFunc_IsDying_ReturnValue) == 0x000029, "Member 'PlayerInfoWidget_C_SetCameraMode_Spectator::CallFunc_IsDying_ReturnValue' has a wrong offset!");

// Function PlayerInfoWidget.PlayerInfoWidget_C.SetCameraMode_Follow
// 0x0028 (0x0028 - 0x0000)
struct PlayerInfoWidget_C_SetCameraMode_Follow final
{
public:
	class ATslPlayerController*                   CallFunc_GetOwningTslPlayerController_ReturnValue; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsObserving_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpectatorPawn*                         CallFunc_GetSpectatorPawn_ReturnValue;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslSpectatorPawn*                      K2Node_DynamicCast_AsTsl_Spectator_Pawn;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerInfoWidget_C_SetCameraMode_Follow) == 0x000008, "Wrong alignment on PlayerInfoWidget_C_SetCameraMode_Follow");
static_assert(sizeof(PlayerInfoWidget_C_SetCameraMode_Follow) == 0x000028, "Wrong size on PlayerInfoWidget_C_SetCameraMode_Follow");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Follow, CallFunc_GetOwningTslPlayerController_ReturnValue) == 0x000000, "Member 'PlayerInfoWidget_C_SetCameraMode_Follow::CallFunc_GetOwningTslPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Follow, CallFunc_IsObserving_ReturnValue) == 0x000008, "Member 'PlayerInfoWidget_C_SetCameraMode_Follow::CallFunc_IsObserving_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Follow, CallFunc_GetSpectatorPawn_ReturnValue) == 0x000010, "Member 'PlayerInfoWidget_C_SetCameraMode_Follow::CallFunc_GetSpectatorPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Follow, K2Node_DynamicCast_AsTsl_Spectator_Pawn) == 0x000018, "Member 'PlayerInfoWidget_C_SetCameraMode_Follow::K2Node_DynamicCast_AsTsl_Spectator_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Follow, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PlayerInfoWidget_C_SetCameraMode_Follow::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function PlayerInfoWidget.PlayerInfoWidget_C.SetCameraMode_Free
// 0x0078 (0x0078 - 0x0000)
struct PlayerInfoWidget_C_SetCameraMode_Free final
{
public:
	class ATslHUD*                                CallFunc_GetTslHUD_ReturnValue;                    // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerState*                        CallFunc_GetTslPlayerState_ReturnValue;            // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBattleListWidget_C*                    K2Node_DynamicCast_AsBattle_List_Widget;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_LocalPositionToServer_ReturnValue;        // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0030(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3C[0x4];                                       // 0x003C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslPlayerController*                   CallFunc_GetOwningTslPlayerController_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_LocalPositionToServer_ReturnValue2;       // 0x0048(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_54[0x4];                                       // 0x0054(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpectatorPawn*                         CallFunc_GetSpectatorPawn_ReturnValue;             // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsObserving_ReturnValue;                  // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x7];                                       // 0x0061(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslSpectatorPawn*                      K2Node_DynamicCast_AsTsl_Spectator_Pawn;           // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0071(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerInfoWidget_C_SetCameraMode_Free) == 0x000008, "Wrong alignment on PlayerInfoWidget_C_SetCameraMode_Free");
static_assert(sizeof(PlayerInfoWidget_C_SetCameraMode_Free) == 0x000078, "Wrong size on PlayerInfoWidget_C_SetCameraMode_Free");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Free, CallFunc_GetTslHUD_ReturnValue) == 0x000000, "Member 'PlayerInfoWidget_C_SetCameraMode_Free::CallFunc_GetTslHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Free, CallFunc_GetTslPlayerState_ReturnValue) == 0x000008, "Member 'PlayerInfoWidget_C_SetCameraMode_Free::CallFunc_GetTslPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Free, CallFunc_GetWidget_ReturnValue) == 0x000010, "Member 'PlayerInfoWidget_C_SetCameraMode_Free::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Free, K2Node_DynamicCast_AsBattle_List_Widget) == 0x000018, "Member 'PlayerInfoWidget_C_SetCameraMode_Free::K2Node_DynamicCast_AsBattle_List_Widget' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Free, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PlayerInfoWidget_C_SetCameraMode_Free::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Free, CallFunc_LocalPositionToServer_ReturnValue) == 0x000024, "Member 'PlayerInfoWidget_C_SetCameraMode_Free::CallFunc_LocalPositionToServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Free, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000030, "Member 'PlayerInfoWidget_C_SetCameraMode_Free::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Free, CallFunc_GetOwningTslPlayerController_ReturnValue) == 0x000040, "Member 'PlayerInfoWidget_C_SetCameraMode_Free::CallFunc_GetOwningTslPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Free, CallFunc_LocalPositionToServer_ReturnValue2) == 0x000048, "Member 'PlayerInfoWidget_C_SetCameraMode_Free::CallFunc_LocalPositionToServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Free, CallFunc_GetSpectatorPawn_ReturnValue) == 0x000058, "Member 'PlayerInfoWidget_C_SetCameraMode_Free::CallFunc_GetSpectatorPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Free, CallFunc_IsObserving_ReturnValue) == 0x000060, "Member 'PlayerInfoWidget_C_SetCameraMode_Free::CallFunc_IsObserving_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Free, K2Node_DynamicCast_AsTsl_Spectator_Pawn) == 0x000068, "Member 'PlayerInfoWidget_C_SetCameraMode_Free::K2Node_DynamicCast_AsTsl_Spectator_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Free, K2Node_DynamicCast_bSuccess2) == 0x000070, "Member 'PlayerInfoWidget_C_SetCameraMode_Free::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(PlayerInfoWidget_C_SetCameraMode_Free, CallFunc_IsValid_ReturnValue) == 0x000071, "Member 'PlayerInfoWidget_C_SetCameraMode_Free::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

