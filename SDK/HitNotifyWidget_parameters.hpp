#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HitNotifyWidget

#include "Basic.hpp"

#include "TslGame_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function HitNotifyWidget.HitNotifyWidget_C.OnHitNotify
// 0x0060 (0x0060 - 0x0000)
struct HitNotifyWidget_C_OnHitNotify final
{
public:
	float                                         DamagePercent;                                     // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	EDamageTypeCategory                           DamageTypeCategory;                                // 0x0004(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsForChineseLicensing_ReturnValue;        // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6[0x2];                                        // 0x0006(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetEnumeratorUserFriendlyName_ReturnValue; // 0x0008(0x0010)(ZeroConstructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsForKoreanRating_ReturnValue;            // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x2];                                       // 0x001A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsForChineseLicensing_ReturnValue2;       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_GetRandomScale_Scale;                     // 0x0034(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetRandomTranslation_Translation;         // 0x003C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue2;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBloodSpotWidget_C*                     CallFunc_Create_ReturnValue;                       // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UBloodSpotWidget_C*                     BloodSpotWidgetInst;                               // 0x0058(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HitNotifyWidget_C_OnHitNotify) == 0x000008, "Wrong alignment on HitNotifyWidget_C_OnHitNotify");
static_assert(sizeof(HitNotifyWidget_C_OnHitNotify) == 0x000060, "Wrong size on HitNotifyWidget_C_OnHitNotify");
static_assert(offsetof(HitNotifyWidget_C_OnHitNotify, DamagePercent) == 0x000000, "Member 'HitNotifyWidget_C_OnHitNotify::DamagePercent' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_OnHitNotify, DamageTypeCategory) == 0x000004, "Member 'HitNotifyWidget_C_OnHitNotify::DamageTypeCategory' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_OnHitNotify, CallFunc_IsForChineseLicensing_ReturnValue) == 0x000005, "Member 'HitNotifyWidget_C_OnHitNotify::CallFunc_IsForChineseLicensing_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_OnHitNotify, CallFunc_GetEnumeratorUserFriendlyName_ReturnValue) == 0x000008, "Member 'HitNotifyWidget_C_OnHitNotify::CallFunc_GetEnumeratorUserFriendlyName_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_OnHitNotify, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000018, "Member 'HitNotifyWidget_C_OnHitNotify::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_OnHitNotify, CallFunc_IsForKoreanRating_ReturnValue) == 0x000019, "Member 'HitNotifyWidget_C_OnHitNotify::CallFunc_IsForKoreanRating_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_OnHitNotify, CallFunc_RandomFloatInRange_ReturnValue) == 0x00001C, "Member 'HitNotifyWidget_C_OnHitNotify::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_OnHitNotify, CallFunc_IsForChineseLicensing_ReturnValue2) == 0x000020, "Member 'HitNotifyWidget_C_OnHitNotify::CallFunc_IsForChineseLicensing_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_OnHitNotify, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000028, "Member 'HitNotifyWidget_C_OnHitNotify::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_OnHitNotify, CallFunc_IsValid_ReturnValue) == 0x000030, "Member 'HitNotifyWidget_C_OnHitNotify::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_OnHitNotify, CallFunc_GetRandomScale_Scale) == 0x000034, "Member 'HitNotifyWidget_C_OnHitNotify::CallFunc_GetRandomScale_Scale' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_OnHitNotify, CallFunc_GetRandomTranslation_Translation) == 0x00003C, "Member 'HitNotifyWidget_C_OnHitNotify::CallFunc_GetRandomTranslation_Translation' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_OnHitNotify, CallFunc_RandomFloatInRange_ReturnValue2) == 0x000044, "Member 'HitNotifyWidget_C_OnHitNotify::CallFunc_RandomFloatInRange_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_OnHitNotify, CallFunc_Create_ReturnValue) == 0x000048, "Member 'HitNotifyWidget_C_OnHitNotify::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_OnHitNotify, CallFunc_AddChild_ReturnValue) == 0x000050, "Member 'HitNotifyWidget_C_OnHitNotify::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_OnHitNotify, BloodSpotWidgetInst) == 0x000058, "Member 'HitNotifyWidget_C_OnHitNotify::BloodSpotWidgetInst' has a wrong offset!");

// Function HitNotifyWidget.HitNotifyWidget_C.PlayHitNotifySound
// 0x0018 (0x0018 - 0x0000)
struct HitNotifyWidget_C_PlayHitNotifySound final
{
public:
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EGender                                       CallFunc_GetGender_ReturnValue;                    // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x5];                                        // 0x000B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkAudioEvent*                          SelectedSound;                                     // 0x0010(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HitNotifyWidget_C_PlayHitNotifySound) == 0x000008, "Wrong alignment on HitNotifyWidget_C_PlayHitNotifySound");
static_assert(sizeof(HitNotifyWidget_C_PlayHitNotifySound) == 0x000018, "Wrong size on HitNotifyWidget_C_PlayHitNotifySound");
static_assert(offsetof(HitNotifyWidget_C_PlayHitNotifySound, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000000, "Member 'HitNotifyWidget_C_PlayHitNotifySound::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_PlayHitNotifySound, CallFunc_IsValid_ReturnValue) == 0x000008, "Member 'HitNotifyWidget_C_PlayHitNotifySound::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_PlayHitNotifySound, CallFunc_GetGender_ReturnValue) == 0x000009, "Member 'HitNotifyWidget_C_PlayHitNotifySound::CallFunc_GetGender_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_PlayHitNotifySound, K2Node_SwitchEnum_CmpSuccess) == 0x00000A, "Member 'HitNotifyWidget_C_PlayHitNotifySound::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_PlayHitNotifySound, SelectedSound) == 0x000010, "Member 'HitNotifyWidget_C_PlayHitNotifySound::SelectedSound' has a wrong offset!");

// Function HitNotifyWidget.HitNotifyWidget_C.SetRTPCValue
// 0x0030 (0x0030 - 0x0000)
struct HitNotifyWidget_C_SetRTPCValue final
{
public:
	class FString                                 RTPC;                                              // 0x0000(0x0010)(Parm, ZeroConstructor)
	float                                         Value;                                             // 0x0010(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_GetAkComponent_ReturnValue;               // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HitNotifyWidget_C_SetRTPCValue) == 0x000008, "Wrong alignment on HitNotifyWidget_C_SetRTPCValue");
static_assert(sizeof(HitNotifyWidget_C_SetRTPCValue) == 0x000030, "Wrong size on HitNotifyWidget_C_SetRTPCValue");
static_assert(offsetof(HitNotifyWidget_C_SetRTPCValue, RTPC) == 0x000000, "Member 'HitNotifyWidget_C_SetRTPCValue::RTPC' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_SetRTPCValue, Value) == 0x000010, "Member 'HitNotifyWidget_C_SetRTPCValue::Value' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_SetRTPCValue, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000018, "Member 'HitNotifyWidget_C_SetRTPCValue::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_SetRTPCValue, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'HitNotifyWidget_C_SetRTPCValue::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_SetRTPCValue, CallFunc_GetAkComponent_ReturnValue) == 0x000028, "Member 'HitNotifyWidget_C_SetRTPCValue::CallFunc_GetAkComponent_ReturnValue' has a wrong offset!");

// Function HitNotifyWidget.HitNotifyWidget_C.PostAkEvent
// 0x0028 (0x0028 - 0x0000)
struct HitNotifyWidget_C_PostAkEvent final
{
public:
	class UAkAudioEvent*                          AkEvent;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAkComponent*                           CallFunc_GetAkComponent_ReturnValue;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_PostAkEvent_ReturnValue;                  // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HitNotifyWidget_C_PostAkEvent) == 0x000008, "Wrong alignment on HitNotifyWidget_C_PostAkEvent");
static_assert(sizeof(HitNotifyWidget_C_PostAkEvent) == 0x000028, "Wrong size on HitNotifyWidget_C_PostAkEvent");
static_assert(offsetof(HitNotifyWidget_C_PostAkEvent, AkEvent) == 0x000000, "Member 'HitNotifyWidget_C_PostAkEvent::AkEvent' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_PostAkEvent, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000008, "Member 'HitNotifyWidget_C_PostAkEvent::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_PostAkEvent, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'HitNotifyWidget_C_PostAkEvent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_PostAkEvent, CallFunc_GetAkComponent_ReturnValue) == 0x000018, "Member 'HitNotifyWidget_C_PostAkEvent::CallFunc_GetAkComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_PostAkEvent, CallFunc_PostAkEvent_ReturnValue) == 0x000020, "Member 'HitNotifyWidget_C_PostAkEvent::CallFunc_PostAkEvent_ReturnValue' has a wrong offset!");

// Function HitNotifyWidget.HitNotifyWidget_C.GetRandomTranslation
// 0x0064 (0x0064 - 0x0000)
struct HitNotifyWidget_C_GetRandomTranslation final
{
public:
	struct FVector2D                              Translation;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetViewportSize_ReturnValue;              // 0x000C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetViewportScale_ReturnValue2;            // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_Divide_Vector2DFloat_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0024(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegCos_ReturnValue;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_DegSin_ReturnValue;                       // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue3;         // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue4;         // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue2;          // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue3;          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x004C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue2;      // 0x0054(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x005C(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HitNotifyWidget_C_GetRandomTranslation) == 0x000004, "Wrong alignment on HitNotifyWidget_C_GetRandomTranslation");
static_assert(sizeof(HitNotifyWidget_C_GetRandomTranslation) == 0x000064, "Wrong size on HitNotifyWidget_C_GetRandomTranslation");
static_assert(offsetof(HitNotifyWidget_C_GetRandomTranslation, Translation) == 0x000000, "Member 'HitNotifyWidget_C_GetRandomTranslation::Translation' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomTranslation, CallFunc_GetViewportScale_ReturnValue) == 0x000008, "Member 'HitNotifyWidget_C_GetRandomTranslation::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomTranslation, CallFunc_GetViewportSize_ReturnValue) == 0x00000C, "Member 'HitNotifyWidget_C_GetRandomTranslation::CallFunc_GetViewportSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomTranslation, CallFunc_GetViewportScale_ReturnValue2) == 0x000014, "Member 'HitNotifyWidget_C_GetRandomTranslation::CallFunc_GetViewportScale_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomTranslation, CallFunc_Divide_Vector2DFloat_ReturnValue) == 0x000018, "Member 'HitNotifyWidget_C_GetRandomTranslation::CallFunc_Divide_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomTranslation, CallFunc_RandomFloatInRange_ReturnValue) == 0x000020, "Member 'HitNotifyWidget_C_GetRandomTranslation::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomTranslation, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000024, "Member 'HitNotifyWidget_C_GetRandomTranslation::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomTranslation, CallFunc_DegCos_ReturnValue) == 0x00002C, "Member 'HitNotifyWidget_C_GetRandomTranslation::CallFunc_DegCos_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomTranslation, CallFunc_DegSin_ReturnValue) == 0x000030, "Member 'HitNotifyWidget_C_GetRandomTranslation::CallFunc_DegSin_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomTranslation, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000034, "Member 'HitNotifyWidget_C_GetRandomTranslation::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomTranslation, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000038, "Member 'HitNotifyWidget_C_GetRandomTranslation::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomTranslation, CallFunc_Multiply_FloatFloat_ReturnValue3) == 0x00003C, "Member 'HitNotifyWidget_C_GetRandomTranslation::CallFunc_Multiply_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomTranslation, CallFunc_Multiply_FloatFloat_ReturnValue4) == 0x000040, "Member 'HitNotifyWidget_C_GetRandomTranslation::CallFunc_Multiply_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomTranslation, CallFunc_RandomFloatInRange_ReturnValue2) == 0x000044, "Member 'HitNotifyWidget_C_GetRandomTranslation::CallFunc_RandomFloatInRange_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomTranslation, CallFunc_RandomFloatInRange_ReturnValue3) == 0x000048, "Member 'HitNotifyWidget_C_GetRandomTranslation::CallFunc_RandomFloatInRange_ReturnValue3' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomTranslation, CallFunc_MakeVector2D_ReturnValue) == 0x00004C, "Member 'HitNotifyWidget_C_GetRandomTranslation::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomTranslation, CallFunc_Multiply_Vector2DFloat_ReturnValue2) == 0x000054, "Member 'HitNotifyWidget_C_GetRandomTranslation::CallFunc_Multiply_Vector2DFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomTranslation, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x00005C, "Member 'HitNotifyWidget_C_GetRandomTranslation::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");

// Function HitNotifyWidget.HitNotifyWidget_C.GetRandomScale
// 0x002C (0x002C - 0x0000)
struct HitNotifyWidget_C_GetRandomScale final
{
public:
	struct FVector2D                              Scale;                                             // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_RandomFloatInRange_ReturnValue;           // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetViewportScale_ReturnValue;             // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_Multiply_Vector2DFloat_ReturnValue;       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         RandomScale;                                       // 0x0028(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HitNotifyWidget_C_GetRandomScale) == 0x000004, "Wrong alignment on HitNotifyWidget_C_GetRandomScale");
static_assert(sizeof(HitNotifyWidget_C_GetRandomScale) == 0x00002C, "Wrong size on HitNotifyWidget_C_GetRandomScale");
static_assert(offsetof(HitNotifyWidget_C_GetRandomScale, Scale) == 0x000000, "Member 'HitNotifyWidget_C_GetRandomScale::Scale' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomScale, CallFunc_RandomFloatInRange_ReturnValue) == 0x000008, "Member 'HitNotifyWidget_C_GetRandomScale::CallFunc_RandomFloatInRange_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomScale, CallFunc_GetViewportScale_ReturnValue) == 0x00000C, "Member 'HitNotifyWidget_C_GetRandomScale::CallFunc_GetViewportScale_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomScale, CallFunc_MakeVector2D_ReturnValue) == 0x000010, "Member 'HitNotifyWidget_C_GetRandomScale::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomScale, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000018, "Member 'HitNotifyWidget_C_GetRandomScale::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomScale, CallFunc_Multiply_Vector2DFloat_ReturnValue) == 0x000020, "Member 'HitNotifyWidget_C_GetRandomScale::CallFunc_Multiply_Vector2DFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetRandomScale, RandomScale) == 0x000028, "Member 'HitNotifyWidget_C_GetRandomScale::RandomScale' has a wrong offset!");

// Function HitNotifyWidget.HitNotifyWidget_C.DamagedPercentToDamagePercent
// 0x0030 (0x0030 - 0x0000)
struct HitNotifyWidget_C_DamagedPercentToDamagePercent final
{
public:
	float                                         DamagedPercent;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         DamagePercent;                                     // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue2;       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HitNotifyWidget_C_DamagedPercentToDamagePercent) == 0x000008, "Wrong alignment on HitNotifyWidget_C_DamagedPercentToDamagePercent");
static_assert(sizeof(HitNotifyWidget_C_DamagedPercentToDamagePercent) == 0x000030, "Wrong size on HitNotifyWidget_C_DamagedPercentToDamagePercent");
static_assert(offsetof(HitNotifyWidget_C_DamagedPercentToDamagePercent, DamagedPercent) == 0x000000, "Member 'HitNotifyWidget_C_DamagedPercentToDamagePercent::DamagedPercent' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_DamagedPercentToDamagePercent, DamagePercent) == 0x000004, "Member 'HitNotifyWidget_C_DamagedPercentToDamagePercent::DamagePercent' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_DamagedPercentToDamagePercent, CallFunc_SafeDivide_FloatFloat_ReturnValue) == 0x000008, "Member 'HitNotifyWidget_C_DamagedPercentToDamagePercent::CallFunc_SafeDivide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_DamagedPercentToDamagePercent, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000010, "Member 'HitNotifyWidget_C_DamagedPercentToDamagePercent::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_DamagedPercentToDamagePercent, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'HitNotifyWidget_C_DamagedPercentToDamagePercent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_DamagedPercentToDamagePercent, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'HitNotifyWidget_C_DamagedPercentToDamagePercent::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_DamagedPercentToDamagePercent, CallFunc_SafeDivide_FloatFloat_ReturnValue2) == 0x000020, "Member 'HitNotifyWidget_C_DamagedPercentToDamagePercent::CallFunc_SafeDivide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_DamagedPercentToDamagePercent, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x000024, "Member 'HitNotifyWidget_C_DamagedPercentToDamagePercent::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_DamagedPercentToDamagePercent, CallFunc_FClamp_ReturnValue) == 0x000028, "Member 'HitNotifyWidget_C_DamagedPercentToDamagePercent::CallFunc_FClamp_ReturnValue' has a wrong offset!");

// Function HitNotifyWidget.HitNotifyWidget_C.GetPlayerHealthPercent
// 0x0018 (0x0018 - 0x0000)
struct HitNotifyWidget_C_GetPlayerHealthPercent final
{
public:
	float                                         HealthPercent;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue;        // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HitNotifyWidget_C_GetPlayerHealthPercent) == 0x000008, "Wrong alignment on HitNotifyWidget_C_GetPlayerHealthPercent");
static_assert(sizeof(HitNotifyWidget_C_GetPlayerHealthPercent) == 0x000018, "Wrong size on HitNotifyWidget_C_GetPlayerHealthPercent");
static_assert(offsetof(HitNotifyWidget_C_GetPlayerHealthPercent, HealthPercent) == 0x000000, "Member 'HitNotifyWidget_C_GetPlayerHealthPercent::HealthPercent' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetPlayerHealthPercent, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000008, "Member 'HitNotifyWidget_C_GetPlayerHealthPercent::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetPlayerHealthPercent, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'HitNotifyWidget_C_GetPlayerHealthPercent::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_GetPlayerHealthPercent, CallFunc_SafeDivide_FloatFloat_ReturnValue) == 0x000014, "Member 'HitNotifyWidget_C_GetPlayerHealthPercent::CallFunc_SafeDivide_FloatFloat_ReturnValue' has a wrong offset!");

// Function HitNotifyWidget.HitNotifyWidget_C.DamagedPercentToDamage
// 0x0020 (0x0020 - 0x0000)
struct HitNotifyWidget_C_DamagedPercentToDamage final
{
public:
	float                                         DamagedPercent;                                    // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Damage;                                            // 0x0004(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue;        // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(HitNotifyWidget_C_DamagedPercentToDamage) == 0x000008, "Wrong alignment on HitNotifyWidget_C_DamagedPercentToDamage");
static_assert(sizeof(HitNotifyWidget_C_DamagedPercentToDamage) == 0x000020, "Wrong size on HitNotifyWidget_C_DamagedPercentToDamage");
static_assert(offsetof(HitNotifyWidget_C_DamagedPercentToDamage, DamagedPercent) == 0x000000, "Member 'HitNotifyWidget_C_DamagedPercentToDamage::DamagedPercent' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_DamagedPercentToDamage, Damage) == 0x000004, "Member 'HitNotifyWidget_C_DamagedPercentToDamage::Damage' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_DamagedPercentToDamage, CallFunc_SafeDivide_FloatFloat_ReturnValue) == 0x000008, "Member 'HitNotifyWidget_C_DamagedPercentToDamage::CallFunc_SafeDivide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_DamagedPercentToDamage, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000010, "Member 'HitNotifyWidget_C_DamagedPercentToDamage::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_DamagedPercentToDamage, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'HitNotifyWidget_C_DamagedPercentToDamage::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(HitNotifyWidget_C_DamagedPercentToDamage, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00001C, "Member 'HitNotifyWidget_C_DamagedPercentToDamage::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

}

