#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ReplayTimeline

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "SlateCore_structs.hpp"
#include "TslGame_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function ReplayTimeline.ReplayTimeline_C.ExecuteUbergraph_ReplayTimeline
// 0x00F8 (0x00F8 - 0x0000)
struct ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0018(0x0034)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslGameInstance*                       K2Node_DynamicCast_AsTsl_Game_Instance;            // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_61[0x3];                                       // 0x0061(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetReplayTotalTime_ReturnValue;           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_FloatToSeconds_TextTime;                  // 0x0068(0x0018)()
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_ComponentBoundEvent_bIsChecked;             // 0x0084(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_85[0x3];                                       // 0x0085(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UCanvasPanelSlot*                       CallFunc_SlotAsCanvasSlot_ReturnValue;             // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_GetSize_ReturnValue;                      // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_X;                          // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x00A8(0x0010)(ZeroConstructor, NoDestructor)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate3;             // 0x00C0(0x0010)(ZeroConstructor, NoDestructor)
	class ATslHUD*                                K2Node_DynamicCast_AsTsl_HUD;                      // 0x00D0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate4;             // 0x00E0(0x0010)(ZeroConstructor, NoDestructor)
	ECheckBoxState                                CallFunc_GetCheckedState_ReturnValue;              // 0x00F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x00F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline) == 0x000008, "Wrong alignment on ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline");
static_assert(sizeof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline) == 0x0000F8, "Wrong size on ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, EntryPoint) == 0x000000, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::EntryPoint' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, K2Node_Event_MyGeometry) == 0x000018, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, K2Node_Event_InDeltaTime) == 0x00004C, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, CallFunc_GetGameInstance_ReturnValue) == 0x000050, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, K2Node_DynamicCast_AsTsl_Game_Instance) == 0x000058, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::K2Node_DynamicCast_AsTsl_Game_Instance' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, K2Node_DynamicCast_bSuccess) == 0x000060, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, CallFunc_GetReplayTotalTime_ReturnValue) == 0x000064, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::CallFunc_GetReplayTotalTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, CallFunc_FloatToSeconds_TextTime) == 0x000068, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::CallFunc_FloatToSeconds_TextTime' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, K2Node_ComponentBoundEvent_Value) == 0x000080, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, K2Node_ComponentBoundEvent_bIsChecked) == 0x000084, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::K2Node_ComponentBoundEvent_bIsChecked' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, CallFunc_SlotAsCanvasSlot_ReturnValue) == 0x000088, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::CallFunc_SlotAsCanvasSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, CallFunc_GetSize_ReturnValue) == 0x000090, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::CallFunc_GetSize_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, CallFunc_BreakVector2D_X) == 0x000098, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, CallFunc_BreakVector2D_Y) == 0x00009C, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, CallFunc_GetPlayerController_ReturnValue) == 0x0000A0, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, K2Node_CreateDelegate_OutputDelegate2) == 0x0000A8, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, CallFunc_GetHUD_ReturnValue) == 0x0000B8, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, K2Node_CreateDelegate_OutputDelegate3) == 0x0000C0, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, K2Node_DynamicCast_AsTsl_HUD) == 0x0000D0, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::K2Node_DynamicCast_AsTsl_HUD' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, K2Node_DynamicCast_bSuccess2) == 0x0000D8, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, K2Node_CreateDelegate_OutputDelegate4) == 0x0000E0, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, CallFunc_GetCheckedState_ReturnValue) == 0x0000F0, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::CallFunc_GetCheckedState_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x0000F1, "Member 'ReplayTimeline_C_ExecuteUbergraph_ReplayTimeline::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");

// Function ReplayTimeline.ReplayTimeline_C.BndEvt__CheckBoxKills_K2Node_ComponentBoundEvent_15_OnCheckBoxComponentStateChanged__DelegateSignature
// 0x0001 (0x0001 - 0x0000)
struct ReplayTimeline_C_BndEvt__CheckBoxKills_K2Node_ComponentBoundEvent_15_OnCheckBoxComponentStateChanged__DelegateSignature final
{
public:
	bool                                          bIsChecked;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ReplayTimeline_C_BndEvt__CheckBoxKills_K2Node_ComponentBoundEvent_15_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong alignment on ReplayTimeline_C_BndEvt__CheckBoxKills_K2Node_ComponentBoundEvent_15_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(sizeof(ReplayTimeline_C_BndEvt__CheckBoxKills_K2Node_ComponentBoundEvent_15_OnCheckBoxComponentStateChanged__DelegateSignature) == 0x000001, "Wrong size on ReplayTimeline_C_BndEvt__CheckBoxKills_K2Node_ComponentBoundEvent_15_OnCheckBoxComponentStateChanged__DelegateSignature");
static_assert(offsetof(ReplayTimeline_C_BndEvt__CheckBoxKills_K2Node_ComponentBoundEvent_15_OnCheckBoxComponentStateChanged__DelegateSignature, bIsChecked) == 0x000000, "Member 'ReplayTimeline_C_BndEvt__CheckBoxKills_K2Node_ComponentBoundEvent_15_OnCheckBoxComponentStateChanged__DelegateSignature::bIsChecked' has a wrong offset!");

// Function ReplayTimeline.ReplayTimeline_C.BndEvt__TimelineSlider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature
// 0x0004 (0x0004 - 0x0000)
struct ReplayTimeline_C_BndEvt__TimelineSlider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ReplayTimeline_C_BndEvt__TimelineSlider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong alignment on ReplayTimeline_C_BndEvt__TimelineSlider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature");
static_assert(sizeof(ReplayTimeline_C_BndEvt__TimelineSlider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature) == 0x000004, "Wrong size on ReplayTimeline_C_BndEvt__TimelineSlider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature");
static_assert(offsetof(ReplayTimeline_C_BndEvt__TimelineSlider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature, Value) == 0x000000, "Member 'ReplayTimeline_C_BndEvt__TimelineSlider_K2Node_ComponentBoundEvent_4_OnFloatValueChangedEvent__DelegateSignature::Value' has a wrong offset!");

// Function ReplayTimeline.ReplayTimeline_C.Tick
// 0x0038 (0x0038 - 0x0000)
struct ReplayTimeline_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ReplayTimeline_C_Tick) == 0x000004, "Wrong alignment on ReplayTimeline_C_Tick");
static_assert(sizeof(ReplayTimeline_C_Tick) == 0x000038, "Wrong size on ReplayTimeline_C_Tick");
static_assert(offsetof(ReplayTimeline_C_Tick, MyGeometry) == 0x000000, "Member 'ReplayTimeline_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_Tick, InDeltaTime) == 0x000034, "Member 'ReplayTimeline_C_Tick::InDeltaTime' has a wrong offset!");

// Function ReplayTimeline.ReplayTimeline_C.UpdateTimeline
// 0x0048 (0x0048 - 0x0000)
struct ReplayTimeline_C_UpdateTimeline final
{
public:
	bool                                          CallFunc_IsPaused_ReturnValue;                     // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetReplayTotalTime_ReturnValue;           // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_FloatToSeconds_TextTime;                  // 0x0008(0x0018)()
	class FText                                   CallFunc_FloatToSeconds_TextTime2;                 // 0x0020(0x0018)()
	float                                         CallFunc_GetReplayCurrentTime_ReturnValue;         // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetReplayTotalTime_ReturnValue2;          // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ReplayTimeline_C_UpdateTimeline) == 0x000008, "Wrong alignment on ReplayTimeline_C_UpdateTimeline");
static_assert(sizeof(ReplayTimeline_C_UpdateTimeline) == 0x000048, "Wrong size on ReplayTimeline_C_UpdateTimeline");
static_assert(offsetof(ReplayTimeline_C_UpdateTimeline, CallFunc_IsPaused_ReturnValue) == 0x000000, "Member 'ReplayTimeline_C_UpdateTimeline::CallFunc_IsPaused_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_UpdateTimeline, CallFunc_GetReplayTotalTime_ReturnValue) == 0x000004, "Member 'ReplayTimeline_C_UpdateTimeline::CallFunc_GetReplayTotalTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_UpdateTimeline, CallFunc_FloatToSeconds_TextTime) == 0x000008, "Member 'ReplayTimeline_C_UpdateTimeline::CallFunc_FloatToSeconds_TextTime' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_UpdateTimeline, CallFunc_FloatToSeconds_TextTime2) == 0x000020, "Member 'ReplayTimeline_C_UpdateTimeline::CallFunc_FloatToSeconds_TextTime2' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_UpdateTimeline, CallFunc_GetReplayCurrentTime_ReturnValue) == 0x000038, "Member 'ReplayTimeline_C_UpdateTimeline::CallFunc_GetReplayCurrentTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_UpdateTimeline, CallFunc_GetReplayTotalTime_ReturnValue2) == 0x00003C, "Member 'ReplayTimeline_C_UpdateTimeline::CallFunc_GetReplayTotalTime_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_UpdateTimeline, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000040, "Member 'ReplayTimeline_C_UpdateTimeline::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_UpdateTimeline, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000044, "Member 'ReplayTimeline_C_UpdateTimeline::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");

// Function ReplayTimeline.ReplayTimeline_C.FloatToSeconds
// 0x0048 (0x0048 - 0x0000)
struct ReplayTimeline_C_FloatToSeconds final
{
public:
	float                                         InputTime;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   TextTime;                                          // 0x0008(0x0018)(Parm, OutParm)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimespan                              CallFunc_MakeTimespan_ReturnValue;                 // 0x0028(0x0008)(ZeroConstructor)
	class FText                                   CallFunc_AsTimespan_Timespan_ReturnValue;          // 0x0030(0x0018)()
};
static_assert(alignof(ReplayTimeline_C_FloatToSeconds) == 0x000008, "Wrong alignment on ReplayTimeline_C_FloatToSeconds");
static_assert(sizeof(ReplayTimeline_C_FloatToSeconds) == 0x000048, "Wrong size on ReplayTimeline_C_FloatToSeconds");
static_assert(offsetof(ReplayTimeline_C_FloatToSeconds, InputTime) == 0x000000, "Member 'ReplayTimeline_C_FloatToSeconds::InputTime' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_FloatToSeconds, TextTime) == 0x000008, "Member 'ReplayTimeline_C_FloatToSeconds::TextTime' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_FloatToSeconds, CallFunc_FTrunc_ReturnValue) == 0x000020, "Member 'ReplayTimeline_C_FloatToSeconds::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_FloatToSeconds, CallFunc_MakeTimespan_ReturnValue) == 0x000028, "Member 'ReplayTimeline_C_FloatToSeconds::CallFunc_MakeTimespan_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_FloatToSeconds, CallFunc_AsTimespan_Timespan_ReturnValue) == 0x000030, "Member 'ReplayTimeline_C_FloatToSeconds::CallFunc_AsTimespan_Timespan_ReturnValue' has a wrong offset!");

// Function ReplayTimeline.ReplayTimeline_C.SetCurTimeSpeed
// 0x0050 (0x0050 - 0x0000)
struct ReplayTimeline_C_SetCurTimeSpeed final
{
public:
	class FText                                   CallFunc_Conv_FloatToText_ReturnValue;             // 0x0000(0x0018)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_Concat_StrStr_ReturnValue;                // 0x0028(0x0010)(ZeroConstructor)
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x0038(0x0018)()
};
static_assert(alignof(ReplayTimeline_C_SetCurTimeSpeed) == 0x000008, "Wrong alignment on ReplayTimeline_C_SetCurTimeSpeed");
static_assert(sizeof(ReplayTimeline_C_SetCurTimeSpeed) == 0x000050, "Wrong size on ReplayTimeline_C_SetCurTimeSpeed");
static_assert(offsetof(ReplayTimeline_C_SetCurTimeSpeed, CallFunc_Conv_FloatToText_ReturnValue) == 0x000000, "Member 'ReplayTimeline_C_SetCurTimeSpeed::CallFunc_Conv_FloatToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_SetCurTimeSpeed, CallFunc_Conv_TextToString_ReturnValue) == 0x000018, "Member 'ReplayTimeline_C_SetCurTimeSpeed::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_SetCurTimeSpeed, CallFunc_Concat_StrStr_ReturnValue) == 0x000028, "Member 'ReplayTimeline_C_SetCurTimeSpeed::CallFunc_Concat_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_SetCurTimeSpeed, CallFunc_Conv_StringToText_ReturnValue) == 0x000038, "Member 'ReplayTimeline_C_SetCurTimeSpeed::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");

// Function ReplayTimeline.ReplayTimeline_C.ShowKillEvents
// 0x0080 (0x0080 - 0x0000)
struct ReplayTimeline_C_ShowKillEvents final
{
public:
	int32                                         m__int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetReplayTotalTime_ReturnValue;           // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetPlayerController_ReturnValue;          // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UReplayTimelineKillEventItem_C*         CallFunc_Create_ReturnValue;                       // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UOverlaySlot*                           CallFunc_AddChildToOverlay_ReturnValue;            // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FReplayKillEventItem                   CallFunc_Array_Get_Item;                           // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue2;             // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue2;         // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_Add_Vector2DVector2D_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FWidgetTransform                       K2Node_MakeStruct_WidgetTransform;                 // 0x0060(0x001C)()
};
static_assert(alignof(ReplayTimeline_C_ShowKillEvents) == 0x000008, "Wrong alignment on ReplayTimeline_C_ShowKillEvents");
static_assert(sizeof(ReplayTimeline_C_ShowKillEvents) == 0x000080, "Wrong size on ReplayTimeline_C_ShowKillEvents");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, m__int_Array_Index_Variable) == 0x000000, "Member 'ReplayTimeline_C_ShowKillEvents::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, m__int_Loop_Counter_Variable) == 0x000004, "Member 'ReplayTimeline_C_ShowKillEvents::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ReplayTimeline_C_ShowKillEvents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, CallFunc_GetReplayTotalTime_ReturnValue) == 0x00000C, "Member 'ReplayTimeline_C_ShowKillEvents::CallFunc_GetReplayTotalTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, CallFunc_GetPlayerController_ReturnValue) == 0x000010, "Member 'ReplayTimeline_C_ShowKillEvents::CallFunc_GetPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, CallFunc_FTrunc_ReturnValue) == 0x000018, "Member 'ReplayTimeline_C_ShowKillEvents::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, CallFunc_Create_ReturnValue) == 0x000020, "Member 'ReplayTimeline_C_ShowKillEvents::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000028, "Member 'ReplayTimeline_C_ShowKillEvents::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x00002C, "Member 'ReplayTimeline_C_ShowKillEvents::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, CallFunc_AddChildToOverlay_ReturnValue) == 0x000030, "Member 'ReplayTimeline_C_ShowKillEvents::CallFunc_AddChildToOverlay_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, CallFunc_Array_Length_ReturnValue) == 0x000038, "Member 'ReplayTimeline_C_ShowKillEvents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, CallFunc_Array_Get_Item) == 0x00003C, "Member 'ReplayTimeline_C_ShowKillEvents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, CallFunc_Less_IntInt_ReturnValue) == 0x000040, "Member 'ReplayTimeline_C_ShowKillEvents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, CallFunc_Conv_IntToFloat_ReturnValue2) == 0x000044, "Member 'ReplayTimeline_C_ShowKillEvents::CallFunc_Conv_IntToFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000048, "Member 'ReplayTimeline_C_ShowKillEvents::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, CallFunc_Multiply_FloatFloat_ReturnValue2) == 0x00004C, "Member 'ReplayTimeline_C_ShowKillEvents::CallFunc_Multiply_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, CallFunc_MakeVector2D_ReturnValue) == 0x000050, "Member 'ReplayTimeline_C_ShowKillEvents::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, CallFunc_Add_Vector2DVector2D_ReturnValue) == 0x000058, "Member 'ReplayTimeline_C_ShowKillEvents::CallFunc_Add_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ShowKillEvents, K2Node_MakeStruct_WidgetTransform) == 0x000060, "Member 'ReplayTimeline_C_ShowKillEvents::K2Node_MakeStruct_WidgetTransform' has a wrong offset!");

// Function ReplayTimeline.ReplayTimeline_C.HideKillEvents
// 0x0038 (0x0038 - 0x0000)
struct ReplayTimeline_C_HideKillEvents final
{
public:
	int32                                         m__int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UReplayTimelineKillEventItem_C*> CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UReplayTimelineKillEventItem_C*         CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ReplayTimeline_C_HideKillEvents) == 0x000008, "Wrong alignment on ReplayTimeline_C_HideKillEvents");
static_assert(sizeof(ReplayTimeline_C_HideKillEvents) == 0x000038, "Wrong size on ReplayTimeline_C_HideKillEvents");
static_assert(offsetof(ReplayTimeline_C_HideKillEvents, m__int_Array_Index_Variable) == 0x000000, "Member 'ReplayTimeline_C_HideKillEvents::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_HideKillEvents, m__int_Loop_Counter_Variable) == 0x000004, "Member 'ReplayTimeline_C_HideKillEvents::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_HideKillEvents, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ReplayTimeline_C_HideKillEvents::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_HideKillEvents, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'ReplayTimeline_C_HideKillEvents::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_HideKillEvents, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'ReplayTimeline_C_HideKillEvents::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_HideKillEvents, CallFunc_Array_Get_Item) == 0x000028, "Member 'ReplayTimeline_C_HideKillEvents::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_HideKillEvents, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'ReplayTimeline_C_HideKillEvents::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

// Function ReplayTimeline.ReplayTimeline_C.SetEnableUI
// 0x0001 (0x0001 - 0x0000)
struct ReplayTimeline_C_SetEnableUI final
{
public:
	bool                                          IsEnable;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ReplayTimeline_C_SetEnableUI) == 0x000001, "Wrong alignment on ReplayTimeline_C_SetEnableUI");
static_assert(sizeof(ReplayTimeline_C_SetEnableUI) == 0x000001, "Wrong size on ReplayTimeline_C_SetEnableUI");
static_assert(offsetof(ReplayTimeline_C_SetEnableUI, IsEnable) == 0x000000, "Member 'ReplayTimeline_C_SetEnableUI::IsEnable' has a wrong offset!");

// Function ReplayTimeline.ReplayTimeline_C.OnPause
// 0x0001 (0x0001 - 0x0000)
struct ReplayTimeline_C_OnPause final
{
public:
	bool                                          CallFunc_Pause_ReturnValue;                        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ReplayTimeline_C_OnPause) == 0x000001, "Wrong alignment on ReplayTimeline_C_OnPause");
static_assert(sizeof(ReplayTimeline_C_OnPause) == 0x000001, "Wrong size on ReplayTimeline_C_OnPause");
static_assert(offsetof(ReplayTimeline_C_OnPause, CallFunc_Pause_ReturnValue) == 0x000000, "Member 'ReplayTimeline_C_OnPause::CallFunc_Pause_ReturnValue' has a wrong offset!");

// Function ReplayTimeline.ReplayTimeline_C.OnPlay
// 0x0001 (0x0001 - 0x0000)
struct ReplayTimeline_C_OnPlay final
{
public:
	bool                                          CallFunc_UnPause_ReturnValue;                      // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ReplayTimeline_C_OnPlay) == 0x000001, "Wrong alignment on ReplayTimeline_C_OnPlay");
static_assert(sizeof(ReplayTimeline_C_OnPlay) == 0x000001, "Wrong size on ReplayTimeline_C_OnPlay");
static_assert(offsetof(ReplayTimeline_C_OnPlay, CallFunc_UnPause_ReturnValue) == 0x000000, "Member 'ReplayTimeline_C_OnPlay::CallFunc_UnPause_ReturnValue' has a wrong offset!");

// Function ReplayTimeline.ReplayTimeline_C.OnSpeedUp
// 0x0008 (0x0008 - 0x0000)
struct ReplayTimeline_C_OnSpeedUp final
{
public:
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ReplayTimeline_C_OnSpeedUp) == 0x000004, "Wrong alignment on ReplayTimeline_C_OnSpeedUp");
static_assert(sizeof(ReplayTimeline_C_OnSpeedUp) == 0x000008, "Wrong size on ReplayTimeline_C_OnSpeedUp");
static_assert(offsetof(ReplayTimeline_C_OnSpeedUp, CallFunc_Add_FloatFloat_ReturnValue) == 0x000000, "Member 'ReplayTimeline_C_OnSpeedUp::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_OnSpeedUp, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000004, "Member 'ReplayTimeline_C_OnSpeedUp::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function ReplayTimeline.ReplayTimeline_C.OnSpeedDown
// 0x0008 (0x0008 - 0x0000)
struct ReplayTimeline_C_OnSpeedDown final
{
public:
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_FloatFloat_ReturnValue;              // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ReplayTimeline_C_OnSpeedDown) == 0x000004, "Wrong alignment on ReplayTimeline_C_OnSpeedDown");
static_assert(sizeof(ReplayTimeline_C_OnSpeedDown) == 0x000008, "Wrong size on ReplayTimeline_C_OnSpeedDown");
static_assert(offsetof(ReplayTimeline_C_OnSpeedDown, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000000, "Member 'ReplayTimeline_C_OnSpeedDown::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_OnSpeedDown, CallFunc_Less_FloatFloat_ReturnValue) == 0x000004, "Member 'ReplayTimeline_C_OnSpeedDown::CallFunc_Less_FloatFloat_ReturnValue' has a wrong offset!");

// Function ReplayTimeline.ReplayTimeline_C.SetVisibleCtrls
// 0x0001 (0x0001 - 0x0000)
struct ReplayTimeline_C_SetVisibleCtrls final
{
public:
	bool                                          bVisible;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ReplayTimeline_C_SetVisibleCtrls) == 0x000001, "Wrong alignment on ReplayTimeline_C_SetVisibleCtrls");
static_assert(sizeof(ReplayTimeline_C_SetVisibleCtrls) == 0x000001, "Wrong size on ReplayTimeline_C_SetVisibleCtrls");
static_assert(offsetof(ReplayTimeline_C_SetVisibleCtrls, bVisible) == 0x000000, "Member 'ReplayTimeline_C_SetVisibleCtrls::bVisible' has a wrong offset!");

// Function ReplayTimeline.ReplayTimeline_C.CreateGetKillEventsTimer
// 0x0020 (0x0020 - 0x0000)
struct ReplayTimeline_C_CreateGetKillEventsTimer final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	bool                                          CallFunc_IsLive_ReturnValue;                       // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)()
};
static_assert(alignof(ReplayTimeline_C_CreateGetKillEventsTimer) == 0x000008, "Wrong alignment on ReplayTimeline_C_CreateGetKillEventsTimer");
static_assert(sizeof(ReplayTimeline_C_CreateGetKillEventsTimer) == 0x000020, "Wrong size on ReplayTimeline_C_CreateGetKillEventsTimer");
static_assert(offsetof(ReplayTimeline_C_CreateGetKillEventsTimer, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'ReplayTimeline_C_CreateGetKillEventsTimer::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_CreateGetKillEventsTimer, CallFunc_IsLive_ReturnValue) == 0x000010, "Member 'ReplayTimeline_C_CreateGetKillEventsTimer::CallFunc_IsLive_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_CreateGetKillEventsTimer, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'ReplayTimeline_C_CreateGetKillEventsTimer::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function ReplayTimeline.ReplayTimeline_C.ClearKillEventItems
// 0x0038 (0x0038 - 0x0000)
struct ReplayTimeline_C_ClearKillEventItems final
{
public:
	int32                                         m__int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class UReplayTimelineKillEventItem_C*> CallFunc_GetAllWidgetsOfClass_FoundWidgets;        // 0x0010(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UReplayTimelineKillEventItem_C*         CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ReplayTimeline_C_ClearKillEventItems) == 0x000008, "Wrong alignment on ReplayTimeline_C_ClearKillEventItems");
static_assert(sizeof(ReplayTimeline_C_ClearKillEventItems) == 0x000038, "Wrong size on ReplayTimeline_C_ClearKillEventItems");
static_assert(offsetof(ReplayTimeline_C_ClearKillEventItems, m__int_Array_Index_Variable) == 0x000000, "Member 'ReplayTimeline_C_ClearKillEventItems::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ClearKillEventItems, m__int_Loop_Counter_Variable) == 0x000004, "Member 'ReplayTimeline_C_ClearKillEventItems::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ClearKillEventItems, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'ReplayTimeline_C_ClearKillEventItems::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ClearKillEventItems, CallFunc_GetAllWidgetsOfClass_FoundWidgets) == 0x000010, "Member 'ReplayTimeline_C_ClearKillEventItems::CallFunc_GetAllWidgetsOfClass_FoundWidgets' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ClearKillEventItems, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'ReplayTimeline_C_ClearKillEventItems::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ClearKillEventItems, CallFunc_Array_Get_Item) == 0x000028, "Member 'ReplayTimeline_C_ClearKillEventItems::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(ReplayTimeline_C_ClearKillEventItems, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'ReplayTimeline_C_ClearKillEventItems::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");

}

