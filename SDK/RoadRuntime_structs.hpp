#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: RoadRuntime

#include "Basic.hpp"


namespace SDK
{

// ScriptStruct RoadRuntime.SideActorManager
// 0x0020 (0x0020 - 0x0000)
struct FSideActorManager final
{
public:
	TSubclassOf<class AActor>                     Prototype;                                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class AActor*>                         SideActors;                                        // 0x0008(0x0010)(ZeroConstructor, NativeAccessSpecifierPublic)
	int32                                         SocketIndex;                                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSideActorManager) == 0x000008, "Wrong alignment on FSideActorManager");
static_assert(sizeof(FSideActorManager) == 0x000020, "Wrong size on FSideActorManager");
static_assert(offsetof(FSideActorManager, Prototype) == 0x000000, "Member 'FSideActorManager::Prototype' has a wrong offset!");
static_assert(offsetof(FSideActorManager, SideActors) == 0x000008, "Member 'FSideActorManager::SideActors' has a wrong offset!");
static_assert(offsetof(FSideActorManager, SocketIndex) == 0x000018, "Member 'FSideActorManager::SocketIndex' has a wrong offset!");

// ScriptStruct RoadRuntime.CrossMeshManager
// 0x0020 (0x0020 - 0x0000)
struct FCrossMeshManager final
{
public:
	class UStaticMesh*                            Prototype;                                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMeshComponent*                   SideMesh;                                          // 0x0010(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SocketIndex;                                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FCrossMeshManager) == 0x000008, "Wrong alignment on FCrossMeshManager");
static_assert(sizeof(FCrossMeshManager) == 0x000020, "Wrong size on FCrossMeshManager");
static_assert(offsetof(FCrossMeshManager, Prototype) == 0x000000, "Member 'FCrossMeshManager::Prototype' has a wrong offset!");
static_assert(offsetof(FCrossMeshManager, Owner) == 0x000008, "Member 'FCrossMeshManager::Owner' has a wrong offset!");
static_assert(offsetof(FCrossMeshManager, SideMesh) == 0x000010, "Member 'FCrossMeshManager::SideMesh' has a wrong offset!");
static_assert(offsetof(FCrossMeshManager, SocketIndex) == 0x000018, "Member 'FCrossMeshManager::SocketIndex' has a wrong offset!");

// ScriptStruct RoadRuntime.CrossActorManager
// 0x0018 (0x0018 - 0x0000)
struct FCrossActorManager final
{
public:
	TSubclassOf<class AActor>                     Prototype;                                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, UObjectWrapper, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 SideActor;                                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SocketIndex;                                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FCrossActorManager) == 0x000008, "Wrong alignment on FCrossActorManager");
static_assert(sizeof(FCrossActorManager) == 0x000018, "Wrong size on FCrossActorManager");
static_assert(offsetof(FCrossActorManager, Prototype) == 0x000000, "Member 'FCrossActorManager::Prototype' has a wrong offset!");
static_assert(offsetof(FCrossActorManager, SideActor) == 0x000008, "Member 'FCrossActorManager::SideActor' has a wrong offset!");
static_assert(offsetof(FCrossActorManager, SocketIndex) == 0x000010, "Member 'FCrossActorManager::SocketIndex' has a wrong offset!");

// ScriptStruct RoadRuntime.SideMeshManager
// 0x0020 (0x0020 - 0x0000)
struct FSideMeshManager final
{
public:
	class UStaticMesh*                            Prototype;                                         // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class AActor*                                 Owner;                                             // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UHierarchicalInstancedStaticMeshComponent* SideMeshes;                                        // 0x0010(0x0008)(ExportObject, ZeroConstructor, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SocketIndex;                                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSideMeshManager) == 0x000008, "Wrong alignment on FSideMeshManager");
static_assert(sizeof(FSideMeshManager) == 0x000020, "Wrong size on FSideMeshManager");
static_assert(offsetof(FSideMeshManager, Prototype) == 0x000000, "Member 'FSideMeshManager::Prototype' has a wrong offset!");
static_assert(offsetof(FSideMeshManager, Owner) == 0x000008, "Member 'FSideMeshManager::Owner' has a wrong offset!");
static_assert(offsetof(FSideMeshManager, SideMeshes) == 0x000010, "Member 'FSideMeshManager::SideMeshes' has a wrong offset!");
static_assert(offsetof(FSideMeshManager, SocketIndex) == 0x000018, "Member 'FSideMeshManager::SocketIndex' has a wrong offset!");

// ScriptStruct RoadRuntime.CurbsManager
// 0x0038 (0x0038 - 0x0000)
struct FCurbsManager final
{
public:
	class AActor*                                 Owner;                                             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	class UStaticMesh*                            Prototype;                                         // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	TArray<class USplineMeshComponent*>           CurbsComp;                                         // 0x0010(0x0010)(ExportObject, ZeroConstructor, ContainsInstancedReference, NativeAccessSpecifierPublic)
	class USplineComponent*                       Spline;                                            // 0x0020(0x0008)(ExportObject, ZeroConstructor, Transient, InstancedReference, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SplineIndex;                                       // 0x0028(0x0004)(ZeroConstructor, Transient, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         SocketIndex;                                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         Segmentation;                                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	int32                                         StepGeneration;                                    // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FCurbsManager) == 0x000008, "Wrong alignment on FCurbsManager");
static_assert(sizeof(FCurbsManager) == 0x000038, "Wrong size on FCurbsManager");
static_assert(offsetof(FCurbsManager, Owner) == 0x000000, "Member 'FCurbsManager::Owner' has a wrong offset!");
static_assert(offsetof(FCurbsManager, Prototype) == 0x000008, "Member 'FCurbsManager::Prototype' has a wrong offset!");
static_assert(offsetof(FCurbsManager, CurbsComp) == 0x000010, "Member 'FCurbsManager::CurbsComp' has a wrong offset!");
static_assert(offsetof(FCurbsManager, Spline) == 0x000020, "Member 'FCurbsManager::Spline' has a wrong offset!");
static_assert(offsetof(FCurbsManager, SplineIndex) == 0x000028, "Member 'FCurbsManager::SplineIndex' has a wrong offset!");
static_assert(offsetof(FCurbsManager, SocketIndex) == 0x00002C, "Member 'FCurbsManager::SocketIndex' has a wrong offset!");
static_assert(offsetof(FCurbsManager, Segmentation) == 0x000030, "Member 'FCurbsManager::Segmentation' has a wrong offset!");
static_assert(offsetof(FCurbsManager, StepGeneration) == 0x000034, "Member 'FCurbsManager::StepGeneration' has a wrong offset!");

}

