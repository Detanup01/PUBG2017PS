#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: InventoryWidget

#include "Basic.hpp"

#include "InventoryWidget_classes.hpp"
#include "InventoryWidget_parameters.hpp"


namespace SDK
{

// Function InventoryWidget.InventoryWidget_C.ExecuteUbergraph_InventoryWidget
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::ExecuteUbergraph_InventoryWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "ExecuteUbergraph_InventoryWidget");

	Params::InventoryWidget_C_ExecuteUbergraph_InventoryWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::CustomEvent_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "CustomEvent_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnWidgetInputRT
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnWidgetInputRT()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnWidgetInputRT");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnWidgetInputLT
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnWidgetInputLT()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnWidgetInputLT");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnInventoryUpdated
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnInventoryUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnInventoryUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnInteract
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnInteract()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnInteract");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "Tick");

	Params::InventoryWidget_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.BndEvt__VicinityTitleOn_K2Node_ComponentBoundEvent_0_OnWidgetAnimationPlaybackStatusChanged__DelegateSignature
// (BlueprintEvent)

void UInventoryWidget_C::BndEvt__VicinityTitleOn_K2Node_ComponentBoundEvent_0_OnWidgetAnimationPlaybackStatusChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "BndEvt__VicinityTitleOn_K2Node_ComponentBoundEvent_0_OnWidgetAnimationPlaybackStatusChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.BndEvt__VicinityTitleOff_K2Node_ComponentBoundEvent_1_OnWidgetAnimationPlaybackStatusChanged__DelegateSignature
// (BlueprintEvent)

void UInventoryWidget_C::BndEvt__VicinityTitleOff_K2Node_ComponentBoundEvent_1_OnWidgetAnimationPlaybackStatusChanged__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "BndEvt__VicinityTitleOff_K2Node_ComponentBoundEvent_1_OnWidgetAnimationPlaybackStatusChanged__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnEquipmentUpdated
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnEquipmentUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnEquipmentUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnItemExplorerProxyUpdated
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnItemExplorerProxyUpdated()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnItemExplorerProxyUpdated");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.MoveTick
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaTime                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::MoveTick(float DeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "MoveTick");

	Params::InventoryWidget_C_MoveTick Parms{};

	Parms.DeltaTime = DeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.OnDownRelease
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnDownRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnDownRelease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnUpRelease
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnUpRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnUpRelease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnRightRelease
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnRightRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnRightRelease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnLeftRelease
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnLeftRelease()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnLeftRelease");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.BndEvt__Vicinity_K2Node_ComponentBoundEvent_115_RefreshFocus__DelegateSignature
// (BlueprintEvent)

void UInventoryWidget_C::BndEvt__Vicinity_K2Node_ComponentBoundEvent_115_RefreshFocus__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "BndEvt__Vicinity_K2Node_ComponentBoundEvent_115_RefreshFocus__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.BndEvt__Weapon_K2Node_ComponentBoundEvent_105_RefreshFocus__DelegateSignature
// (BlueprintEvent)

void UInventoryWidget_C::BndEvt__Weapon_K2Node_ComponentBoundEvent_105_RefreshFocus__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "BndEvt__Weapon_K2Node_ComponentBoundEvent_105_RefreshFocus__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.BndEvt__Backpack_K2Node_ComponentBoundEvent_72_RefreshFocus__DelegateSignature
// (BlueprintEvent)

void UInventoryWidget_C::BndEvt__Backpack_K2Node_ComponentBoundEvent_72_RefreshFocus__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "BndEvt__Backpack_K2Node_ComponentBoundEvent_72_RefreshFocus__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.BndEvt__Character_K2Node_ComponentBoundEvent_88_RefreshFocus__DelegateSignature
// (BlueprintEvent)

void UInventoryWidget_C::BndEvt__Character_K2Node_ComponentBoundEvent_88_RefreshFocus__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "BndEvt__Character_K2Node_ComponentBoundEvent_88_RefreshFocus__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnInputRT
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnInputRT()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnInputRT");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnInputRB
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnInputRB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnInputRB");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UInventoryWidget_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnWidgetInputY
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnWidgetInputY()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnWidgetInputY");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnWidgetInputX
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnWidgetInputX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnWidgetInputX");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnWidgetInputB
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnWidgetInputB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnWidgetInputB");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnWidgetInputA
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnWidgetInputA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnWidgetInputA");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnDown
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnDown()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnDown");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnUp
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnUp()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnUp");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnRight
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnRight()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnRight");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnLeft
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.BndEvt__btn_type_K2Node_ComponentBoundEvent_34_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UInventoryWidget_C::BndEvt__btn_type_K2Node_ComponentBoundEvent_34_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "BndEvt__btn_type_K2Node_ComponentBoundEvent_34_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.BndEvt__btn_time_K2Node_ComponentBoundEvent_12_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UInventoryWidget_C::BndEvt__btn_time_K2Node_ComponentBoundEvent_12_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "BndEvt__btn_time_K2Node_ComponentBoundEvent_12_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnDragLeave
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FPointerEvent                    PointerEvent                                           (Parm)
// class UDragDropOperation*               Operation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::OnDragLeave(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnDragLeave");

	Params::InventoryWidget_C_OnDragLeave Parms{};

	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.OnDragEnter
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    PointerEvent                                           (Parm)
// class UDragDropOperation*               Operation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::OnDragEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnDragEnter");

	Params::InventoryWidget_C_OnDragEnter Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.OnItemSlotFocus
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class ISlotInterface>  Slot_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TScriptInterface<class ISlotContainerInterface>SlotContainer_0                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::OnItemSlotFocus(TScriptInterface<class ISlotInterface> Slot_0, TScriptInterface<class ISlotContainerInterface> SlotContainer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnItemSlotFocus");

	Params::InventoryWidget_C_OnItemSlotFocus Parms{};

	Parms.Slot_0 = Slot_0;
	Parms.SlotContainer_0 = SlotContainer_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.OnReleased
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnReleased()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnReleased");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.OnPressed
// (BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnPressed()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnPressed");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UInventoryWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.BndEvt__Backpack_K2Node_ComponentBoundEvent_40_OnChildSlotFocus__DelegateSignature
// (BlueprintEvent)
// Parameters:
// TScriptInterface<class ISlotInterface>  Slot_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TScriptInterface<class ISlotContainerInterface>SlotContainer_0                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::BndEvt__Backpack_K2Node_ComponentBoundEvent_40_OnChildSlotFocus__DelegateSignature(TScriptInterface<class ISlotInterface> Slot_0, TScriptInterface<class ISlotContainerInterface> SlotContainer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "BndEvt__Backpack_K2Node_ComponentBoundEvent_40_OnChildSlotFocus__DelegateSignature");

	Params::InventoryWidget_C_BndEvt__Backpack_K2Node_ComponentBoundEvent_40_OnChildSlotFocus__DelegateSignature Parms{};

	Parms.Slot_0 = Slot_0;
	Parms.SlotContainer_0 = SlotContainer_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.BndEvt__Vicinity_K2Node_ComponentBoundEvent_36_OnChildSlotFocus__DelegateSignature
// (BlueprintEvent)
// Parameters:
// TScriptInterface<class ISlotInterface>  Slot_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TScriptInterface<class ISlotContainerInterface>SlotContainer_0                                        (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::BndEvt__Vicinity_K2Node_ComponentBoundEvent_36_OnChildSlotFocus__DelegateSignature(TScriptInterface<class ISlotInterface> Slot_0, TScriptInterface<class ISlotContainerInterface> SlotContainer_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "BndEvt__Vicinity_K2Node_ComponentBoundEvent_36_OnChildSlotFocus__DelegateSignature");

	Params::InventoryWidget_C_BndEvt__Vicinity_K2Node_ComponentBoundEvent_36_OnChildSlotFocus__DelegateSignature Parms{};

	Parms.Slot_0 = Slot_0;
	Parms.SlotContainer_0 = SlotContainer_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.InitializeWidget
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void()>                       OnInventoryUpdated                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// TDelegate<void()>                       OnEquipmentUpdated                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// TDelegate<void()>                       OnUpdateItemList                                       (Parm, ZeroConstructor, NoDestructor)
// TDelegate<void(TScriptInterface<class ISlotInterface> Slot, TScriptInterface<class ISlotContainerInterface> SlotContainer)>OnItemSlotFocus                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)

void UInventoryWidget_C::InitializeWidget(const TDelegate<void()>& OnInventoryUpdated, const TDelegate<void()>& OnEquipmentUpdated, TDelegate<void()> OnUpdateItemList, const TDelegate<void(TScriptInterface<class ISlotInterface> Slot, TScriptInterface<class ISlotContainerInterface> SlotContainer)>& OnItemSlotFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "InitializeWidget");

	Params::InventoryWidget_C_InitializeWidget Parms{};

	Parms.OnInventoryUpdated = OnInventoryUpdated;
	Parms.OnEquipmentUpdated = OnEquipmentUpdated;
	Parms.OnUpdateItemList = OnUpdateItemList;
	Parms.OnItemSlotFocus = OnItemSlotFocus;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.FinalizeWidget
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// TDelegate<void()>                       OnInventoryUpdated                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)
// TDelegate<void()>                       OnEquipmentUpdated                                     (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)

void UInventoryWidget_C::FinalizeWidget(const TDelegate<void()>& OnInventoryUpdated, const TDelegate<void()>& OnEquipmentUpdated)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "FinalizeWidget");

	Params::InventoryWidget_C_FinalizeWidget Parms{};

	Parms.OnInventoryUpdated = OnInventoryUpdated;
	Parms.OnEquipmentUpdated = OnEquipmentUpdated;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.UpdateDragDroppingObject
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::UpdateDragDroppingObject(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "UpdateDragDroppingObject");

	Params::InventoryWidget_C_UpdateDragDroppingObject Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.NewFunction_0
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::NewFunction_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "NewFunction_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.On_VicinityInfoBlock_Prepass_0
// (Private, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::On_VicinityInfoBlock_Prepass_0(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "On_VicinityInfoBlock_Prepass_0");

	Params::InventoryWidget_C_On_VicinityInfoBlock_Prepass_0 Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.PlayFadeInAnim
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   Playback_Speed                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::PlayFadeInAnim(float Playback_Speed)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "PlayFadeInAnim");

	Params::InventoryWidget_C_PlayFadeInAnim Parms{};

	Parms.Playback_Speed = Playback_Speed;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.GetMouseOverItem
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// TScriptInterface<class ISlotInterface>  Slot_0                                                 (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TScriptInterface<class ISlotContainerInterface>Container                                              (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UItem*                            Item                                                   (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UEquipableItem*                   EquipableItem                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAttachableItem*                  AttachableItem                                         (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::GetMouseOverItem(TScriptInterface<class ISlotInterface>* Slot_0, TScriptInterface<class ISlotContainerInterface>* Container, class UItem** Item, class UEquipableItem** EquipableItem, class UAttachableItem** AttachableItem)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "GetMouseOverItem");

	Params::InventoryWidget_C_GetMouseOverItem Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Slot_0 != nullptr)
		*Slot_0 = Parms.Slot_0;

	if (Container != nullptr)
		*Container = Parms.Container;

	if (Item != nullptr)
		*Item = Parms.Item;

	if (EquipableItem != nullptr)
		*EquipableItem = Parms.EquipableItem;

	if (AttachableItem != nullptr)
		*AttachableItem = Parms.AttachableItem;
}


// Function InventoryWidget.InventoryWidget_C.OnDrop
// (BlueprintCosmetic, Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor)
// struct FPointerEvent                    PointerEvent                                           (Parm)
// class UDragDropOperation*               Operation                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UInventoryWidget_C::OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnDrop");

	Params::InventoryWidget_C_OnDrop Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.PointerEvent = std::move(PointerEvent);
	Parms.Operation = Operation;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.On_TextType_Prepass_0
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::On_TextType_Prepass_0(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "On_TextType_Prepass_0");

	Params::InventoryWidget_C_On_TextType_Prepass_0 Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.On_TextTime_Prepass_0
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::On_TextTime_Prepass_0(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "On_TextTime_Prepass_0");

	Params::InventoryWidget_C_On_TextTime_Prepass_0 Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.On_SortingButtonListBorder_Prepass_0
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::On_SortingButtonListBorder_Prepass_0(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "On_SortingButtonListBorder_Prepass_0");

	Params::InventoryWidget_C_On_SortingButtonListBorder_Prepass_0 Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.OnPrepass_0
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::OnPrepass_0(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnPrepass_0");

	Params::InventoryWidget_C_OnPrepass_0 Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.OnChildWidgetRefresh
// (Public, BlueprintCallable, BlueprintEvent)

void UInventoryWidget_C::OnChildWidgetRefresh()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnChildWidgetRefresh");

	UObject::ProcessEvent(Func, nullptr);
}


// Function InventoryWidget.InventoryWidget_C.On_XBoxHelpTextBorder_Prepass_0
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::On_XBoxHelpTextBorder_Prepass_0(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "On_XBoxHelpTextBorder_Prepass_0");

	Params::InventoryWidget_C_On_XBoxHelpTextBorder_Prepass_0 Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.OnPrepass_1
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::OnPrepass_1(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "OnPrepass_1");

	Params::InventoryWidget_C_OnPrepass_1 Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function InventoryWidget.InventoryWidget_C.Up
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UInventoryWidget_C::Up()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "Up");

	Params::InventoryWidget_C_Up Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.Right
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UInventoryWidget_C::Right()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "Right");

	Params::InventoryWidget_C_Right Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.Left
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UInventoryWidget_C::Left()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "Left");

	Params::InventoryWidget_C_Left Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.Down
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UInventoryWidget_C::Down()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "Down");

	Params::InventoryWidget_C_Down Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.SetFocus
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    NewFocus                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UInventoryWidget_C::SetFocus(bool NewFocus)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "SetFocus");

	Params::InventoryWidget_C_SetFocus Parms{};

	Parms.NewFocus = NewFocus;

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.InputY
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UInventoryWidget_C::InputY()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "InputY");

	Params::InventoryWidget_C_InputY Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.InputX
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UInventoryWidget_C::InputX()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "InputX");

	Params::InventoryWidget_C_InputX Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.InputB
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UInventoryWidget_C::InputB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "InputB");

	Params::InventoryWidget_C_InputB Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.InputA
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UInventoryWidget_C::InputA()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "InputA");

	Params::InventoryWidget_C_InputA Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.InputRT
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UInventoryWidget_C::InputRT()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "InputRT");

	Params::InventoryWidget_C_InputRT Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.InputRB
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UInventoryWidget_C::InputRB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "InputRB");

	Params::InventoryWidget_C_InputRB Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.InputLT
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UInventoryWidget_C::InputLT()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "InputLT");

	Params::InventoryWidget_C_InputLT Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.InputLB
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UInventoryWidget_C::InputLB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "InputLB");

	Params::InventoryWidget_C_InputLB Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.GetLeftFocusableIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::GetLeftFocusableIndex(int32* Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "GetLeftFocusableIndex");

	Params::InventoryWidget_C_GetLeftFocusableIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function InventoryWidget.InventoryWidget_C.GeRightFocusableIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::GeRightFocusableIndex(int32* Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "GeRightFocusableIndex");

	Params::InventoryWidget_C_GeRightFocusableIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function InventoryWidget.InventoryWidget_C.GetFirstFocusableChildWidgetIndex
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// int32                                   Index_0                                                (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UInventoryWidget_C::GetFirstFocusableChildWidgetIndex(int32* Index_0) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "GetFirstFocusableChildWidgetIndex");

	Params::InventoryWidget_C_GetFirstFocusableChildWidgetIndex Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Index_0 != nullptr)
		*Index_0 = Parms.Index_0;
}


// Function InventoryWidget.InventoryWidget_C.IsFocus
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UInventoryWidget_C::IsFocus() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "IsFocus");

	Params::InventoryWidget_C_IsFocus Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.GetUpWidget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

class UUserWidget* UInventoryWidget_C::GetUpWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "GetUpWidget");

	Params::InventoryWidget_C_GetUpWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.GetRightWidget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

class UUserWidget* UInventoryWidget_C::GetRightWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "GetRightWidget");

	Params::InventoryWidget_C_GetRightWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.GetLeftWidget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

class UUserWidget* UInventoryWidget_C::GetLeftWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "GetLeftWidget");

	Params::InventoryWidget_C_GetLeftWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.GetDownWidget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

class UUserWidget* UInventoryWidget_C::GetDownWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "GetDownWidget");

	Params::InventoryWidget_C_GetDownWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.GetFocusingChildWidget
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class UUserWidget*                      ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

class UUserWidget* UInventoryWidget_C::GetFocusingChildWidget() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "GetFocusingChildWidget");

	Params::InventoryWidget_C_GetFocusingChildWidget Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function InventoryWidget.InventoryWidget_C.IsFocusable
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UInventoryWidget_C::IsFocusable() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("InventoryWidget_C", "IsFocusable");

	Params::InventoryWidget_C_IsFocusable Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}

}

