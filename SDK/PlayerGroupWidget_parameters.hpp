#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerGroupWidget

#include "Basic.hpp"

#include "UMG_structs.hpp"


namespace SDK::Params
{

// Function PlayerGroupWidget.PlayerGroupWidget_C.ExecuteUbergraph_PlayerGroupWidget
// 0x0010 (0x0010 - 0x0000)
struct PlayerGroupWidget_C_ExecuteUbergraph_PlayerGroupWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerGroupWidget_C_ExecuteUbergraph_PlayerGroupWidget) == 0x000008, "Wrong alignment on PlayerGroupWidget_C_ExecuteUbergraph_PlayerGroupWidget");
static_assert(sizeof(PlayerGroupWidget_C_ExecuteUbergraph_PlayerGroupWidget) == 0x000010, "Wrong size on PlayerGroupWidget_C_ExecuteUbergraph_PlayerGroupWidget");
static_assert(offsetof(PlayerGroupWidget_C_ExecuteUbergraph_PlayerGroupWidget, EntryPoint) == 0x000000, "Member 'PlayerGroupWidget_C_ExecuteUbergraph_PlayerGroupWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_ExecuteUbergraph_PlayerGroupWidget, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'PlayerGroupWidget_C_ExecuteUbergraph_PlayerGroupWidget::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function PlayerGroupWidget.PlayerGroupWidget_C.AddPlayerWidget
// 0x0018 (0x0018 - 0x0000)
struct PlayerGroupWidget_C_AddPlayerWidget final
{
public:
	class UPlayerInfoWidget_C*                    PlayerInfo;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerGroupWidget_C_AddPlayerWidget) == 0x000008, "Wrong alignment on PlayerGroupWidget_C_AddPlayerWidget");
static_assert(sizeof(PlayerGroupWidget_C_AddPlayerWidget) == 0x000018, "Wrong size on PlayerGroupWidget_C_AddPlayerWidget");
static_assert(offsetof(PlayerGroupWidget_C_AddPlayerWidget, PlayerInfo) == 0x000000, "Member 'PlayerGroupWidget_C_AddPlayerWidget::PlayerInfo' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_AddPlayerWidget, CallFunc_Array_Add_ReturnValue) == 0x000008, "Member 'PlayerGroupWidget_C_AddPlayerWidget::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_AddPlayerWidget, CallFunc_AddChild_ReturnValue) == 0x000010, "Member 'PlayerGroupWidget_C_AddPlayerWidget::CallFunc_AddChild_ReturnValue' has a wrong offset!");

// Function PlayerGroupWidget.PlayerGroupWidget_C.On_PlayerListBorder_Prepass_0
// 0x0060 (0x0060 - 0x0000)
struct PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_True_if_break_was_hit_Variable;            // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B[0x1];                                        // 0x000B(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Array_Index_Variable;                       // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_True_if_break_was_hit_Variable2;           // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Array_Index_Variable2;                      // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Loop_Counter_Variable2;                     // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInfoWidget_C*                    CallFunc_Array_Get_Item;                           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0049(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4A[0x2];                                       // 0x004A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPlayerInfoWidget_C*                    CallFunc_Array_Get_Item2;                          // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bShow;                                             // 0x005A(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0) == 0x000008, "Wrong alignment on PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0");
static_assert(sizeof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0) == 0x000060, "Wrong size on PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, BoundWidget) == 0x000000, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, m__byte_Variable) == 0x000008, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, m__bool_True_if_break_was_hit_Variable) == 0x000009, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::m__bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, CallFunc_Not_PreBool_ReturnValue) == 0x00000A, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, m__int_Array_Index_Variable) == 0x00000C, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, m__bool_Variable) == 0x000010, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, m__int_Loop_Counter_Variable) == 0x000014, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, m__bool_True_if_break_was_hit_Variable2) == 0x00001C, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::m__bool_True_if_break_was_hit_Variable2' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, m__int_Array_Index_Variable2) == 0x000020, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::m__int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, CallFunc_Not_PreBool_ReturnValue2) == 0x000024, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, m__int_Loop_Counter_Variable2) == 0x000028, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::m__int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, CallFunc_Array_Length_ReturnValue) == 0x00002C, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, CallFunc_Add_IntInt_ReturnValue2) == 0x000034, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, CallFunc_BooleanAND_ReturnValue) == 0x000038, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, CallFunc_Array_Get_Item) == 0x000040, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, m__byte_Variable2) == 0x000048, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, K2Node_Select_Default) == 0x000049, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, CallFunc_Array_Length_ReturnValue2) == 0x00004C, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, CallFunc_Array_Get_Item2) == 0x000050, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, CallFunc_Less_IntInt_ReturnValue2) == 0x000058, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, CallFunc_BooleanAND_ReturnValue2) == 0x000059, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0, bShow) == 0x00005A, "Member 'PlayerGroupWidget_C_On_PlayerListBorder_Prepass_0::bShow' has a wrong offset!");

// Function PlayerGroupWidget.PlayerGroupWidget_C.On_PlayerListBG_Prepass_0
// 0x0018 (0x0018 - 0x0000)
struct PlayerGroupWidget_C_On_PlayerListBG_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         m__float_Variable;                                 // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         m__float_Variable2;                                // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select_Default;                             // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerGroupWidget_C_On_PlayerListBG_Prepass_0) == 0x000008, "Wrong alignment on PlayerGroupWidget_C_On_PlayerListBG_Prepass_0");
static_assert(sizeof(PlayerGroupWidget_C_On_PlayerListBG_Prepass_0) == 0x000018, "Wrong size on PlayerGroupWidget_C_On_PlayerListBG_Prepass_0");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBG_Prepass_0, BoundWidget) == 0x000000, "Member 'PlayerGroupWidget_C_On_PlayerListBG_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBG_Prepass_0, m__bool_Variable) == 0x000008, "Member 'PlayerGroupWidget_C_On_PlayerListBG_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBG_Prepass_0, m__float_Variable) == 0x00000C, "Member 'PlayerGroupWidget_C_On_PlayerListBG_Prepass_0::m__float_Variable' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBG_Prepass_0, m__float_Variable2) == 0x000010, "Member 'PlayerGroupWidget_C_On_PlayerListBG_Prepass_0::m__float_Variable2' has a wrong offset!");
static_assert(offsetof(PlayerGroupWidget_C_On_PlayerListBG_Prepass_0, K2Node_Select_Default) == 0x000014, "Member 'PlayerGroupWidget_C_On_PlayerListBG_Prepass_0::K2Node_Select_Default' has a wrong offset!");

}

