#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ObserverMatchResultNameGroupWidget

#include "Basic.hpp"

#include "TslGame_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass ObserverMatchResultNameGroupWidget.ObserverMatchResultNameGroupWidget_C
// 0x0070 (0x02B0 - 0x0240)
class UObserverMatchResultNameGroupWidget_C final : public UUserWidget
{
public:
	class UBorder*                                GroupLayer;                                        // 0x0240(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UObserverMatchResultNameWidget_C*       MatchResulttInfo_0;                                // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UObserverMatchResultNameWidget_C*       MatchResulttInfo_1;                                // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UObserverMatchResultNameWidget_C*       MatchResulttInfo_2;                                // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UObserverMatchResultNameWidget_C*       MatchResulttInfo_3;                                // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UObserverMatchResultNameWidget_C*       MatchResulttInfo_4;                                // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UObserverMatchResultNameWidget_C*       MatchResulttInfo_5;                                // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UObserverMatchResultNameWidget_C*       MatchResulttInfo_6;                                // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UObserverMatchResultNameWidget_C*       MatchResulttInfo_7;                                // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             RankingText;                                       // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UHorizontalBox*                         SoloOrDuo;                                         // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	TArray<struct FTslPlayerMatchResultInfo>      PlayerMatchResultInfos;                            // 0x0298(0x0010)(Edit, BlueprintVisible, ZeroConstructor)
	int32                                         Ranking;                                           // 0x02A8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bSmall;                                            // 0x02AC(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)

public:
	void AddPlayerMatchResultInfo(const struct FTslPlayerMatchResultInfo& NewItem);
	class FText Get_TextBlock_4_Text_0();
	void On_SoloOrDuo_Prepass_0(class UWidget* BoundWidget);
	void On_Squad_Prepass_0(class UWidget* BoundWidget);
	void On_Hexa_Prepass_0(class UWidget* BoundWidget);
	void On_Octa_Prepass_0(class UWidget* BoundWidget);
	void On_GroupLayer_Prepass_0(class UWidget* BoundWidget);
	void SetSmall(bool bSmall_0);
	void On_TextBlock_4_Prepass_0(class UWidget* BoundWidget);

	void GetLineCount(int32* LineCount) const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"ObserverMatchResultNameGroupWidget_C">();
	}
	static class UObserverMatchResultNameGroupWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UObserverMatchResultNameGroupWidget_C>();
	}
};
static_assert(alignof(UObserverMatchResultNameGroupWidget_C) == 0x000008, "Wrong alignment on UObserverMatchResultNameGroupWidget_C");
static_assert(sizeof(UObserverMatchResultNameGroupWidget_C) == 0x0002B0, "Wrong size on UObserverMatchResultNameGroupWidget_C");
static_assert(offsetof(UObserverMatchResultNameGroupWidget_C, GroupLayer) == 0x000240, "Member 'UObserverMatchResultNameGroupWidget_C::GroupLayer' has a wrong offset!");
static_assert(offsetof(UObserverMatchResultNameGroupWidget_C, MatchResulttInfo_0) == 0x000248, "Member 'UObserverMatchResultNameGroupWidget_C::MatchResulttInfo_0' has a wrong offset!");
static_assert(offsetof(UObserverMatchResultNameGroupWidget_C, MatchResulttInfo_1) == 0x000250, "Member 'UObserverMatchResultNameGroupWidget_C::MatchResulttInfo_1' has a wrong offset!");
static_assert(offsetof(UObserverMatchResultNameGroupWidget_C, MatchResulttInfo_2) == 0x000258, "Member 'UObserverMatchResultNameGroupWidget_C::MatchResulttInfo_2' has a wrong offset!");
static_assert(offsetof(UObserverMatchResultNameGroupWidget_C, MatchResulttInfo_3) == 0x000260, "Member 'UObserverMatchResultNameGroupWidget_C::MatchResulttInfo_3' has a wrong offset!");
static_assert(offsetof(UObserverMatchResultNameGroupWidget_C, MatchResulttInfo_4) == 0x000268, "Member 'UObserverMatchResultNameGroupWidget_C::MatchResulttInfo_4' has a wrong offset!");
static_assert(offsetof(UObserverMatchResultNameGroupWidget_C, MatchResulttInfo_5) == 0x000270, "Member 'UObserverMatchResultNameGroupWidget_C::MatchResulttInfo_5' has a wrong offset!");
static_assert(offsetof(UObserverMatchResultNameGroupWidget_C, MatchResulttInfo_6) == 0x000278, "Member 'UObserverMatchResultNameGroupWidget_C::MatchResulttInfo_6' has a wrong offset!");
static_assert(offsetof(UObserverMatchResultNameGroupWidget_C, MatchResulttInfo_7) == 0x000280, "Member 'UObserverMatchResultNameGroupWidget_C::MatchResulttInfo_7' has a wrong offset!");
static_assert(offsetof(UObserverMatchResultNameGroupWidget_C, RankingText) == 0x000288, "Member 'UObserverMatchResultNameGroupWidget_C::RankingText' has a wrong offset!");
static_assert(offsetof(UObserverMatchResultNameGroupWidget_C, SoloOrDuo) == 0x000290, "Member 'UObserverMatchResultNameGroupWidget_C::SoloOrDuo' has a wrong offset!");
static_assert(offsetof(UObserverMatchResultNameGroupWidget_C, PlayerMatchResultInfos) == 0x000298, "Member 'UObserverMatchResultNameGroupWidget_C::PlayerMatchResultInfos' has a wrong offset!");
static_assert(offsetof(UObserverMatchResultNameGroupWidget_C, Ranking) == 0x0002A8, "Member 'UObserverMatchResultNameGroupWidget_C::Ranking' has a wrong offset!");
static_assert(offsetof(UObserverMatchResultNameGroupWidget_C, bSmall) == 0x0002AC, "Member 'UObserverMatchResultNameGroupWidget_C::bSmall' has a wrong offset!");

}

