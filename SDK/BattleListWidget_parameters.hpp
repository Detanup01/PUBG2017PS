#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BattleListWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function BattleListWidget.BattleListWidget_C.ExecuteUbergraph_BattleListWidget
// 0x0020 (0x0020 - 0x0000)
struct BattleListWidget_C_ExecuteUbergraph_BattleListWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x0018(0x0008)()
};
static_assert(alignof(BattleListWidget_C_ExecuteUbergraph_BattleListWidget) == 0x000008, "Wrong alignment on BattleListWidget_C_ExecuteUbergraph_BattleListWidget");
static_assert(sizeof(BattleListWidget_C_ExecuteUbergraph_BattleListWidget) == 0x000020, "Wrong size on BattleListWidget_C_ExecuteUbergraph_BattleListWidget");
static_assert(offsetof(BattleListWidget_C_ExecuteUbergraph_BattleListWidget, EntryPoint) == 0x000000, "Member 'BattleListWidget_C_ExecuteUbergraph_BattleListWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_ExecuteUbergraph_BattleListWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'BattleListWidget_C_ExecuteUbergraph_BattleListWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_ExecuteUbergraph_BattleListWidget, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x000018, "Member 'BattleListWidget_C_ExecuteUbergraph_BattleListWidget::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");

// Function BattleListWidget.BattleListWidget_C.RefreshPlayerList
// 0x0010 (0x0010 - 0x0000)
struct BattleListWidget_C_RefreshPlayerList final
{
public:
	TArray<class ATslCharacter*>                  CallFunc_GetSortedReplicateCharactersByLastHitTime_ReturnValue; // 0x0000(0x0010)(ZeroConstructor, ReferenceParm)
};
static_assert(alignof(BattleListWidget_C_RefreshPlayerList) == 0x000008, "Wrong alignment on BattleListWidget_C_RefreshPlayerList");
static_assert(sizeof(BattleListWidget_C_RefreshPlayerList) == 0x000010, "Wrong size on BattleListWidget_C_RefreshPlayerList");
static_assert(offsetof(BattleListWidget_C_RefreshPlayerList, CallFunc_GetSortedReplicateCharactersByLastHitTime_ReturnValue) == 0x000000, "Member 'BattleListWidget_C_RefreshPlayerList::CallFunc_GetSortedReplicateCharactersByLastHitTime_ReturnValue' has a wrong offset!");

// Function BattleListWidget.BattleListWidget_C.UpdateBattleList
// 0x0048 (0x0048 - 0x0000)
struct BattleListWidget_C_UpdateBattleList final
{
public:
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Array_Index_Variable;                       // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInfoWidget_C*                    CallFunc_Create_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslPlayerState*                        CallFunc_GetTslPlayerState_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleListWidget_C_UpdateBattleList) == 0x000008, "Wrong alignment on BattleListWidget_C_UpdateBattleList");
static_assert(sizeof(BattleListWidget_C_UpdateBattleList) == 0x000048, "Wrong size on BattleListWidget_C_UpdateBattleList");
static_assert(offsetof(BattleListWidget_C_UpdateBattleList, m__int_Loop_Counter_Variable) == 0x000000, "Member 'BattleListWidget_C_UpdateBattleList::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_UpdateBattleList, CallFunc_Add_IntInt_ReturnValue) == 0x000004, "Member 'BattleListWidget_C_UpdateBattleList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_UpdateBattleList, m__int_Array_Index_Variable) == 0x000008, "Member 'BattleListWidget_C_UpdateBattleList::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_UpdateBattleList, CallFunc_Create_ReturnValue) == 0x000010, "Member 'BattleListWidget_C_UpdateBattleList::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_UpdateBattleList, CallFunc_AddChild_ReturnValue) == 0x000018, "Member 'BattleListWidget_C_UpdateBattleList::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_UpdateBattleList, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'BattleListWidget_C_UpdateBattleList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_UpdateBattleList, CallFunc_Array_Get_Item) == 0x000028, "Member 'BattleListWidget_C_UpdateBattleList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_UpdateBattleList, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'BattleListWidget_C_UpdateBattleList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_UpdateBattleList, CallFunc_GetTslPlayerState_ReturnValue) == 0x000038, "Member 'BattleListWidget_C_UpdateBattleList::CallFunc_GetTslPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_UpdateBattleList, CallFunc_IsValid_ReturnValue) == 0x000040, "Member 'BattleListWidget_C_UpdateBattleList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_UpdateBattleList, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000041, "Member 'BattleListWidget_C_UpdateBattleList::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");

// Function BattleListWidget.BattleListWidget_C.FindCharacterByPlayerState
// 0x0038 (0x0038 - 0x0000)
struct BattleListWidget_C_FindCharacterByPlayerState final
{
public:
	class APlayerState*                           PlayerState;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          Character;                                         // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_True_if_break_was_hit_Variable;            // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Array_Index_Variable;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Loop_Counter_Variable;                      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_Array_Get_Item;                           // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ObjectObject_ReturnValue;      // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BattleListWidget_C_FindCharacterByPlayerState) == 0x000008, "Wrong alignment on BattleListWidget_C_FindCharacterByPlayerState");
static_assert(sizeof(BattleListWidget_C_FindCharacterByPlayerState) == 0x000038, "Wrong size on BattleListWidget_C_FindCharacterByPlayerState");
static_assert(offsetof(BattleListWidget_C_FindCharacterByPlayerState, PlayerState) == 0x000000, "Member 'BattleListWidget_C_FindCharacterByPlayerState::PlayerState' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_FindCharacterByPlayerState, Character) == 0x000008, "Member 'BattleListWidget_C_FindCharacterByPlayerState::Character' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_FindCharacterByPlayerState, m__bool_True_if_break_was_hit_Variable) == 0x000010, "Member 'BattleListWidget_C_FindCharacterByPlayerState::m__bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_FindCharacterByPlayerState, m__int_Array_Index_Variable) == 0x000014, "Member 'BattleListWidget_C_FindCharacterByPlayerState::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_FindCharacterByPlayerState, CallFunc_Not_PreBool_ReturnValue) == 0x000018, "Member 'BattleListWidget_C_FindCharacterByPlayerState::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_FindCharacterByPlayerState, m__int_Loop_Counter_Variable) == 0x00001C, "Member 'BattleListWidget_C_FindCharacterByPlayerState::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_FindCharacterByPlayerState, CallFunc_Add_IntInt_ReturnValue) == 0x000020, "Member 'BattleListWidget_C_FindCharacterByPlayerState::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_FindCharacterByPlayerState, CallFunc_Array_Get_Item) == 0x000028, "Member 'BattleListWidget_C_FindCharacterByPlayerState::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_FindCharacterByPlayerState, CallFunc_Array_Length_ReturnValue) == 0x000030, "Member 'BattleListWidget_C_FindCharacterByPlayerState::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_FindCharacterByPlayerState, CallFunc_Less_IntInt_ReturnValue) == 0x000034, "Member 'BattleListWidget_C_FindCharacterByPlayerState::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_FindCharacterByPlayerState, CallFunc_EqualEqual_ObjectObject_ReturnValue) == 0x000035, "Member 'BattleListWidget_C_FindCharacterByPlayerState::CallFunc_EqualEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(BattleListWidget_C_FindCharacterByPlayerState, CallFunc_BooleanAND_ReturnValue) == 0x000036, "Member 'BattleListWidget_C_FindCharacterByPlayerState::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");

}

