#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_TeamMarkWidget

#include "Basic.hpp"

#include "BP_TeamMarkWidget_classes.hpp"
#include "BP_TeamMarkWidget_parameters.hpp"


namespace SDK
{

// Function BP_TeamMarkWidget.BP_TeamMarkWidget_C.Get_PlayerName_Text_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UBP_TeamMarkWidget_C::Get_PlayerName_Text_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamMarkWidget_C", "Get_PlayerName_Text_0");

	Params::BP_TeamMarkWidget_C_Get_PlayerName_Text_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_TeamMarkWidget.BP_TeamMarkWidget_C.OnPrepass_0
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_TeamMarkWidget_C::OnPrepass_0(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamMarkWidget_C", "OnPrepass_0");

	Params::BP_TeamMarkWidget_C_OnPrepass_0 Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function BP_TeamMarkWidget.BP_TeamMarkWidget_C.GetPlayerNameTextAddLocation
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FVector2D                        AddLocation                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_TeamMarkWidget_C::GetPlayerNameTextAddLocation(struct FVector2D* AddLocation)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamMarkWidget_C", "GetPlayerNameTextAddLocation");

	Params::BP_TeamMarkWidget_C_GetPlayerNameTextAddLocation Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (AddLocation != nullptr)
		*AddLocation = std::move(Parms.AddLocation);
}


// Function BP_TeamMarkWidget.BP_TeamMarkWidget_C.SetJustification
// (Public, BlueprintCallable, BlueprintEvent)

void UBP_TeamMarkWidget_C::SetJustification()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamMarkWidget_C", "SetJustification");

	UObject::ProcessEvent(Func, nullptr);
}


// Function BP_TeamMarkWidget.BP_TeamMarkWidget_C.IsFreeCam
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UBP_TeamMarkWidget_C::IsFreeCam()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamMarkWidget_C", "IsFreeCam");

	Params::BP_TeamMarkWidget_C_IsFreeCam Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function BP_TeamMarkWidget.BP_TeamMarkWidget_C.DecideWidgetColors
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    Condition                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UBP_TeamMarkWidget_C::DecideWidgetColors(bool Condition)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("BP_TeamMarkWidget_C", "DecideWidgetColors");

	Params::BP_TeamMarkWidget_C_DecideWidgetColors Parms{};

	Parms.Condition = Condition;

	UObject::ProcessEvent(Func, &Parms);
}

}

