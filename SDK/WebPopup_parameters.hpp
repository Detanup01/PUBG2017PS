#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WebPopup

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function WebPopup.WebPopup_C.ExecuteUbergraph_WebPopup
// 0x003C (0x003C - 0x0000)
struct WebPopup_C_ExecuteUbergraph_WebPopup final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0034)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WebPopup_C_ExecuteUbergraph_WebPopup) == 0x000004, "Wrong alignment on WebPopup_C_ExecuteUbergraph_WebPopup");
static_assert(sizeof(WebPopup_C_ExecuteUbergraph_WebPopup) == 0x00003C, "Wrong size on WebPopup_C_ExecuteUbergraph_WebPopup");
static_assert(offsetof(WebPopup_C_ExecuteUbergraph_WebPopup, EntryPoint) == 0x000000, "Member 'WebPopup_C_ExecuteUbergraph_WebPopup::EntryPoint' has a wrong offset!");
static_assert(offsetof(WebPopup_C_ExecuteUbergraph_WebPopup, K2Node_Event_MyGeometry) == 0x000004, "Member 'WebPopup_C_ExecuteUbergraph_WebPopup::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(WebPopup_C_ExecuteUbergraph_WebPopup, K2Node_Event_InDeltaTime) == 0x000038, "Member 'WebPopup_C_ExecuteUbergraph_WebPopup::K2Node_Event_InDeltaTime' has a wrong offset!");

// Function WebPopup.WebPopup_C.Tick
// 0x0038 (0x0038 - 0x0000)
struct WebPopup_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WebPopup_C_Tick) == 0x000004, "Wrong alignment on WebPopup_C_Tick");
static_assert(sizeof(WebPopup_C_Tick) == 0x000038, "Wrong size on WebPopup_C_Tick");
static_assert(offsetof(WebPopup_C_Tick, MyGeometry) == 0x000000, "Member 'WebPopup_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(WebPopup_C_Tick, InDeltaTime) == 0x000034, "Member 'WebPopup_C_Tick::InDeltaTime' has a wrong offset!");

// Function WebPopup.WebPopup_C.SetPopupData
// 0x0048 (0x0048 - 0x0000)
struct WebPopup_C_SetPopupData final
{
public:
	class FString                                 PopupId_0;                                         // 0x0000(0x0010)(Parm, ZeroConstructor)
	class FString                                 Uri;                                               // 0x0010(0x0010)(Parm, ZeroConstructor)
	bool                                          UseBackgroundColor;                                // 0x0020(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x3];                                       // 0x0021(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           BackgroundColor;                                   // 0x0024(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           K2Node_MakeStruct_LinearColor;                     // 0x0034(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(WebPopup_C_SetPopupData) == 0x000008, "Wrong alignment on WebPopup_C_SetPopupData");
static_assert(sizeof(WebPopup_C_SetPopupData) == 0x000048, "Wrong size on WebPopup_C_SetPopupData");
static_assert(offsetof(WebPopup_C_SetPopupData, PopupId_0) == 0x000000, "Member 'WebPopup_C_SetPopupData::PopupId_0' has a wrong offset!");
static_assert(offsetof(WebPopup_C_SetPopupData, Uri) == 0x000010, "Member 'WebPopup_C_SetPopupData::Uri' has a wrong offset!");
static_assert(offsetof(WebPopup_C_SetPopupData, UseBackgroundColor) == 0x000020, "Member 'WebPopup_C_SetPopupData::UseBackgroundColor' has a wrong offset!");
static_assert(offsetof(WebPopup_C_SetPopupData, BackgroundColor) == 0x000024, "Member 'WebPopup_C_SetPopupData::BackgroundColor' has a wrong offset!");
static_assert(offsetof(WebPopup_C_SetPopupData, K2Node_MakeStruct_LinearColor) == 0x000034, "Member 'WebPopup_C_SetPopupData::K2Node_MakeStruct_LinearColor' has a wrong offset!");

}

