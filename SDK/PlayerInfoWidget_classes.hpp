#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerInfoWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"
#include "TslGame_structs.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass PlayerInfoWidget.PlayerInfoWidget_C
// 0x00C0 (0x0300 - 0x0240)
class UPlayerInfoWidget_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UWidgetAnimation*                       KickButton_Out;                                    // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UWidgetAnimation*                       KickButton_In;                                     // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UWidgetAnimation*                       PlayInfoState_shot;                                // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UWidgetAnimation*                       PlayInfoState_attack;                              // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UProgressBar*                           BoostGauge;                                        // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UButton*                                Button_0;                                          // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 IconImage;                                         // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UButton*                                KickButton;                                        // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             KillCount;                                         // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             PlayerName;                                        // 0x0290(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 StateColorImage_attack;                            // 0x0298(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 StateColorImage_shot;                              // 0x02A0(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTslHealthGaugeBpWidget_C*              TslHealthGaugeBpWidget;                            // 0x02A8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class ATslCharacter*                          Character;                                         // 0x02B0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	class UMaterialInstanceDynamic*               IconMaterial;                                      // 0x02B8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShow;                                             // 0x02C0(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor, ExposeOnSpawn)
	bool                                          bCachedSelect;                                     // 0x02C1(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C2[0x6];                                      // 0x02C2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   OldPlayerName;                                     // 0x02C8(0x0018)(Edit, BlueprintVisible, DisableEditOnInstance)
	float                                         KickButtonShowTimeCheck;                           // 0x02E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         KickButtonDelayTime;                               // 0x02E4(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bShowMouseOn;                                      // 0x02E8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsShowKickButton;                                 // 0x02E9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2EA[0x6];                                      // 0x02EA(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslPlayerController*                   PlayerController;                                  // 0x02F0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsLeftCtrlDown;                                    // 0x02F8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          IsBlink;                                           // 0x02F9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_PlayerInfoWidget(int32 EntryPoint);
	void Destruct();
	void CustomEvent_1();
	void CustomEvent_2();
	void CustomEvent_0(EPopupButtonID ButtonID);
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void BndEvt__Button_1_K2Node_ComponentBoundEvent_32_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void Tick(const struct FGeometry& MyGeometry, float InDeltaTime);
	void BndEvt__Button_0_K2Node_ComponentBoundEvent_20_OnButtonClickedEvent__DelegateSignature();
	void UpdateHealthPrepass(class UWidget* BoundWidget);
	void On_InfoLayer_Prepass_0(class UWidget* BoundWidget);
	void On_BoostGauge_Prepass_0(class UWidget* BoundWidget);
	void On_KillCount_Prepass_0(class UWidget* BoundWidget);
	void On_IconImage_Prepass_0(class UWidget* BoundWidget);
	void On_IconLayer_Prepass_0(class UWidget* BoundWidget);
	void On_PlayerName_Prepass_0(class UWidget* BoundWidget);
	void OnPrepass_0(class UWidget* BoundWidget);
	void On_KickButtonLayer_Prepass_0(class UWidget* BoundWidget);
	struct FEventReply OnMouseButtonDown_0(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	struct FEventReply OnKeyDown(const struct FGeometry& MyGeometry, const struct FKeyEvent& InKeyEvent);
	void SetCameraMode_Spectator();
	void SetCameraMode_Follow();
	void SetCameraMode_Free();

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"PlayerInfoWidget_C">();
	}
	static class UPlayerInfoWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UPlayerInfoWidget_C>();
	}
};
static_assert(alignof(UPlayerInfoWidget_C) == 0x000008, "Wrong alignment on UPlayerInfoWidget_C");
static_assert(sizeof(UPlayerInfoWidget_C) == 0x000300, "Wrong size on UPlayerInfoWidget_C");
static_assert(offsetof(UPlayerInfoWidget_C, UberGraphFrame) == 0x000240, "Member 'UPlayerInfoWidget_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, KickButton_Out) == 0x000248, "Member 'UPlayerInfoWidget_C::KickButton_Out' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, KickButton_In) == 0x000250, "Member 'UPlayerInfoWidget_C::KickButton_In' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, PlayInfoState_shot) == 0x000258, "Member 'UPlayerInfoWidget_C::PlayInfoState_shot' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, PlayInfoState_attack) == 0x000260, "Member 'UPlayerInfoWidget_C::PlayInfoState_attack' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, BoostGauge) == 0x000268, "Member 'UPlayerInfoWidget_C::BoostGauge' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, Button_0) == 0x000270, "Member 'UPlayerInfoWidget_C::Button_0' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, IconImage) == 0x000278, "Member 'UPlayerInfoWidget_C::IconImage' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, KickButton) == 0x000280, "Member 'UPlayerInfoWidget_C::KickButton' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, KillCount) == 0x000288, "Member 'UPlayerInfoWidget_C::KillCount' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, PlayerName) == 0x000290, "Member 'UPlayerInfoWidget_C::PlayerName' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, StateColorImage_attack) == 0x000298, "Member 'UPlayerInfoWidget_C::StateColorImage_attack' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, StateColorImage_shot) == 0x0002A0, "Member 'UPlayerInfoWidget_C::StateColorImage_shot' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, TslHealthGaugeBpWidget) == 0x0002A8, "Member 'UPlayerInfoWidget_C::TslHealthGaugeBpWidget' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, Character) == 0x0002B0, "Member 'UPlayerInfoWidget_C::Character' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, IconMaterial) == 0x0002B8, "Member 'UPlayerInfoWidget_C::IconMaterial' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, bShow) == 0x0002C0, "Member 'UPlayerInfoWidget_C::bShow' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, bCachedSelect) == 0x0002C1, "Member 'UPlayerInfoWidget_C::bCachedSelect' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, OldPlayerName) == 0x0002C8, "Member 'UPlayerInfoWidget_C::OldPlayerName' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, KickButtonShowTimeCheck) == 0x0002E0, "Member 'UPlayerInfoWidget_C::KickButtonShowTimeCheck' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, KickButtonDelayTime) == 0x0002E4, "Member 'UPlayerInfoWidget_C::KickButtonDelayTime' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, bShowMouseOn) == 0x0002E8, "Member 'UPlayerInfoWidget_C::bShowMouseOn' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, bIsShowKickButton) == 0x0002E9, "Member 'UPlayerInfoWidget_C::bIsShowKickButton' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, PlayerController) == 0x0002F0, "Member 'UPlayerInfoWidget_C::PlayerController' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, IsLeftCtrlDown) == 0x0002F8, "Member 'UPlayerInfoWidget_C::IsLeftCtrlDown' has a wrong offset!");
static_assert(offsetof(UPlayerInfoWidget_C, IsBlink) == 0x0002F9, "Member 'UPlayerInfoWidget_C::IsBlink' has a wrong offset!");

}

