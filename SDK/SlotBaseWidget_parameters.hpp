#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: SlotBaseWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"


namespace SDK::Params
{

// Function SlotBaseWidget.SlotBaseWidget_C.ExecuteUbergraph_SlotBaseWidget
// 0x00B0 (0x00B0 - 0x0000)
struct SlotBaseWidget_C_ExecuteUbergraph_SlotBaseWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x0004(0x0034)(IsPlainOldData, NoDestructor)
	struct FPointerEvent                          K2Node_Event_MouseEvent;                           // 0x0038(0x0078)(ConstParm)
};
static_assert(alignof(SlotBaseWidget_C_ExecuteUbergraph_SlotBaseWidget) == 0x000008, "Wrong alignment on SlotBaseWidget_C_ExecuteUbergraph_SlotBaseWidget");
static_assert(sizeof(SlotBaseWidget_C_ExecuteUbergraph_SlotBaseWidget) == 0x0000B0, "Wrong size on SlotBaseWidget_C_ExecuteUbergraph_SlotBaseWidget");
static_assert(offsetof(SlotBaseWidget_C_ExecuteUbergraph_SlotBaseWidget, EntryPoint) == 0x000000, "Member 'SlotBaseWidget_C_ExecuteUbergraph_SlotBaseWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(SlotBaseWidget_C_ExecuteUbergraph_SlotBaseWidget, K2Node_Event_MyGeometry) == 0x000004, "Member 'SlotBaseWidget_C_ExecuteUbergraph_SlotBaseWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(SlotBaseWidget_C_ExecuteUbergraph_SlotBaseWidget, K2Node_Event_MouseEvent) == 0x000038, "Member 'SlotBaseWidget_C_ExecuteUbergraph_SlotBaseWidget::K2Node_Event_MouseEvent' has a wrong offset!");

// Function SlotBaseWidget.SlotBaseWidget_C.OnMouseEnter
// 0x00B0 (0x00B0 - 0x0000)
struct SlotBaseWidget_C_OnMouseEnter final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FPointerEvent                          MouseEvent;                                        // 0x0038(0x0078)(ConstParm, Parm, OutParm, ReferenceParm)
};
static_assert(alignof(SlotBaseWidget_C_OnMouseEnter) == 0x000008, "Wrong alignment on SlotBaseWidget_C_OnMouseEnter");
static_assert(sizeof(SlotBaseWidget_C_OnMouseEnter) == 0x0000B0, "Wrong size on SlotBaseWidget_C_OnMouseEnter");
static_assert(offsetof(SlotBaseWidget_C_OnMouseEnter, MyGeometry) == 0x000000, "Member 'SlotBaseWidget_C_OnMouseEnter::MyGeometry' has a wrong offset!");
static_assert(offsetof(SlotBaseWidget_C_OnMouseEnter, MouseEvent) == 0x000038, "Member 'SlotBaseWidget_C_OnMouseEnter::MouseEvent' has a wrong offset!");

// Function SlotBaseWidget.SlotBaseWidget_C.PlaySoundAk
// 0x0018 (0x0018 - 0x0000)
struct SlotBaseWidget_C_PlaySoundAk final
{
public:
	class UAkAudioEvent*                          SoundAk;                                           // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class APawn*                                  CallFunc_GetOwningPlayerPawn_ReturnValue;          // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_PostEvent_ReturnValue;                    // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SlotBaseWidget_C_PlaySoundAk) == 0x000008, "Wrong alignment on SlotBaseWidget_C_PlaySoundAk");
static_assert(sizeof(SlotBaseWidget_C_PlaySoundAk) == 0x000018, "Wrong size on SlotBaseWidget_C_PlaySoundAk");
static_assert(offsetof(SlotBaseWidget_C_PlaySoundAk, SoundAk) == 0x000000, "Member 'SlotBaseWidget_C_PlaySoundAk::SoundAk' has a wrong offset!");
static_assert(offsetof(SlotBaseWidget_C_PlaySoundAk, CallFunc_GetOwningPlayerPawn_ReturnValue) == 0x000008, "Member 'SlotBaseWidget_C_PlaySoundAk::CallFunc_GetOwningPlayerPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlotBaseWidget_C_PlaySoundAk, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'SlotBaseWidget_C_PlaySoundAk::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlotBaseWidget_C_PlaySoundAk, CallFunc_PostEvent_ReturnValue) == 0x000014, "Member 'SlotBaseWidget_C_PlaySoundAk::CallFunc_PostEvent_ReturnValue' has a wrong offset!");

// Function SlotBaseWidget.SlotBaseWidget_C.IsCharacterCasting
// 0x0018 (0x0018 - 0x0000)
struct SlotBaseWidget_C_IsCharacterCasting final
{
public:
	bool                                          IsCasting;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningTslCharacter_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsCasting_ReturnValue;                    // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SlotBaseWidget_C_IsCharacterCasting) == 0x000008, "Wrong alignment on SlotBaseWidget_C_IsCharacterCasting");
static_assert(sizeof(SlotBaseWidget_C_IsCharacterCasting) == 0x000018, "Wrong size on SlotBaseWidget_C_IsCharacterCasting");
static_assert(offsetof(SlotBaseWidget_C_IsCharacterCasting, IsCasting) == 0x000000, "Member 'SlotBaseWidget_C_IsCharacterCasting::IsCasting' has a wrong offset!");
static_assert(offsetof(SlotBaseWidget_C_IsCharacterCasting, CallFunc_GetOwningTslCharacter_ReturnValue) == 0x000008, "Member 'SlotBaseWidget_C_IsCharacterCasting::CallFunc_GetOwningTslCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlotBaseWidget_C_IsCharacterCasting, CallFunc_IsValid_ReturnValue) == 0x000010, "Member 'SlotBaseWidget_C_IsCharacterCasting::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlotBaseWidget_C_IsCharacterCasting, CallFunc_IsCasting_ReturnValue) == 0x000011, "Member 'SlotBaseWidget_C_IsCharacterCasting::CallFunc_IsCasting_ReturnValue' has a wrong offset!");

// Function SlotBaseWidget.SlotBaseWidget_C.IsPlayCharacterPickupAnim
// 0x0028 (0x0028 - 0x0000)
struct SlotBaseWidget_C_IsPlayCharacterPickupAnim final
{
public:
	bool                                          bIsPickup;                                         // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningTslCharacter_ReturnValue;        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsPlayingPickUpAnimation_ReturnValue;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningTslCharacter_ReturnValue2;       // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(SlotBaseWidget_C_IsPlayCharacterPickupAnim) == 0x000008, "Wrong alignment on SlotBaseWidget_C_IsPlayCharacterPickupAnim");
static_assert(sizeof(SlotBaseWidget_C_IsPlayCharacterPickupAnim) == 0x000028, "Wrong size on SlotBaseWidget_C_IsPlayCharacterPickupAnim");
static_assert(offsetof(SlotBaseWidget_C_IsPlayCharacterPickupAnim, bIsPickup) == 0x000000, "Member 'SlotBaseWidget_C_IsPlayCharacterPickupAnim::bIsPickup' has a wrong offset!");
static_assert(offsetof(SlotBaseWidget_C_IsPlayCharacterPickupAnim, CallFunc_GetOwningTslCharacter_ReturnValue) == 0x000008, "Member 'SlotBaseWidget_C_IsPlayCharacterPickupAnim::CallFunc_GetOwningTslCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlotBaseWidget_C_IsPlayCharacterPickupAnim, CallFunc_IsPlayingPickUpAnimation_ReturnValue) == 0x000010, "Member 'SlotBaseWidget_C_IsPlayCharacterPickupAnim::CallFunc_IsPlayingPickUpAnimation_ReturnValue' has a wrong offset!");
static_assert(offsetof(SlotBaseWidget_C_IsPlayCharacterPickupAnim, CallFunc_GetOwningTslCharacter_ReturnValue2) == 0x000018, "Member 'SlotBaseWidget_C_IsPlayCharacterPickupAnim::CallFunc_GetOwningTslCharacter_ReturnValue2' has a wrong offset!");
static_assert(offsetof(SlotBaseWidget_C_IsPlayCharacterPickupAnim, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'SlotBaseWidget_C_IsPlayCharacterPickupAnim::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

