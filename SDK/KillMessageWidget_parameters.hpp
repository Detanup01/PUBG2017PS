#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: KillMessageWidget

#include "Basic.hpp"

#include "TslGame_structs.hpp"
#include "SlateCore_structs.hpp"
#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function KillMessageWidget.KillMessageWidget_C.ExecuteUbergraph_KillMessageWidget
// 0x0004 (0x0004 - 0x0000)
struct KillMessageWidget_C_ExecuteUbergraph_KillMessageWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KillMessageWidget_C_ExecuteUbergraph_KillMessageWidget) == 0x000004, "Wrong alignment on KillMessageWidget_C_ExecuteUbergraph_KillMessageWidget");
static_assert(sizeof(KillMessageWidget_C_ExecuteUbergraph_KillMessageWidget) == 0x000004, "Wrong size on KillMessageWidget_C_ExecuteUbergraph_KillMessageWidget");
static_assert(offsetof(KillMessageWidget_C_ExecuteUbergraph_KillMessageWidget, EntryPoint) == 0x000000, "Member 'KillMessageWidget_C_ExecuteUbergraph_KillMessageWidget::EntryPoint' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.IsKillerTeam
// 0x0028 (0x0028 - 0x0000)
struct KillMessageWidget_C_IsKillerTeam final
{
public:
	bool                                          IsTeam;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerState*                        K2Node_DynamicCast_AsTsl_Player_State;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamNum_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KillMessageWidget_C_IsKillerTeam) == 0x000008, "Wrong alignment on KillMessageWidget_C_IsKillerTeam");
static_assert(sizeof(KillMessageWidget_C_IsKillerTeam) == 0x000028, "Wrong size on KillMessageWidget_C_IsKillerTeam");
static_assert(offsetof(KillMessageWidget_C_IsKillerTeam, IsTeam) == 0x000000, "Member 'KillMessageWidget_C_IsKillerTeam::IsTeam' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_IsKillerTeam, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'KillMessageWidget_C_IsKillerTeam::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_IsKillerTeam, K2Node_DynamicCast_AsTsl_Player_State) == 0x000010, "Member 'KillMessageWidget_C_IsKillerTeam::K2Node_DynamicCast_AsTsl_Player_State' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_IsKillerTeam, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'KillMessageWidget_C_IsKillerTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_IsKillerTeam, CallFunc_GetTeamNum_ReturnValue) == 0x00001C, "Member 'KillMessageWidget_C_IsKillerTeam::CallFunc_GetTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_IsKillerTeam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'KillMessageWidget_C_IsKillerTeam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.IsVictimTeam
// 0x0028 (0x0028 - 0x0000)
struct KillMessageWidget_C_IsVictimTeam final
{
public:
	bool                                          IsTeam;                                            // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerState*                        K2Node_DynamicCast_AsTsl_Player_State;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamNum_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KillMessageWidget_C_IsVictimTeam) == 0x000008, "Wrong alignment on KillMessageWidget_C_IsVictimTeam");
static_assert(sizeof(KillMessageWidget_C_IsVictimTeam) == 0x000028, "Wrong size on KillMessageWidget_C_IsVictimTeam");
static_assert(offsetof(KillMessageWidget_C_IsVictimTeam, IsTeam) == 0x000000, "Member 'KillMessageWidget_C_IsVictimTeam::IsTeam' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_IsVictimTeam, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'KillMessageWidget_C_IsVictimTeam::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_IsVictimTeam, K2Node_DynamicCast_AsTsl_Player_State) == 0x000010, "Member 'KillMessageWidget_C_IsVictimTeam::K2Node_DynamicCast_AsTsl_Player_State' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_IsVictimTeam, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'KillMessageWidget_C_IsVictimTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_IsVictimTeam, CallFunc_GetTeamNum_ReturnValue) == 0x00001C, "Member 'KillMessageWidget_C_IsVictimTeam::CallFunc_GetTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_IsVictimTeam, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000020, "Member 'KillMessageWidget_C_IsVictimTeam::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.InitializeKillMessageText
// 0x0010 (0x0010 - 0x0000)
struct KillMessageWidget_C_InitializeKillMessageText final
{
public:
	class UBorderSlot*                            CallFunc_SlotAsBorderSlot_ReturnValue;             // 0x0000(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KillMessageWidget_C_InitializeKillMessageText) == 0x000008, "Wrong alignment on KillMessageWidget_C_InitializeKillMessageText");
static_assert(sizeof(KillMessageWidget_C_InitializeKillMessageText) == 0x000010, "Wrong size on KillMessageWidget_C_InitializeKillMessageText");
static_assert(offsetof(KillMessageWidget_C_InitializeKillMessageText, CallFunc_SlotAsBorderSlot_ReturnValue) == 0x000000, "Member 'KillMessageWidget_C_InitializeKillMessageText::CallFunc_SlotAsBorderSlot_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_InitializeKillMessageText, K2Node_SwitchEnum_CmpSuccess) == 0x000008, "Member 'KillMessageWidget_C_InitializeKillMessageText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.GetFadeOutAnimation
// 0x0008 (0x0008 - 0x0000)
struct KillMessageWidget_C_GetFadeOutAnimation final
{
public:
	class UWidgetAnimation*                       Animation;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KillMessageWidget_C_GetFadeOutAnimation) == 0x000008, "Wrong alignment on KillMessageWidget_C_GetFadeOutAnimation");
static_assert(sizeof(KillMessageWidget_C_GetFadeOutAnimation) == 0x000008, "Wrong size on KillMessageWidget_C_GetFadeOutAnimation");
static_assert(offsetof(KillMessageWidget_C_GetFadeOutAnimation, Animation) == 0x000000, "Member 'KillMessageWidget_C_GetFadeOutAnimation::Animation' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.GetFadeInAnimation
// 0x0008 (0x0008 - 0x0000)
struct KillMessageWidget_C_GetFadeInAnimation final
{
public:
	class UWidgetAnimation*                       Animation;                                         // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KillMessageWidget_C_GetFadeInAnimation) == 0x000008, "Wrong alignment on KillMessageWidget_C_GetFadeInAnimation");
static_assert(sizeof(KillMessageWidget_C_GetFadeInAnimation) == 0x000008, "Wrong size on KillMessageWidget_C_GetFadeInAnimation");
static_assert(offsetof(KillMessageWidget_C_GetFadeInAnimation, Animation) == 0x000000, "Member 'KillMessageWidget_C_GetFadeInAnimation::Animation' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.Get_Insert_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct KillMessageWidget_C_Get_Insert_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KillMessageWidget_C_Get_Insert_Visibility_0) == 0x000001, "Wrong alignment on KillMessageWidget_C_Get_Insert_Visibility_0");
static_assert(sizeof(KillMessageWidget_C_Get_Insert_Visibility_0) == 0x000005, "Wrong size on KillMessageWidget_C_Get_Insert_Visibility_0");
static_assert(offsetof(KillMessageWidget_C_Get_Insert_Visibility_0, ReturnValue) == 0x000000, "Member 'KillMessageWidget_C_Get_Insert_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_Insert_Visibility_0, m__bool_Variable) == 0x000001, "Member 'KillMessageWidget_C_Get_Insert_Visibility_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_Insert_Visibility_0, m__byte_Variable) == 0x000002, "Member 'KillMessageWidget_C_Get_Insert_Visibility_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_Insert_Visibility_0, m__byte_Variable2) == 0x000003, "Member 'KillMessageWidget_C_Get_Insert_Visibility_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_Insert_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'KillMessageWidget_C_Get_Insert_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.Get_Insert2_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct KillMessageWidget_C_Get_Insert2_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KillMessageWidget_C_Get_Insert2_Visibility_0) == 0x000001, "Wrong alignment on KillMessageWidget_C_Get_Insert2_Visibility_0");
static_assert(sizeof(KillMessageWidget_C_Get_Insert2_Visibility_0) == 0x000005, "Wrong size on KillMessageWidget_C_Get_Insert2_Visibility_0");
static_assert(offsetof(KillMessageWidget_C_Get_Insert2_Visibility_0, ReturnValue) == 0x000000, "Member 'KillMessageWidget_C_Get_Insert2_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_Insert2_Visibility_0, m__bool_Variable) == 0x000001, "Member 'KillMessageWidget_C_Get_Insert2_Visibility_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_Insert2_Visibility_0, m__byte_Variable) == 0x000002, "Member 'KillMessageWidget_C_Get_Insert2_Visibility_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_Insert2_Visibility_0, m__byte_Variable2) == 0x000003, "Member 'KillMessageWidget_C_Get_Insert2_Visibility_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_Insert2_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'KillMessageWidget_C_Get_Insert2_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.Get_Killer_Visibility_0
// 0x0005 (0x0005 - 0x0000)
struct KillMessageWidget_C_Get_Killer_Visibility_0 final
{
public:
	ESlateVisibility                              ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KillMessageWidget_C_Get_Killer_Visibility_0) == 0x000001, "Wrong alignment on KillMessageWidget_C_Get_Killer_Visibility_0");
static_assert(sizeof(KillMessageWidget_C_Get_Killer_Visibility_0) == 0x000005, "Wrong size on KillMessageWidget_C_Get_Killer_Visibility_0");
static_assert(offsetof(KillMessageWidget_C_Get_Killer_Visibility_0, ReturnValue) == 0x000000, "Member 'KillMessageWidget_C_Get_Killer_Visibility_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_Killer_Visibility_0, m__bool_Variable) == 0x000001, "Member 'KillMessageWidget_C_Get_Killer_Visibility_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_Killer_Visibility_0, m__byte_Variable) == 0x000002, "Member 'KillMessageWidget_C_Get_Killer_Visibility_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_Killer_Visibility_0, m__byte_Variable2) == 0x000003, "Member 'KillMessageWidget_C_Get_Killer_Visibility_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_Killer_Visibility_0, K2Node_Select_Default) == 0x000004, "Member 'KillMessageWidget_C_Get_Killer_Visibility_0::K2Node_Select_Default' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.GetKillNum
// 0x0060 (0x0060 - 0x0000)
struct KillMessageWidget_C_GetKillNum final
{
public:
	int32                                         KillNum;                                           // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AHUD*                                   CallFunc_GetHUD_ReturnValue;                       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslHUD*                                K2Node_DynamicCast_AsTsl_HUD;                      // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_39[0x7];                                       // 0x0039(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UHudAlwaysOn_C*                         K2Node_DynamicCast_AsHud_Always_On;                // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslPlayerState*                        CallFunc_GetTslPlayerState_ReturnValue;            // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetLastKillCount_ReturnValue;             // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetKills_ReturnValue;                     // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KillMessageWidget_C_GetKillNum) == 0x000008, "Wrong alignment on KillMessageWidget_C_GetKillNum");
static_assert(sizeof(KillMessageWidget_C_GetKillNum) == 0x000060, "Wrong size on KillMessageWidget_C_GetKillNum");
static_assert(offsetof(KillMessageWidget_C_GetKillNum, KillNum) == 0x000000, "Member 'KillMessageWidget_C_GetKillNum::KillNum' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetKillNum, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'KillMessageWidget_C_GetKillNum::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetKillNum, CallFunc_GetHUD_ReturnValue) == 0x000010, "Member 'KillMessageWidget_C_GetKillNum::CallFunc_GetHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetKillNum, K2Node_DynamicCast_AsTsl_HUD) == 0x000018, "Member 'KillMessageWidget_C_GetKillNum::K2Node_DynamicCast_AsTsl_HUD' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetKillNum, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'KillMessageWidget_C_GetKillNum::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetKillNum, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000028, "Member 'KillMessageWidget_C_GetKillNum::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetKillNum, CallFunc_GetWidget_ReturnValue) == 0x000030, "Member 'KillMessageWidget_C_GetKillNum::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetKillNum, CallFunc_IsValid_ReturnValue) == 0x000038, "Member 'KillMessageWidget_C_GetKillNum::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetKillNum, K2Node_DynamicCast_AsHud_Always_On) == 0x000040, "Member 'KillMessageWidget_C_GetKillNum::K2Node_DynamicCast_AsHud_Always_On' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetKillNum, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'KillMessageWidget_C_GetKillNum::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetKillNum, CallFunc_GetTslPlayerState_ReturnValue) == 0x000050, "Member 'KillMessageWidget_C_GetKillNum::CallFunc_GetTslPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetKillNum, CallFunc_GetLastKillCount_ReturnValue) == 0x000058, "Member 'KillMessageWidget_C_GetKillNum::CallFunc_GetLastKillCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetKillNum, CallFunc_GetKills_ReturnValue) == 0x00005C, "Member 'KillMessageWidget_C_GetKillNum::CallFunc_GetKills_ReturnValue' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.GetAlivePlayerNum
// 0x0020 (0x0020 - 0x0000)
struct KillMessageWidget_C_GetAlivePlayerNum final
{
public:
	int32                                         AlivePlayer_0;                                     // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslGameState*                          K2Node_DynamicCast_AsTsl_Game_State;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KillMessageWidget_C_GetAlivePlayerNum) == 0x000008, "Wrong alignment on KillMessageWidget_C_GetAlivePlayerNum");
static_assert(sizeof(KillMessageWidget_C_GetAlivePlayerNum) == 0x000020, "Wrong size on KillMessageWidget_C_GetAlivePlayerNum");
static_assert(offsetof(KillMessageWidget_C_GetAlivePlayerNum, AlivePlayer_0) == 0x000000, "Member 'KillMessageWidget_C_GetAlivePlayerNum::AlivePlayer_0' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetAlivePlayerNum, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'KillMessageWidget_C_GetAlivePlayerNum::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetAlivePlayerNum, K2Node_DynamicCast_AsTsl_Game_State) == 0x000010, "Member 'KillMessageWidget_C_GetAlivePlayerNum::K2Node_DynamicCast_AsTsl_Game_State' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetAlivePlayerNum, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'KillMessageWidget_C_GetAlivePlayerNum::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.Get_AlivePlayer_Text_0
// 0x0240 (0x0240 - 0x0000)
struct KillMessageWidget_C_Get_AlivePlayer_Text_0 final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	class FText                                   m__text_Variable;                                  // 0x0018(0x0018)()
	bool                                          m__bool_Variable;                                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable2;                                 // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_32[0x6];                                       // 0x0032(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0038(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0050(0x0040)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_91[0x7];                                       // 0x0091(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0098(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00B0(0x0018)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x00CA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CB[0x5];                                       // 0x00CB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00D0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x00E8(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData3;             // 0x0128(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x0168(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array3;                           // 0x0178(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue2;                      // 0x0188(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue3;                      // 0x01A0(0x0018)()
	bool                                          m__bool_Variable3;                                 // 0x01B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1B9[0x7];                                      // 0x01B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x01C0(0x0028)()
	int32                                         CallFunc_GetNumStartTeam_NumStartTeam;             // 0x01E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01EC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1ED[0x3];                                      // 0x01ED(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x01F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   K2Node_Select2_Default;                            // 0x01F8(0x0018)()
	class ATslPlayerState*                        K2Node_DynamicCast_AsTsl_Player_State;             // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select3_Default;                            // 0x0220(0x0018)()
	int32                                         CallFunc_GetTeamNum_ReturnValue;                   // 0x0238(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue3;           // 0x023C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x023D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KillMessageWidget_C_Get_AlivePlayer_Text_0) == 0x000008, "Wrong alignment on KillMessageWidget_C_Get_AlivePlayer_Text_0");
static_assert(sizeof(KillMessageWidget_C_Get_AlivePlayer_Text_0) == 0x000240, "Wrong size on KillMessageWidget_C_Get_AlivePlayer_Text_0");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, ReturnValue) == 0x000000, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, m__text_Variable) == 0x000018, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::m__text_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, m__bool_Variable) == 0x000030, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, m__bool_Variable2) == 0x000031, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000038, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, K2Node_MakeStruct_FormatArgumentData) == 0x000050, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000090, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, K2Node_MakeArray_Array) == 0x000098, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, CallFunc_LessEqual_IntInt_ReturnValue) == 0x0000A8, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, CallFunc_Format_ReturnValue) == 0x0000B0, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x0000C8, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, CallFunc_BooleanOR_ReturnValue) == 0x0000C9, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, CallFunc_BooleanOR_ReturnValue2) == 0x0000CA, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, CallFunc_Conv_StringToText_ReturnValue) == 0x0000D0, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, K2Node_MakeStruct_FormatArgumentData2) == 0x0000E8, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, K2Node_MakeStruct_FormatArgumentData3) == 0x000128, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::K2Node_MakeStruct_FormatArgumentData3' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, K2Node_MakeArray_Array2) == 0x000168, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, K2Node_MakeArray_Array3) == 0x000178, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::K2Node_MakeArray_Array3' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, CallFunc_Format_ReturnValue2) == 0x000188, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::CallFunc_Format_ReturnValue2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, CallFunc_Format_ReturnValue3) == 0x0001A0, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::CallFunc_Format_ReturnValue3' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, m__bool_Variable3) == 0x0001B8, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::m__bool_Variable3' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, K2Node_Select_Default) == 0x0001C0, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, CallFunc_GetNumStartTeam_NumStartTeam) == 0x0001E8, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::CallFunc_GetNumStartTeam_NumStartTeam' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, CallFunc_Greater_IntInt_ReturnValue) == 0x0001EC, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, CallFunc_GetOwningPlayer_ReturnValue) == 0x0001F0, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, K2Node_Select2_Default) == 0x0001F8, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, K2Node_DynamicCast_AsTsl_Player_State) == 0x000210, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::K2Node_DynamicCast_AsTsl_Player_State' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, K2Node_DynamicCast_bSuccess) == 0x000218, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, K2Node_Select3_Default) == 0x000220, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, CallFunc_GetTeamNum_ReturnValue) == 0x000238, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::CallFunc_GetTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, CallFunc_EqualEqual_IntInt_ReturnValue3) == 0x00023C, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::CallFunc_EqualEqual_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_Get_AlivePlayer_Text_0, CallFunc_BooleanOR_ReturnValue3) == 0x00023D, "Member 'KillMessageWidget_C_Get_AlivePlayer_Text_0::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.GetTeamAlive
// 0x0020 (0x0020 - 0x0000)
struct KillMessageWidget_C_GetTeamAlive final
{
public:
	int32                                         Alive;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerController*                   K2Node_DynamicCast_AsTsl_Player_Controller;        // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAliveTeamMemberCount_ReturnValue;      // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KillMessageWidget_C_GetTeamAlive) == 0x000008, "Wrong alignment on KillMessageWidget_C_GetTeamAlive");
static_assert(sizeof(KillMessageWidget_C_GetTeamAlive) == 0x000020, "Wrong size on KillMessageWidget_C_GetTeamAlive");
static_assert(offsetof(KillMessageWidget_C_GetTeamAlive, Alive) == 0x000000, "Member 'KillMessageWidget_C_GetTeamAlive::Alive' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetTeamAlive, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'KillMessageWidget_C_GetTeamAlive::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetTeamAlive, K2Node_DynamicCast_AsTsl_Player_Controller) == 0x000010, "Member 'KillMessageWidget_C_GetTeamAlive::K2Node_DynamicCast_AsTsl_Player_Controller' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetTeamAlive, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'KillMessageWidget_C_GetTeamAlive::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetTeamAlive, CallFunc_GetAliveTeamMemberCount_ReturnValue) == 0x00001C, "Member 'KillMessageWidget_C_GetTeamAlive::CallFunc_GetAliveTeamMemberCount_ReturnValue' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.GetBrushColor_0
// 0x0048 (0x0048 - 0x0000)
struct KillMessageWidget_C_GetBrushColor_0 final
{
public:
	struct FLinearColor                           ReturnValue;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           m__struct_Variable;                                // 0x0014(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FLinearColor                           m__struct_Variable2;                               // 0x0024(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_35[0x3];                                       // 0x0035(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FLinearColor                           K2Node_Select_Default;                             // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KillMessageWidget_C_GetBrushColor_0) == 0x000004, "Wrong alignment on KillMessageWidget_C_GetBrushColor_0");
static_assert(sizeof(KillMessageWidget_C_GetBrushColor_0) == 0x000048, "Wrong size on KillMessageWidget_C_GetBrushColor_0");
static_assert(offsetof(KillMessageWidget_C_GetBrushColor_0, ReturnValue) == 0x000000, "Member 'KillMessageWidget_C_GetBrushColor_0::ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetBrushColor_0, m__bool_Variable) == 0x000010, "Member 'KillMessageWidget_C_GetBrushColor_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetBrushColor_0, m__struct_Variable) == 0x000014, "Member 'KillMessageWidget_C_GetBrushColor_0::m__struct_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetBrushColor_0, m__struct_Variable2) == 0x000024, "Member 'KillMessageWidget_C_GetBrushColor_0::m__struct_Variable2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetBrushColor_0, CallFunc_BooleanOR_ReturnValue) == 0x000034, "Member 'KillMessageWidget_C_GetBrushColor_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetBrushColor_0, K2Node_Select_Default) == 0x000038, "Member 'KillMessageWidget_C_GetBrushColor_0::K2Node_Select_Default' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.On_MyKills_Prepass_0
// 0x0190 (0x0190 - 0x0000)
struct KillMessageWidget_C_On_MyKills_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable2;                                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m__text_Variable;                                  // 0x0010(0x0018)()
	bool                                          m__bool_Variable3;                                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsKillerTeam_IsTeam;                      // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2A[0x2];                                       // 0x002A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetKillNum_KillNum;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0032(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0033(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0034(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0035(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanNAND_ReturnValue;                  // 0x0036(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0037(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanXOR_ReturnValue;                   // 0x0038(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x0039(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue3;                 // 0x003A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x003B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0040(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue5;                  // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0060(0x0040)()
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A1[0x7];                                       // 0x00A1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00A8(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_BooleanAND_ReturnValue6;                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00C0(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue7;                  // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x00E0(0x0040)()
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x7];                                      // 0x0121(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x0128(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_BooleanOR_ReturnValue4;                   // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue2;                      // 0x0140(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0158(0x0018)()
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select3_Default;                            // 0x0178(0x0018)()
};
static_assert(alignof(KillMessageWidget_C_On_MyKills_Prepass_0) == 0x000008, "Wrong alignment on KillMessageWidget_C_On_MyKills_Prepass_0");
static_assert(sizeof(KillMessageWidget_C_On_MyKills_Prepass_0) == 0x000190, "Wrong size on KillMessageWidget_C_On_MyKills_Prepass_0");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, BoundWidget) == 0x000000, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, m__bool_Variable) == 0x000008, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, m__byte_Variable) == 0x000009, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, m__byte_Variable2) == 0x00000A, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, m__bool_Variable2) == 0x00000B, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, m__text_Variable) == 0x000010, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::m__text_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, m__bool_Variable3) == 0x000028, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::m__bool_Variable3' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_IsKillerTeam_IsTeam) == 0x000029, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_IsKillerTeam_IsTeam' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_GetKillNum_KillNum) == 0x00002C, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_GetKillNum_KillNum' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_Greater_IntInt_ReturnValue) == 0x000030, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_Not_PreBool_ReturnValue) == 0x000031, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_Not_PreBool_ReturnValue2) == 0x000032, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_BooleanAND_ReturnValue) == 0x000033, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000034, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000035, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_BooleanNAND_ReturnValue) == 0x000036, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_BooleanNAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_BooleanOR_ReturnValue) == 0x000037, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_BooleanXOR_ReturnValue) == 0x000038, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_BooleanXOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_BooleanAND_ReturnValue2) == 0x000039, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_Not_PreBool_ReturnValue3) == 0x00003A, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_Not_PreBool_ReturnValue3' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_BooleanAND_ReturnValue3) == 0x00003B, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_BooleanAND_ReturnValue4) == 0x00003C, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_Conv_IntToText_ReturnValue) == 0x000040, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_BooleanAND_ReturnValue5) == 0x000058, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_BooleanAND_ReturnValue5' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, K2Node_MakeStruct_FormatArgumentData) == 0x000060, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_BooleanOR_ReturnValue2) == 0x0000A0, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, K2Node_MakeArray_Array) == 0x0000A8, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_BooleanAND_ReturnValue6) == 0x0000B8, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_BooleanAND_ReturnValue6' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_Format_ReturnValue) == 0x0000C0, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_BooleanAND_ReturnValue7) == 0x0000D8, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_BooleanAND_ReturnValue7' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, K2Node_MakeStruct_FormatArgumentData2) == 0x0000E0, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_BooleanOR_ReturnValue3) == 0x000120, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, K2Node_MakeArray_Array2) == 0x000128, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_BooleanOR_ReturnValue4) == 0x000138, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_BooleanOR_ReturnValue4' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, CallFunc_Format_ReturnValue2) == 0x000140, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::CallFunc_Format_ReturnValue2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, K2Node_Select_Default) == 0x000158, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, K2Node_Select2_Default) == 0x000170, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_MyKills_Prepass_0, K2Node_Select3_Default) == 0x000178, "Member 'KillMessageWidget_C_On_MyKills_Prepass_0::K2Node_Select3_Default' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.On_AlivePlayer_Prepass_0
// 0x0010 (0x0010 - 0x0000)
struct KillMessageWidget_C_On_AlivePlayer_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KillMessageWidget_C_On_AlivePlayer_Prepass_0) == 0x000008, "Wrong alignment on KillMessageWidget_C_On_AlivePlayer_Prepass_0");
static_assert(sizeof(KillMessageWidget_C_On_AlivePlayer_Prepass_0) == 0x000010, "Wrong size on KillMessageWidget_C_On_AlivePlayer_Prepass_0");
static_assert(offsetof(KillMessageWidget_C_On_AlivePlayer_Prepass_0, BoundWidget) == 0x000000, "Member 'KillMessageWidget_C_On_AlivePlayer_Prepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_AlivePlayer_Prepass_0, m__bool_Variable) == 0x000008, "Member 'KillMessageWidget_C_On_AlivePlayer_Prepass_0::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_AlivePlayer_Prepass_0, m__byte_Variable) == 0x000009, "Member 'KillMessageWidget_C_On_AlivePlayer_Prepass_0::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_AlivePlayer_Prepass_0, m__byte_Variable2) == 0x00000A, "Member 'KillMessageWidget_C_On_AlivePlayer_Prepass_0::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_On_AlivePlayer_Prepass_0, K2Node_Select_Default) == 0x00000B, "Member 'KillMessageWidget_C_On_AlivePlayer_Prepass_0::K2Node_Select_Default' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.GetNumStartTeam
// 0x0020 (0x0020 - 0x0000)
struct KillMessageWidget_C_GetNumStartTeam final
{
public:
	int32                                         NumStartTeam;                                      // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class AGameStateBase*                         CallFunc_GetGameState_ReturnValue;                 // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslGameState*                          K2Node_DynamicCast_AsTsl_Game_State;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KillMessageWidget_C_GetNumStartTeam) == 0x000008, "Wrong alignment on KillMessageWidget_C_GetNumStartTeam");
static_assert(sizeof(KillMessageWidget_C_GetNumStartTeam) == 0x000020, "Wrong size on KillMessageWidget_C_GetNumStartTeam");
static_assert(offsetof(KillMessageWidget_C_GetNumStartTeam, NumStartTeam) == 0x000000, "Member 'KillMessageWidget_C_GetNumStartTeam::NumStartTeam' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetNumStartTeam, CallFunc_GetGameState_ReturnValue) == 0x000008, "Member 'KillMessageWidget_C_GetNumStartTeam::CallFunc_GetGameState_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetNumStartTeam, K2Node_DynamicCast_AsTsl_Game_State) == 0x000010, "Member 'KillMessageWidget_C_GetNumStartTeam::K2Node_DynamicCast_AsTsl_Game_State' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_GetNumStartTeam, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'KillMessageWidget_C_GetNumStartTeam::K2Node_DynamicCast_bSuccess' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.SetKillMessageText
// 0x11A0 (0x11A0 - 0x0000)
struct KillMessageWidget_C_SetKillMessageText final
{
public:
	class FText                                   m__text_Variable;                                  // 0x0000(0x0018)()
	bool                                          m__bool_Variable;                                  // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable2;                                 // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable3;                                 // 0x001A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable4;                                 // 0x001B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable5;                                 // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable6;                                 // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable7;                                 // 0x001E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable8;                                 // 0x001F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable9;                                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EDamageReason                                 m__byte_Variable;                                  // 0x0022(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable10;                                // 0x0023(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable11;                                // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable12;                                // 0x0025(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable13;                                // 0x0026(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable14;                                // 0x0027(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable15;                                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable16;                                // 0x0029(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable17;                                // 0x002A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2B[0x5];                                       // 0x002B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m__text_Variable2;                                 // 0x0030(0x0018)()
	bool                                          m__bool_Variable18;                                // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m__text_Variable3;                                 // 0x0050(0x0018)()
	bool                                          m__bool_Variable19;                                // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x7];                                       // 0x0069(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m__text_Variable4;                                 // 0x0070(0x0018)()
	bool                                          m__bool_Variable20;                                // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0090(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x00D0(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x00E0(0x0040)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x0120(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData3;             // 0x0138(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData4;             // 0x0178(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x01B8(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData5;             // 0x01C8(0x0040)()
	class FText                                   CallFunc_Format_ReturnValue2;                      // 0x0208(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData6;             // 0x0220(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData7;             // 0x0260(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData8;             // 0x02A0(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData9;             // 0x02E0(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData10;            // 0x0320(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData11;            // 0x0360(0x0040)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue;                  // 0x03A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable21;                                // 0x03A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3A2[0x6];                                      // 0x03A2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData12;            // 0x03A8(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array3;                           // 0x03E8(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData13;            // 0x03F8(0x0040)()
	class FText                                   CallFunc_Format_ReturnValue3;                      // 0x0438(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array4;                           // 0x0450(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue4;                      // 0x0460(0x0018)()
	class FText                                   K2Node_Select_Default;                             // 0x0478(0x0018)()
	bool                                          CallFunc_IsVictimTeam_IsTeam;                      // 0x0490(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0491(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_492[0x6];                                      // 0x0492(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData14;            // 0x0498(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData15;            // 0x04D8(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData16;            // 0x0518(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array5;                           // 0x0558(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array6;                           // 0x0568(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue5;                      // 0x0578(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue6;                      // 0x0590(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData17;            // 0x05A8(0x0040)()
	class FText                                   K2Node_Select2_Default;                            // 0x05E8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData18;            // 0x0600(0x0040)()
	class FText                                   K2Node_Select3_Default;                            // 0x0640(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array7;                           // 0x0658(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue7;                      // 0x0668(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData19;            // 0x0680(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData20;            // 0x06C0(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array8;                           // 0x0700(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array9;                           // 0x0710(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue8;                      // 0x0720(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue9;                      // 0x0738(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData21;            // 0x0750(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData22;            // 0x0790(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array10;                          // 0x07D0(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array11;                          // 0x07E0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue10;                     // 0x07F0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue11;                     // 0x0808(0x0018)()
	class FText                                   K2Node_Select4_Default;                            // 0x0820(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData23;            // 0x0838(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array12;                          // 0x0878(0x0010)(ZeroConstructor, ReferenceParm)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData24;            // 0x0888(0x0040)()
	class FText                                   CallFunc_Format_ReturnValue12;                     // 0x08C8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array13;                          // 0x08E0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   K2Node_Select5_Default;                            // 0x08F0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue13;                     // 0x0908(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData25;            // 0x0920(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData26;            // 0x0960(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array14;                          // 0x09A0(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array15;                          // 0x09B0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue14;                     // 0x09C0(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue15;                     // 0x09D8(0x0018)()
	class FText                                   K2Node_Select6_Default;                            // 0x09F0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData27;            // 0x0A08(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData28;            // 0x0A48(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array16;                          // 0x0A88(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array17;                          // 0x0A98(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue16;                     // 0x0AA8(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue17;                     // 0x0AC0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData29;            // 0x0AD8(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData30;            // 0x0B18(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData31;            // 0x0B58(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData32;            // 0x0B98(0x0040)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue2;                 // 0x0BD8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD9[0x7];                                      // 0x0BD9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select7_Default;                            // 0x0BE0(0x0018)()
	bool                                          CallFunc_TextIsEmpty_ReturnValue3;                 // 0x0BF8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BF9[0x7];                                      // 0x0BF9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData33;            // 0x0C00(0x0040)()
	class FText                                   K2Node_Select8_Default;                            // 0x0C40(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData34;            // 0x0C58(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData35;            // 0x0C98(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData36;            // 0x0CD8(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array18;                          // 0x0D18(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array19;                          // 0x0D28(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue18;                     // 0x0D38(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue19;                     // 0x0D50(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData37;            // 0x0D68(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData38;            // 0x0DA8(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData39;            // 0x0DE8(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData40;            // 0x0E28(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array20;                          // 0x0E68(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array21;                          // 0x0E78(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue20;                     // 0x0E88(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue21;                     // 0x0EA0(0x0018)()
	class FText                                   K2Node_Select9_Default;                            // 0x0EB8(0x0018)()
	class FText                                   K2Node_Select10_Default;                           // 0x0ED0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData41;            // 0x0EE8(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData42;            // 0x0F28(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array22;                          // 0x0F68(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array23;                          // 0x0F78(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue22;                     // 0x0F88(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue23;                     // 0x0FA0(0x0018)()
	bool                                          m__bool_Variable22;                                // 0x0FB8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FB9[0x7];                                      // 0x0FB9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select11_Default;                           // 0x0FC0(0x0018)()
	class FText                                   K2Node_Select12_Default;                           // 0x0FD8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData43;            // 0x0FF0(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array24;                          // 0x1030(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue24;                     // 0x1040(0x0018)()
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x1058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_Select13_Default;                           // 0x1059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x105A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_SwitchEnum_CmpSuccess;                      // 0x105B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x105C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue2;                  // 0x105D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105E[0x2];                                     // 0x105E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x1060(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue3;                  // 0x1078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1079[0x7];                                     // 0x1079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select14_Default;                           // 0x1080(0x0018)()
	bool                                          CallFunc_BooleanAND_ReturnValue4;                  // 0x1098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1099[0x7];                                     // 0x1099(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue2;           // 0x10A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData44;            // 0x10B8(0x0040)()
	class FText                                   K2Node_Select15_Default;                           // 0x10F8(0x0018)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array25;                          // 0x1110(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue25;                     // 0x1120(0x0018)()
	class FText                                   K2Node_Select16_Default;                           // 0x1138(0x0018)()
	bool                                          bIsStealKilled;                                    // 0x1150(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAmIVictim;                                        // 0x1151(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bAmIKiller;                                        // 0x1152(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsSuicide;                                        // 0x1153(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsHeadShot;                                       // 0x1154(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bIsDBNO;                                           // 0x1155(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1156[0x2];                                     // 0x1156(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   Method;                                            // 0x1158(0x0018)(Edit)
	class FText                                   VictimName;                                        // 0x1170(0x0018)(Edit)
	class FText                                   KillerName;                                        // 0x1188(0x0018)(Edit)
};
static_assert(alignof(KillMessageWidget_C_SetKillMessageText) == 0x000008, "Wrong alignment on KillMessageWidget_C_SetKillMessageText");
static_assert(sizeof(KillMessageWidget_C_SetKillMessageText) == 0x0011A0, "Wrong size on KillMessageWidget_C_SetKillMessageText");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__text_Variable) == 0x000000, "Member 'KillMessageWidget_C_SetKillMessageText::m__text_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable) == 0x000018, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable2) == 0x000019, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable3) == 0x00001A, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable3' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable4) == 0x00001B, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable4' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable5) == 0x00001C, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable5' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable6) == 0x00001D, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable6' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable7) == 0x00001E, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable7' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable8) == 0x00001F, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable8' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable9) == 0x000020, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable9' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_BooleanAND_ReturnValue) == 0x000021, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__byte_Variable) == 0x000022, "Member 'KillMessageWidget_C_SetKillMessageText::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable10) == 0x000023, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable10' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable11) == 0x000024, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable11' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable12) == 0x000025, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable12' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable13) == 0x000026, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable13' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable14) == 0x000027, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable14' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable15) == 0x000028, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable15' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable16) == 0x000029, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable16' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable17) == 0x00002A, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable17' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__text_Variable2) == 0x000030, "Member 'KillMessageWidget_C_SetKillMessageText::m__text_Variable2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable18) == 0x000048, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable18' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__text_Variable3) == 0x000050, "Member 'KillMessageWidget_C_SetKillMessageText::m__text_Variable3' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable19) == 0x000068, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable19' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__text_Variable4) == 0x000070, "Member 'KillMessageWidget_C_SetKillMessageText::m__text_Variable4' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable20) == 0x000088, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable20' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData) == 0x000090, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array) == 0x0000D0, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData2) == 0x0000E0, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue) == 0x000120, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData3) == 0x000138, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData3' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData4) == 0x000178, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData4' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array2) == 0x0001B8, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData5) == 0x0001C8, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData5' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue2) == 0x000208, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData6) == 0x000220, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData6' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData7) == 0x000260, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData7' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData8) == 0x0002A0, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData8' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData9) == 0x0002E0, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData9' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData10) == 0x000320, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData10' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData11) == 0x000360, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData11' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_TextIsEmpty_ReturnValue) == 0x0003A0, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_TextIsEmpty_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable21) == 0x0003A1, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable21' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData12) == 0x0003A8, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData12' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array3) == 0x0003E8, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array3' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData13) == 0x0003F8, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData13' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue3) == 0x000438, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue3' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array4) == 0x000450, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array4' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue4) == 0x000460, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue4' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_Select_Default) == 0x000478, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_IsVictimTeam_IsTeam) == 0x000490, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_IsVictimTeam_IsTeam' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Not_PreBool_ReturnValue) == 0x000491, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData14) == 0x000498, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData14' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData15) == 0x0004D8, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData15' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData16) == 0x000518, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData16' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array5) == 0x000558, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array5' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array6) == 0x000568, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array6' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue5) == 0x000578, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue5' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue6) == 0x000590, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue6' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData17) == 0x0005A8, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData17' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_Select2_Default) == 0x0005E8, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData18) == 0x000600, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData18' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_Select3_Default) == 0x000640, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array7) == 0x000658, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array7' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue7) == 0x000668, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue7' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData19) == 0x000680, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData19' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData20) == 0x0006C0, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData20' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array8) == 0x000700, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array8' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array9) == 0x000710, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array9' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue8) == 0x000720, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue8' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue9) == 0x000738, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue9' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData21) == 0x000750, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData21' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData22) == 0x000790, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData22' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array10) == 0x0007D0, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array10' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array11) == 0x0007E0, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array11' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue10) == 0x0007F0, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue10' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue11) == 0x000808, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue11' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_Select4_Default) == 0x000820, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData23) == 0x000838, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData23' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array12) == 0x000878, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array12' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData24) == 0x000888, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData24' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue12) == 0x0008C8, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue12' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array13) == 0x0008E0, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array13' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_Select5_Default) == 0x0008F0, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue13) == 0x000908, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue13' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData25) == 0x000920, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData25' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData26) == 0x000960, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData26' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array14) == 0x0009A0, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array14' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array15) == 0x0009B0, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array15' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue14) == 0x0009C0, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue14' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue15) == 0x0009D8, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue15' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_Select6_Default) == 0x0009F0, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_Select6_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData27) == 0x000A08, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData27' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData28) == 0x000A48, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData28' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array16) == 0x000A88, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array16' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array17) == 0x000A98, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array17' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue16) == 0x000AA8, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue16' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue17) == 0x000AC0, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue17' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData29) == 0x000AD8, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData29' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData30) == 0x000B18, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData30' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData31) == 0x000B58, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData31' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData32) == 0x000B98, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData32' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_TextIsEmpty_ReturnValue2) == 0x000BD8, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_TextIsEmpty_ReturnValue2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_Select7_Default) == 0x000BE0, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_Select7_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_TextIsEmpty_ReturnValue3) == 0x000BF8, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_TextIsEmpty_ReturnValue3' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData33) == 0x000C00, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData33' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_Select8_Default) == 0x000C40, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_Select8_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData34) == 0x000C58, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData34' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData35) == 0x000C98, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData35' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData36) == 0x000CD8, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData36' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array18) == 0x000D18, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array18' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array19) == 0x000D28, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array19' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue18) == 0x000D38, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue18' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue19) == 0x000D50, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue19' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData37) == 0x000D68, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData37' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData38) == 0x000DA8, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData38' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData39) == 0x000DE8, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData39' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData40) == 0x000E28, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData40' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array20) == 0x000E68, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array20' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array21) == 0x000E78, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array21' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue20) == 0x000E88, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue20' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue21) == 0x000EA0, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue21' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_Select9_Default) == 0x000EB8, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_Select9_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_Select10_Default) == 0x000ED0, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_Select10_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData41) == 0x000EE8, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData41' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData42) == 0x000F28, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData42' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array22) == 0x000F68, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array22' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array23) == 0x000F78, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array23' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue22) == 0x000F88, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue22' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue23) == 0x000FA0, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue23' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, m__bool_Variable22) == 0x000FB8, "Member 'KillMessageWidget_C_SetKillMessageText::m__bool_Variable22' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_Select11_Default) == 0x000FC0, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_Select11_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_Select12_Default) == 0x000FD8, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_Select12_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData43) == 0x000FF0, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData43' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array24) == 0x001030, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array24' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue24) == 0x001040, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue24' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_IsValid_ReturnValue) == 0x001058, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_Select13_Default) == 0x001059, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_Select13_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00105A, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_SwitchEnum_CmpSuccess) == 0x00105B, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_SwitchEnum_CmpSuccess' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Not_PreBool_ReturnValue2) == 0x00105C, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_BooleanAND_ReturnValue2) == 0x00105D, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_BooleanAND_ReturnValue2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Conv_StringToText_ReturnValue) == 0x001060, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_BooleanAND_ReturnValue3) == 0x001078, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_BooleanAND_ReturnValue3' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_Select14_Default) == 0x001080, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_Select14_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_BooleanAND_ReturnValue4) == 0x001098, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_BooleanAND_ReturnValue4' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Conv_StringToText_ReturnValue2) == 0x0010A0, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Conv_StringToText_ReturnValue2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeStruct_FormatArgumentData44) == 0x0010B8, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeStruct_FormatArgumentData44' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_Select15_Default) == 0x0010F8, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_Select15_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_MakeArray_Array25) == 0x001110, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_MakeArray_Array25' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, CallFunc_Format_ReturnValue25) == 0x001120, "Member 'KillMessageWidget_C_SetKillMessageText::CallFunc_Format_ReturnValue25' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, K2Node_Select16_Default) == 0x001138, "Member 'KillMessageWidget_C_SetKillMessageText::K2Node_Select16_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, bIsStealKilled) == 0x001150, "Member 'KillMessageWidget_C_SetKillMessageText::bIsStealKilled' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, bAmIVictim) == 0x001151, "Member 'KillMessageWidget_C_SetKillMessageText::bAmIVictim' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, bAmIKiller) == 0x001152, "Member 'KillMessageWidget_C_SetKillMessageText::bAmIKiller' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, bIsSuicide) == 0x001153, "Member 'KillMessageWidget_C_SetKillMessageText::bIsSuicide' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, bIsHeadShot) == 0x001154, "Member 'KillMessageWidget_C_SetKillMessageText::bIsHeadShot' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, bIsDBNO) == 0x001155, "Member 'KillMessageWidget_C_SetKillMessageText::bIsDBNO' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, Method) == 0x001158, "Member 'KillMessageWidget_C_SetKillMessageText::Method' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, VictimName) == 0x001170, "Member 'KillMessageWidget_C_SetKillMessageText::VictimName' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageText, KillerName) == 0x001188, "Member 'KillMessageWidget_C_SetKillMessageText::KillerName' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.OnPrepass_0
// 0x0008 (0x0008 - 0x0000)
struct KillMessageWidget_C_OnPrepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KillMessageWidget_C_OnPrepass_0) == 0x000008, "Wrong alignment on KillMessageWidget_C_OnPrepass_0");
static_assert(sizeof(KillMessageWidget_C_OnPrepass_0) == 0x000008, "Wrong size on KillMessageWidget_C_OnPrepass_0");
static_assert(offsetof(KillMessageWidget_C_OnPrepass_0, BoundWidget) == 0x000000, "Member 'KillMessageWidget_C_OnPrepass_0::BoundWidget' has a wrong offset!");

// Function KillMessageWidget.KillMessageWidget_C.SetKillMessageFont
// 0x0180 (0x0180 - 0x0000)
struct KillMessageWidget_C_SetKillMessageFont final
{
public:
	bool                                          m__bool_Variable;                                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable2;                                 // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2[0x6];                                        // 0x0002(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerState*                        K2Node_DynamicCast_AsTsl_Player_State;             // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetTeamNum_ReturnValue;                   // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable3;                                 // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateColor                            K2Node_Select_Default;                             // 0x0028(0x0028)()
	struct FSlateFontInfo                         K2Node_MakeStruct_SlateFontInfo;                   // 0x0050(0x0068)()
	struct FSlateColor                            K2Node_Select2_Default;                            // 0x00B8(0x0028)()
	struct FSlateColor                            K2Node_Select3_Default;                            // 0x00E0(0x0028)()
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue2;           // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x010A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x010B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10C[0x4];                                      // 0x010C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FSlateFontInfo                         FontBold;                                          // 0x0110(0x0068)(Edit)
	int32                                         TeamNum;                                           // 0x0178(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(KillMessageWidget_C_SetKillMessageFont) == 0x000008, "Wrong alignment on KillMessageWidget_C_SetKillMessageFont");
static_assert(sizeof(KillMessageWidget_C_SetKillMessageFont) == 0x000180, "Wrong size on KillMessageWidget_C_SetKillMessageFont");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageFont, m__bool_Variable) == 0x000000, "Member 'KillMessageWidget_C_SetKillMessageFont::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageFont, m__bool_Variable2) == 0x000001, "Member 'KillMessageWidget_C_SetKillMessageFont::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageFont, CallFunc_GetOwningPlayer_ReturnValue) == 0x000008, "Member 'KillMessageWidget_C_SetKillMessageFont::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageFont, K2Node_DynamicCast_AsTsl_Player_State) == 0x000010, "Member 'KillMessageWidget_C_SetKillMessageFont::K2Node_DynamicCast_AsTsl_Player_State' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageFont, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'KillMessageWidget_C_SetKillMessageFont::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageFont, CallFunc_GetTeamNum_ReturnValue) == 0x00001C, "Member 'KillMessageWidget_C_SetKillMessageFont::CallFunc_GetTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageFont, m__bool_Variable3) == 0x000020, "Member 'KillMessageWidget_C_SetKillMessageFont::m__bool_Variable3' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageFont, K2Node_Select_Default) == 0x000028, "Member 'KillMessageWidget_C_SetKillMessageFont::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageFont, K2Node_MakeStruct_SlateFontInfo) == 0x000050, "Member 'KillMessageWidget_C_SetKillMessageFont::K2Node_MakeStruct_SlateFontInfo' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageFont, K2Node_Select2_Default) == 0x0000B8, "Member 'KillMessageWidget_C_SetKillMessageFont::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageFont, K2Node_Select3_Default) == 0x0000E0, "Member 'KillMessageWidget_C_SetKillMessageFont::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageFont, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000108, "Member 'KillMessageWidget_C_SetKillMessageFont::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageFont, CallFunc_EqualEqual_IntInt_ReturnValue2) == 0x000109, "Member 'KillMessageWidget_C_SetKillMessageFont::CallFunc_EqualEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageFont, CallFunc_BooleanOR_ReturnValue) == 0x00010A, "Member 'KillMessageWidget_C_SetKillMessageFont::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageFont, CallFunc_BooleanOR_ReturnValue2) == 0x00010B, "Member 'KillMessageWidget_C_SetKillMessageFont::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageFont, FontBold) == 0x000110, "Member 'KillMessageWidget_C_SetKillMessageFont::FontBold' has a wrong offset!");
static_assert(offsetof(KillMessageWidget_C_SetKillMessageFont, TeamNum) == 0x000178, "Member 'KillMessageWidget_C_SetKillMessageFont::TeamNum' has a wrong offset!");

}

