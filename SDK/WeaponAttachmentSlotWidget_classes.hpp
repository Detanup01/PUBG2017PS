#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: WeaponAttachmentSlotWidget

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "TslGame_structs.hpp"
#include "UMG_structs.hpp"
#include "InventorySlotBaseWidget_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass WeaponAttachmentSlotWidget.WeaponAttachmentSlotWidget_C
// 0x0050 (0x0340 - 0x02F0)
class UWeaponAttachmentSlotWidget_C final : public UInventorySlotBaseWidget_C
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame_WeaponAttachmentSlotWidget_C;       // 0x02F0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UImage*                                 AttachmentIcon;                                    // 0x02F8(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UBorder*                                AttachmentSlotBackground;                          // 0x0300(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	float                                         IconSize_0;                                        // 0x0308(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_30C[0x4];                                      // 0x030C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponItem*                            WeaponItem;                                        // 0x0310(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	EWeaponAttachmentSlotID                       AttachmentSlotID;                                  // 0x0318(0x0001)(Edit, BlueprintVisible, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_319[0x7];                                      // 0x0319(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttachableItem*                        DragDroppingAttachableItem;                        // 0x0320(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               SlotBackgroundMaterial;                            // 0x0328(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	class AInventory*                             Inventory;                                         // 0x0330(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bWantFocus;                                        // 0x0338(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSelfAttachFocus;                                  // 0x0339(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bSelfAttachmentPutFocus;                           // 0x033A(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_WeaponAttachmentSlotWidget(int32 EntryPoint);
	void Construct();
	void OnMouseLeave(const struct FPointerEvent& MouseEvent);
	void OnMouseEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnDragLeave(const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	void OnDragEnter(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	class FText GetAttachmentNameText();
	struct FSlateBrush GetSlotIcon();
	ESlateVisibility GetSlotVisibility();
	struct FEventReply OnMouseButtonDown(const struct FGeometry& MyGeometry, const struct FPointerEvent& MouseEvent);
	void OnDragDetected(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation** Operation);
	void MainPrepass_0(class UWidget* BoundWidget);
	void HasAttachmentSlot(bool* HasAttachmentSlot_0);
	void GetAttachmentItem(class UAttachableItem** AttachmentItem);
	void IsAttachable(bool* IsAttachable_0);
	void IsOhterSlotMouseOver(bool* IsOver);
	void IsSlotOn_Bp(bool* IsOn);
	void IsSlotSubOn_Bp(bool* SubOn);
	void GetItem_Bp(class UItem** Item_0);
	void OnPrepass_0(class UWidget* BoundWidget);
	void IsSlotMouseOver_Bp(bool* IsMouseOver);
	void On_AttachmentIcon_Prepass_0(class UWidget* BoundWidget);
	void OnPrepass_1(class UWidget* BoundWidget);
	void GetDragDroppingAttachableItem(class UAttachableItem** DragDroppingAttachableItem_0);
	void GetOptoins(class FString* Options);
	bool OnDrop(const struct FGeometry& MyGeometry, const struct FPointerEvent& PointerEvent, class UDragDropOperation* Operation);
	bool SetFocus(bool NewFocus);
	bool InputA();
	bool InputB();
	void GetSlotContainer(TScriptInterface<class ISlotContainerInterface>* SlotContainer);
	void GetSlotItem(TScriptInterface<class ISlotInterface>* SlotItem);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"WeaponAttachmentSlotWidget_C">();
	}
	static class UWeaponAttachmentSlotWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UWeaponAttachmentSlotWidget_C>();
	}
};
static_assert(alignof(UWeaponAttachmentSlotWidget_C) == 0x000008, "Wrong alignment on UWeaponAttachmentSlotWidget_C");
static_assert(sizeof(UWeaponAttachmentSlotWidget_C) == 0x000340, "Wrong size on UWeaponAttachmentSlotWidget_C");
static_assert(offsetof(UWeaponAttachmentSlotWidget_C, UberGraphFrame_WeaponAttachmentSlotWidget_C) == 0x0002F0, "Member 'UWeaponAttachmentSlotWidget_C::UberGraphFrame_WeaponAttachmentSlotWidget_C' has a wrong offset!");
static_assert(offsetof(UWeaponAttachmentSlotWidget_C, AttachmentIcon) == 0x0002F8, "Member 'UWeaponAttachmentSlotWidget_C::AttachmentIcon' has a wrong offset!");
static_assert(offsetof(UWeaponAttachmentSlotWidget_C, AttachmentSlotBackground) == 0x000300, "Member 'UWeaponAttachmentSlotWidget_C::AttachmentSlotBackground' has a wrong offset!");
static_assert(offsetof(UWeaponAttachmentSlotWidget_C, IconSize_0) == 0x000308, "Member 'UWeaponAttachmentSlotWidget_C::IconSize_0' has a wrong offset!");
static_assert(offsetof(UWeaponAttachmentSlotWidget_C, WeaponItem) == 0x000310, "Member 'UWeaponAttachmentSlotWidget_C::WeaponItem' has a wrong offset!");
static_assert(offsetof(UWeaponAttachmentSlotWidget_C, AttachmentSlotID) == 0x000318, "Member 'UWeaponAttachmentSlotWidget_C::AttachmentSlotID' has a wrong offset!");
static_assert(offsetof(UWeaponAttachmentSlotWidget_C, DragDroppingAttachableItem) == 0x000320, "Member 'UWeaponAttachmentSlotWidget_C::DragDroppingAttachableItem' has a wrong offset!");
static_assert(offsetof(UWeaponAttachmentSlotWidget_C, SlotBackgroundMaterial) == 0x000328, "Member 'UWeaponAttachmentSlotWidget_C::SlotBackgroundMaterial' has a wrong offset!");
static_assert(offsetof(UWeaponAttachmentSlotWidget_C, Inventory) == 0x000330, "Member 'UWeaponAttachmentSlotWidget_C::Inventory' has a wrong offset!");
static_assert(offsetof(UWeaponAttachmentSlotWidget_C, bWantFocus) == 0x000338, "Member 'UWeaponAttachmentSlotWidget_C::bWantFocus' has a wrong offset!");
static_assert(offsetof(UWeaponAttachmentSlotWidget_C, bSelfAttachFocus) == 0x000339, "Member 'UWeaponAttachmentSlotWidget_C::bSelfAttachFocus' has a wrong offset!");
static_assert(offsetof(UWeaponAttachmentSlotWidget_C, bSelfAttachmentPutFocus) == 0x00033A, "Member 'UWeaponAttachmentSlotWidget_C::bSelfAttachmentPutFocus' has a wrong offset!");

}

