#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: UiSettings

#include "Basic.hpp"

#include "TslGame_structs.hpp"


namespace SDK::Params
{

// Function UiSettings.UiSettings_C.ExecuteUbergraph_UiSettings
// 0x0004 (0x0004 - 0x0000)
struct UiSettings_C_ExecuteUbergraph_UiSettings final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UiSettings_C_ExecuteUbergraph_UiSettings) == 0x000004, "Wrong alignment on UiSettings_C_ExecuteUbergraph_UiSettings");
static_assert(sizeof(UiSettings_C_ExecuteUbergraph_UiSettings) == 0x000004, "Wrong size on UiSettings_C_ExecuteUbergraph_UiSettings");
static_assert(offsetof(UiSettings_C_ExecuteUbergraph_UiSettings, EntryPoint) == 0x000000, "Member 'UiSettings_C_ExecuteUbergraph_UiSettings::EntryPoint' has a wrong offset!");

// Function UiSettings.UiSettings_C.InitUiSetting
// 0x01B0 (0x01B0 - 0x0000)
struct UiSettings_C_InitUiSetting final
{
public:
	bool                                          m__bool_Variable;                                  // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m__string_Variable;                                // 0x0008(0x0010)(ZeroConstructor)
	class FString                                 m__string_Variable2;                               // 0x0018(0x0010)(ZeroConstructor)
	bool                                          m__bool_Variable2;                                 // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x3];                                       // 0x0029(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Array_Index_Variable;                       // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0030(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Array_Index_Variable2;                      // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetWorldMapZoomSpeedLevel_ReturnValue;    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUiShowType                                   CallFunc_GetTpsWeaponIconShowType_ReturnValue;     // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue;          // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m__string_Variable3;                               // 0x0048(0x0010)(ZeroConstructor)
	class FString                                 m__string_Variable4;                               // 0x0058(0x0010)(ZeroConstructor)
	EUiShowType                                   CallFunc_GetFppEquipableItemIconShowType_ReturnValue; // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable3;                                 // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_ByteByte_ReturnValue2;         // 0x006A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6B[0x5];                                       // 0x006B(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x0070(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_GetCurrentCrosshairColorStr_ReturnValue;  // 0x0080(0x0010)(ZeroConstructor)
	TArray<struct FPresetColor>                   CallFunc_GetCrosshairColors_ReturnValue;           // 0x0090(0x0010)(ZeroConstructor, ReferenceParm)
	struct FPresetColor                           CallFunc_Array_Get_Item;                           // 0x00A0(0x0038)()
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable2;                     // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FColorBlindType>                CallFunc_GetColorBlindTypes_ReturnValue;           // 0x00E0(0x0010)(ZeroConstructor, ReferenceParm)
	struct FColorBlindType                        CallFunc_Array_Get_Item2;                          // 0x00F0(0x0020)()
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0114(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_115[0x3];                                      // 0x0115(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x0118(0x0010)(ZeroConstructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0128(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_129[0x3];                                      // 0x0129(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EColorBlindType                               CallFunc_GetCurrentColorBlindKey_ReturnValue;      // 0x0130(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_131[0x3];                                      // 0x0131(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FColorBlindType                        CallFunc_Array_Get_Item3;                          // 0x0138(0x0020)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue2;           // 0x0158(0x0010)(ZeroConstructor)
	bool                                          CallFunc_GetUseCharacterCapture_ReturnValue;       // 0x0168(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_169[0x7];                                      // 0x0169(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m__string_Variable5;                               // 0x0170(0x0010)(ZeroConstructor)
	class FString                                 K2Node_Select2_Default;                            // 0x0180(0x0010)(ZeroConstructor)
	class FString                                 m__string_Variable6;                               // 0x0190(0x0010)(ZeroConstructor)
	class FString                                 K2Node_Select3_Default;                            // 0x01A0(0x0010)(ZeroConstructor)
};
static_assert(alignof(UiSettings_C_InitUiSetting) == 0x000008, "Wrong alignment on UiSettings_C_InitUiSetting");
static_assert(sizeof(UiSettings_C_InitUiSetting) == 0x0001B0, "Wrong size on UiSettings_C_InitUiSetting");
static_assert(offsetof(UiSettings_C_InitUiSetting, m__bool_Variable) == 0x000000, "Member 'UiSettings_C_InitUiSetting::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, m__string_Variable) == 0x000008, "Member 'UiSettings_C_InitUiSetting::m__string_Variable' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, m__string_Variable2) == 0x000018, "Member 'UiSettings_C_InitUiSetting::m__string_Variable2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, m__bool_Variable2) == 0x000028, "Member 'UiSettings_C_InitUiSetting::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, m__int_Array_Index_Variable) == 0x00002C, "Member 'UiSettings_C_InitUiSetting::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, m__int_Loop_Counter_Variable) == 0x000030, "Member 'UiSettings_C_InitUiSetting::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_Add_IntInt_ReturnValue) == 0x000034, "Member 'UiSettings_C_InitUiSetting::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, m__int_Array_Index_Variable2) == 0x000038, "Member 'UiSettings_C_InitUiSetting::m__int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_GetWorldMapZoomSpeedLevel_ReturnValue) == 0x00003C, "Member 'UiSettings_C_InitUiSetting::CallFunc_GetWorldMapZoomSpeedLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000040, "Member 'UiSettings_C_InitUiSetting::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_GetTpsWeaponIconShowType_ReturnValue) == 0x000044, "Member 'UiSettings_C_InitUiSetting::CallFunc_GetTpsWeaponIconShowType_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_EqualEqual_ByteByte_ReturnValue) == 0x000045, "Member 'UiSettings_C_InitUiSetting::CallFunc_EqualEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, m__string_Variable3) == 0x000048, "Member 'UiSettings_C_InitUiSetting::m__string_Variable3' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, m__string_Variable4) == 0x000058, "Member 'UiSettings_C_InitUiSetting::m__string_Variable4' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_GetFppEquipableItemIconShowType_ReturnValue) == 0x000068, "Member 'UiSettings_C_InitUiSetting::CallFunc_GetFppEquipableItemIconShowType_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, m__bool_Variable3) == 0x000069, "Member 'UiSettings_C_InitUiSetting::m__bool_Variable3' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_EqualEqual_ByteByte_ReturnValue2) == 0x00006A, "Member 'UiSettings_C_InitUiSetting::CallFunc_EqualEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, K2Node_Select_Default) == 0x000070, "Member 'UiSettings_C_InitUiSetting::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_GetCurrentCrosshairColorStr_ReturnValue) == 0x000080, "Member 'UiSettings_C_InitUiSetting::CallFunc_GetCurrentCrosshairColorStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_GetCrosshairColors_ReturnValue) == 0x000090, "Member 'UiSettings_C_InitUiSetting::CallFunc_GetCrosshairColors_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_Array_Get_Item) == 0x0000A0, "Member 'UiSettings_C_InitUiSetting::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_Array_Length_ReturnValue) == 0x0000D8, "Member 'UiSettings_C_InitUiSetting::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, m__int_Loop_Counter_Variable2) == 0x0000DC, "Member 'UiSettings_C_InitUiSetting::m__int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_GetColorBlindTypes_ReturnValue) == 0x0000E0, "Member 'UiSettings_C_InitUiSetting::CallFunc_GetColorBlindTypes_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_Array_Get_Item2) == 0x0000F0, "Member 'UiSettings_C_InitUiSetting::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_Array_Length_ReturnValue2) == 0x000110, "Member 'UiSettings_C_InitUiSetting::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_Less_IntInt_ReturnValue) == 0x000114, "Member 'UiSettings_C_InitUiSetting::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_Conv_TextToString_ReturnValue) == 0x000118, "Member 'UiSettings_C_InitUiSetting::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_Less_IntInt_ReturnValue2) == 0x000128, "Member 'UiSettings_C_InitUiSetting::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_Add_IntInt_ReturnValue2) == 0x00012C, "Member 'UiSettings_C_InitUiSetting::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_GetCurrentColorBlindKey_ReturnValue) == 0x000130, "Member 'UiSettings_C_InitUiSetting::CallFunc_GetCurrentColorBlindKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000134, "Member 'UiSettings_C_InitUiSetting::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_Array_Get_Item3) == 0x000138, "Member 'UiSettings_C_InitUiSetting::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_Conv_TextToString_ReturnValue2) == 0x000158, "Member 'UiSettings_C_InitUiSetting::CallFunc_Conv_TextToString_ReturnValue2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, CallFunc_GetUseCharacterCapture_ReturnValue) == 0x000168, "Member 'UiSettings_C_InitUiSetting::CallFunc_GetUseCharacterCapture_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, m__string_Variable5) == 0x000170, "Member 'UiSettings_C_InitUiSetting::m__string_Variable5' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, K2Node_Select2_Default) == 0x000180, "Member 'UiSettings_C_InitUiSetting::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, m__string_Variable6) == 0x000190, "Member 'UiSettings_C_InitUiSetting::m__string_Variable6' has a wrong offset!");
static_assert(offsetof(UiSettings_C_InitUiSetting, K2Node_Select3_Default) == 0x0001A0, "Member 'UiSettings_C_InitUiSetting::K2Node_Select3_Default' has a wrong offset!");

// Function UiSettings.UiSettings_C.SetToDefault
// 0x00D0 (0x00D0 - 0x0000)
struct UiSettings_C_SetToDefault final
{
public:
	class FString                                 m__string_Variable;                                // 0x0000(0x0010)(ZeroConstructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 m__string_Variable2;                               // 0x0018(0x0010)(ZeroConstructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue2;                // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FPresetColor>                   CallFunc_GetCrosshairColors_ReturnValue;           // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<struct FColorBlindType>                CallFunc_GetColorBlindTypes_ReturnValue;           // 0x0040(0x0010)(ZeroConstructor, ReferenceParm)
	struct FPresetColor                           CallFunc_Array_Get_Item;                           // 0x0050(0x0038)()
	struct FColorBlindType                        CallFunc_Array_Get_Item2;                          // 0x0088(0x0020)()
	class FString                                 CallFunc_Conv_TextToString_ReturnValue;            // 0x00A8(0x0010)(ZeroConstructor)
	bool                                          m__bool_Variable;                                  // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetUseCharacterCapture_ReturnValue;       // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetIsEnabled_ReturnValue3;                // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x5];                                       // 0x00BB(0x0005)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 K2Node_Select_Default;                             // 0x00C0(0x0010)(ZeroConstructor)
};
static_assert(alignof(UiSettings_C_SetToDefault) == 0x000008, "Wrong alignment on UiSettings_C_SetToDefault");
static_assert(sizeof(UiSettings_C_SetToDefault) == 0x0000D0, "Wrong size on UiSettings_C_SetToDefault");
static_assert(offsetof(UiSettings_C_SetToDefault, m__string_Variable) == 0x000000, "Member 'UiSettings_C_SetToDefault::m__string_Variable' has a wrong offset!");
static_assert(offsetof(UiSettings_C_SetToDefault, CallFunc_GetIsEnabled_ReturnValue) == 0x000010, "Member 'UiSettings_C_SetToDefault::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_SetToDefault, m__string_Variable2) == 0x000018, "Member 'UiSettings_C_SetToDefault::m__string_Variable2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_SetToDefault, CallFunc_GetIsEnabled_ReturnValue2) == 0x000028, "Member 'UiSettings_C_SetToDefault::CallFunc_GetIsEnabled_ReturnValue2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_SetToDefault, CallFunc_GetCrosshairColors_ReturnValue) == 0x000030, "Member 'UiSettings_C_SetToDefault::CallFunc_GetCrosshairColors_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_SetToDefault, CallFunc_GetColorBlindTypes_ReturnValue) == 0x000040, "Member 'UiSettings_C_SetToDefault::CallFunc_GetColorBlindTypes_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_SetToDefault, CallFunc_Array_Get_Item) == 0x000050, "Member 'UiSettings_C_SetToDefault::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(UiSettings_C_SetToDefault, CallFunc_Array_Get_Item2) == 0x000088, "Member 'UiSettings_C_SetToDefault::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_SetToDefault, CallFunc_Conv_TextToString_ReturnValue) == 0x0000A8, "Member 'UiSettings_C_SetToDefault::CallFunc_Conv_TextToString_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_SetToDefault, m__bool_Variable) == 0x0000B8, "Member 'UiSettings_C_SetToDefault::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(UiSettings_C_SetToDefault, CallFunc_GetUseCharacterCapture_ReturnValue) == 0x0000B9, "Member 'UiSettings_C_SetToDefault::CallFunc_GetUseCharacterCapture_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_SetToDefault, CallFunc_GetIsEnabled_ReturnValue3) == 0x0000BA, "Member 'UiSettings_C_SetToDefault::CallFunc_GetIsEnabled_ReturnValue3' has a wrong offset!");
static_assert(offsetof(UiSettings_C_SetToDefault, K2Node_Select_Default) == 0x0000C0, "Member 'UiSettings_C_SetToDefault::K2Node_Select_Default' has a wrong offset!");

// Function UiSettings.UiSettings_C.ApplyByCurrentSelectedSettings
// 0x0060 (0x0060 - 0x0000)
struct UiSettings_C_ApplyByCurrentSelectedSettings final
{
public:
	float                                         CallFunc_GetValueByRange_Value;                    // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSelectedOption_SelectedOption;         // 0x0008(0x0010)(ZeroConstructor)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSelectedOption_SelectedOption2;        // 0x0020(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_GetSelectedOption_SelectedOption3;        // 0x0030(0x0010)(ZeroConstructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue2;           // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSelectUseCharacterCapture_UseCharacterCapture; // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_42[0x6];                                       // 0x0042(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSelectedOption_SelectedOption4;        // 0x0048(0x0010)(ZeroConstructor)
	int32                                         CallFunc_FindOptionIndex_ReturnValue;              // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UiSettings_C_ApplyByCurrentSelectedSettings) == 0x000008, "Wrong alignment on UiSettings_C_ApplyByCurrentSelectedSettings");
static_assert(sizeof(UiSettings_C_ApplyByCurrentSelectedSettings) == 0x000060, "Wrong size on UiSettings_C_ApplyByCurrentSelectedSettings");
static_assert(offsetof(UiSettings_C_ApplyByCurrentSelectedSettings, CallFunc_GetValueByRange_Value) == 0x000000, "Member 'UiSettings_C_ApplyByCurrentSelectedSettings::CallFunc_GetValueByRange_Value' has a wrong offset!");
static_assert(offsetof(UiSettings_C_ApplyByCurrentSelectedSettings, CallFunc_GetSelectedOption_SelectedOption) == 0x000008, "Member 'UiSettings_C_ApplyByCurrentSelectedSettings::CallFunc_GetSelectedOption_SelectedOption' has a wrong offset!");
static_assert(offsetof(UiSettings_C_ApplyByCurrentSelectedSettings, CallFunc_FTrunc_ReturnValue) == 0x000018, "Member 'UiSettings_C_ApplyByCurrentSelectedSettings::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_ApplyByCurrentSelectedSettings, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x00001C, "Member 'UiSettings_C_ApplyByCurrentSelectedSettings::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_ApplyByCurrentSelectedSettings, CallFunc_GetSelectedOption_SelectedOption2) == 0x000020, "Member 'UiSettings_C_ApplyByCurrentSelectedSettings::CallFunc_GetSelectedOption_SelectedOption2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_ApplyByCurrentSelectedSettings, CallFunc_GetSelectedOption_SelectedOption3) == 0x000030, "Member 'UiSettings_C_ApplyByCurrentSelectedSettings::CallFunc_GetSelectedOption_SelectedOption3' has a wrong offset!");
static_assert(offsetof(UiSettings_C_ApplyByCurrentSelectedSettings, CallFunc_EqualEqual_StrStr_ReturnValue2) == 0x000040, "Member 'UiSettings_C_ApplyByCurrentSelectedSettings::CallFunc_EqualEqual_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_ApplyByCurrentSelectedSettings, CallFunc_GetSelectUseCharacterCapture_UseCharacterCapture) == 0x000041, "Member 'UiSettings_C_ApplyByCurrentSelectedSettings::CallFunc_GetSelectUseCharacterCapture_UseCharacterCapture' has a wrong offset!");
static_assert(offsetof(UiSettings_C_ApplyByCurrentSelectedSettings, CallFunc_GetSelectedOption_SelectedOption4) == 0x000048, "Member 'UiSettings_C_ApplyByCurrentSelectedSettings::CallFunc_GetSelectedOption_SelectedOption4' has a wrong offset!");
static_assert(offsetof(UiSettings_C_ApplyByCurrentSelectedSettings, CallFunc_FindOptionIndex_ReturnValue) == 0x000058, "Member 'UiSettings_C_ApplyByCurrentSelectedSettings::CallFunc_FindOptionIndex_ReturnValue' has a wrong offset!");

// Function UiSettings.UiSettings_C.IsEnableApply
// 0x0002 (0x0002 - 0x0000)
struct UiSettings_C_IsEnableApply final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChanged_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UiSettings_C_IsEnableApply) == 0x000001, "Wrong alignment on UiSettings_C_IsEnableApply");
static_assert(sizeof(UiSettings_C_IsEnableApply) == 0x000002, "Wrong size on UiSettings_C_IsEnableApply");
static_assert(offsetof(UiSettings_C_IsEnableApply, ReturnValue) == 0x000000, "Member 'UiSettings_C_IsEnableApply::ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsEnableApply, CallFunc_IsChanged_ReturnValue) == 0x000001, "Member 'UiSettings_C_IsEnableApply::CallFunc_IsChanged_ReturnValue' has a wrong offset!");

// Function UiSettings.UiSettings_C.IsChanged
// 0x0098 (0x0098 - 0x0000)
struct UiSettings_C_IsChanged final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUiShowType                                   m__byte_Variable;                                  // 0x0002(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUiShowType                                   m__byte_Variable2;                                 // 0x0003(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable2;                                 // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUiShowType                                   m__byte_Variable3;                                 // 0x0005(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUiShowType                                   m__byte_Variable4;                                 // 0x0006(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7[0x1];                                        // 0x0007(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetWorldMapZoomSpeedLevel_ReturnValue;    // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetValueByRange_Value;                    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUiShowType                                   CallFunc_GetTpsWeaponIconShowType_ReturnValue;     // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x3];                                       // 0x0011(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUiShowType                                   CallFunc_GetFppEquipableItemIconShowType_ReturnValue; // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSelectedOption_SelectedOption;         // 0x0020(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_GetSelectedOption_SelectedOption2;        // 0x0030(0x0010)(ZeroConstructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue2;           // 0x0041(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUiShowType                                   K2Node_Select_Default;                             // 0x0042(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	EUiShowType                                   K2Node_Select2_Default;                            // 0x0043(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue;            // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ByteByte_ReturnValue2;           // 0x0045(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_46[0x2];                                       // 0x0046(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentCrosshairColorStr_ReturnValue;  // 0x0048(0x0010)(ZeroConstructor)
	EColorBlindType                               CallFunc_GetCurrentColorBlindKey_ReturnValue;      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x7];                                       // 0x0059(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSelectedOption_SelectedOption3;        // 0x0060(0x0010)(ZeroConstructor)
	int32                                         CallFunc_Conv_ByteToInt_ReturnValue;               // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0074(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetSelectUseCharacterCapture_UseCharacterCapture; // 0x0075(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_76[0x2];                                       // 0x0076(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSelectedOption_SelectedOption4;        // 0x0078(0x0010)(ZeroConstructor)
	bool                                          CallFunc_GetUseCharacterCapture_ReturnValue;       // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x3];                                       // 0x0089(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_FindOptionIndex_ReturnValue;              // 0x008C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_BoolBool_ReturnValue;            // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue2;             // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0092(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue2;                   // 0x0093(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue3;                   // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue4;                   // 0x0095(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue5;                   // 0x0096(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UiSettings_C_IsChanged) == 0x000008, "Wrong alignment on UiSettings_C_IsChanged");
static_assert(sizeof(UiSettings_C_IsChanged) == 0x000098, "Wrong size on UiSettings_C_IsChanged");
static_assert(offsetof(UiSettings_C_IsChanged, ReturnValue) == 0x000000, "Member 'UiSettings_C_IsChanged::ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, m__bool_Variable) == 0x000001, "Member 'UiSettings_C_IsChanged::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, m__byte_Variable) == 0x000002, "Member 'UiSettings_C_IsChanged::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, m__byte_Variable2) == 0x000003, "Member 'UiSettings_C_IsChanged::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, m__bool_Variable2) == 0x000004, "Member 'UiSettings_C_IsChanged::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, m__byte_Variable3) == 0x000005, "Member 'UiSettings_C_IsChanged::m__byte_Variable3' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, m__byte_Variable4) == 0x000006, "Member 'UiSettings_C_IsChanged::m__byte_Variable4' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_GetWorldMapZoomSpeedLevel_ReturnValue) == 0x000008, "Member 'UiSettings_C_IsChanged::CallFunc_GetWorldMapZoomSpeedLevel_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_GetValueByRange_Value) == 0x00000C, "Member 'UiSettings_C_IsChanged::CallFunc_GetValueByRange_Value' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_GetTpsWeaponIconShowType_ReturnValue) == 0x000010, "Member 'UiSettings_C_IsChanged::CallFunc_GetTpsWeaponIconShowType_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_FFloor_ReturnValue) == 0x000014, "Member 'UiSettings_C_IsChanged::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_GetFppEquipableItemIconShowType_ReturnValue) == 0x000018, "Member 'UiSettings_C_IsChanged::CallFunc_GetFppEquipableItemIconShowType_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000019, "Member 'UiSettings_C_IsChanged::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_GetSelectedOption_SelectedOption) == 0x000020, "Member 'UiSettings_C_IsChanged::CallFunc_GetSelectedOption_SelectedOption' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_GetSelectedOption_SelectedOption2) == 0x000030, "Member 'UiSettings_C_IsChanged::CallFunc_GetSelectedOption_SelectedOption2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000040, "Member 'UiSettings_C_IsChanged::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_EqualEqual_StrStr_ReturnValue2) == 0x000041, "Member 'UiSettings_C_IsChanged::CallFunc_EqualEqual_StrStr_ReturnValue2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, K2Node_Select_Default) == 0x000042, "Member 'UiSettings_C_IsChanged::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, K2Node_Select2_Default) == 0x000043, "Member 'UiSettings_C_IsChanged::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_NotEqual_ByteByte_ReturnValue) == 0x000044, "Member 'UiSettings_C_IsChanged::CallFunc_NotEqual_ByteByte_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_NotEqual_ByteByte_ReturnValue2) == 0x000045, "Member 'UiSettings_C_IsChanged::CallFunc_NotEqual_ByteByte_ReturnValue2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_GetCurrentCrosshairColorStr_ReturnValue) == 0x000048, "Member 'UiSettings_C_IsChanged::CallFunc_GetCurrentCrosshairColorStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_GetCurrentColorBlindKey_ReturnValue) == 0x000058, "Member 'UiSettings_C_IsChanged::CallFunc_GetCurrentColorBlindKey_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_GetSelectedOption_SelectedOption3) == 0x000060, "Member 'UiSettings_C_IsChanged::CallFunc_GetSelectedOption_SelectedOption3' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_Conv_ByteToInt_ReturnValue) == 0x000070, "Member 'UiSettings_C_IsChanged::CallFunc_Conv_ByteToInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000074, "Member 'UiSettings_C_IsChanged::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_GetSelectUseCharacterCapture_UseCharacterCapture) == 0x000075, "Member 'UiSettings_C_IsChanged::CallFunc_GetSelectUseCharacterCapture_UseCharacterCapture' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_GetSelectedOption_SelectedOption4) == 0x000078, "Member 'UiSettings_C_IsChanged::CallFunc_GetSelectedOption_SelectedOption4' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_GetUseCharacterCapture_ReturnValue) == 0x000088, "Member 'UiSettings_C_IsChanged::CallFunc_GetUseCharacterCapture_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_FindOptionIndex_ReturnValue) == 0x00008C, "Member 'UiSettings_C_IsChanged::CallFunc_FindOptionIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_NotEqual_BoolBool_ReturnValue) == 0x000090, "Member 'UiSettings_C_IsChanged::CallFunc_NotEqual_BoolBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_NotEqual_IntInt_ReturnValue2) == 0x000091, "Member 'UiSettings_C_IsChanged::CallFunc_NotEqual_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_BooleanOR_ReturnValue) == 0x000092, "Member 'UiSettings_C_IsChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_BooleanOR_ReturnValue2) == 0x000093, "Member 'UiSettings_C_IsChanged::CallFunc_BooleanOR_ReturnValue2' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_BooleanOR_ReturnValue3) == 0x000094, "Member 'UiSettings_C_IsChanged::CallFunc_BooleanOR_ReturnValue3' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_BooleanOR_ReturnValue4) == 0x000095, "Member 'UiSettings_C_IsChanged::CallFunc_BooleanOR_ReturnValue4' has a wrong offset!");
static_assert(offsetof(UiSettings_C_IsChanged, CallFunc_BooleanOR_ReturnValue5) == 0x000096, "Member 'UiSettings_C_IsChanged::CallFunc_BooleanOR_ReturnValue5' has a wrong offset!");

// Function UiSettings.UiSettings_C.GetSelectUseCharacterCapture
// 0x0020 (0x0020 - 0x0000)
struct UiSettings_C_GetSelectUseCharacterCapture final
{
public:
	bool                                          UseCharacterCapture;                               // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetSelectedOption_SelectedOption;         // 0x0008(0x0010)(ZeroConstructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(UiSettings_C_GetSelectUseCharacterCapture) == 0x000008, "Wrong alignment on UiSettings_C_GetSelectUseCharacterCapture");
static_assert(sizeof(UiSettings_C_GetSelectUseCharacterCapture) == 0x000020, "Wrong size on UiSettings_C_GetSelectUseCharacterCapture");
static_assert(offsetof(UiSettings_C_GetSelectUseCharacterCapture, UseCharacterCapture) == 0x000000, "Member 'UiSettings_C_GetSelectUseCharacterCapture::UseCharacterCapture' has a wrong offset!");
static_assert(offsetof(UiSettings_C_GetSelectUseCharacterCapture, CallFunc_GetSelectedOption_SelectedOption) == 0x000008, "Member 'UiSettings_C_GetSelectUseCharacterCapture::CallFunc_GetSelectedOption_SelectedOption' has a wrong offset!");
static_assert(offsetof(UiSettings_C_GetSelectUseCharacterCapture, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000018, "Member 'UiSettings_C_GetSelectUseCharacterCapture::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

}

