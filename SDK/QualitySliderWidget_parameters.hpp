#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QualitySliderWidget

#include "Basic.hpp"


namespace SDK::Params
{

// Function QualitySliderWidget.QualitySliderWidget_C.ExecuteUbergraph_QualitySliderWidget
// 0x001C (0x001C - 0x0000)
struct QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetValueByRange_Value;                    // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Subtract_FloatFloat_ReturnValue;          // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetValueByRange_Value2;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MapRangeClamped_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MapRangeClamped_ReturnValue2;             // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget) == 0x000004, "Wrong alignment on QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget");
static_assert(sizeof(QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget) == 0x00001C, "Wrong size on QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget");
static_assert(offsetof(QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget, EntryPoint) == 0x000000, "Member 'QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget, CallFunc_GetValueByRange_Value) == 0x000004, "Member 'QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget::CallFunc_GetValueByRange_Value' has a wrong offset!");
static_assert(offsetof(QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget, CallFunc_Subtract_FloatFloat_ReturnValue) == 0x000008, "Member 'QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget::CallFunc_Subtract_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget, CallFunc_GetValueByRange_Value2) == 0x00000C, "Member 'QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget::CallFunc_GetValueByRange_Value2' has a wrong offset!");
static_assert(offsetof(QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget, CallFunc_MapRangeClamped_ReturnValue) == 0x000010, "Member 'QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget::CallFunc_MapRangeClamped_ReturnValue' has a wrong offset!");
static_assert(offsetof(QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget, CallFunc_Add_FloatFloat_ReturnValue) == 0x000014, "Member 'QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget, CallFunc_MapRangeClamped_ReturnValue2) == 0x000018, "Member 'QualitySliderWidget_C_ExecuteUbergraph_QualitySliderWidget::CallFunc_MapRangeClamped_ReturnValue2' has a wrong offset!");

// Function QualitySliderWidget.QualitySliderWidget_C.GetQualityName
// 0x0018 (0x0018 - 0x0000)
struct QualitySliderWidget_C_GetQualityName final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
};
static_assert(alignof(QualitySliderWidget_C_GetQualityName) == 0x000008, "Wrong alignment on QualitySliderWidget_C_GetQualityName");
static_assert(sizeof(QualitySliderWidget_C_GetQualityName) == 0x000018, "Wrong size on QualitySliderWidget_C_GetQualityName");
static_assert(offsetof(QualitySliderWidget_C_GetQualityName, ReturnValue) == 0x000000, "Member 'QualitySliderWidget_C_GetQualityName::ReturnValue' has a wrong offset!");

// Function QualitySliderWidget.QualitySliderWidget_C.SetValue
// 0x0008 (0x0008 - 0x0000)
struct QualitySliderWidget_C_SetValue final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QualitySliderWidget_C_SetValue) == 0x000004, "Wrong alignment on QualitySliderWidget_C_SetValue");
static_assert(sizeof(QualitySliderWidget_C_SetValue) == 0x000008, "Wrong size on QualitySliderWidget_C_SetValue");
static_assert(offsetof(QualitySliderWidget_C_SetValue, Value) == 0x000000, "Member 'QualitySliderWidget_C_SetValue::Value' has a wrong offset!");
static_assert(offsetof(QualitySliderWidget_C_SetValue, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000004, "Member 'QualitySliderWidget_C_SetValue::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");

// Function QualitySliderWidget.QualitySliderWidget_C.GetValueText
// 0x0038 (0x0038 - 0x0000)
struct QualitySliderWidget_C_GetValueText final
{
public:
	class FText                                   ReturnValue;                                       // 0x0000(0x0018)(Parm, OutParm, ReturnParm)
	float                                         CallFunc_GetValueByRange_Value;                    // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_FFloor_ReturnValue;                       // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0020(0x0018)()
};
static_assert(alignof(QualitySliderWidget_C_GetValueText) == 0x000008, "Wrong alignment on QualitySliderWidget_C_GetValueText");
static_assert(sizeof(QualitySliderWidget_C_GetValueText) == 0x000038, "Wrong size on QualitySliderWidget_C_GetValueText");
static_assert(offsetof(QualitySliderWidget_C_GetValueText, ReturnValue) == 0x000000, "Member 'QualitySliderWidget_C_GetValueText::ReturnValue' has a wrong offset!");
static_assert(offsetof(QualitySliderWidget_C_GetValueText, CallFunc_GetValueByRange_Value) == 0x000018, "Member 'QualitySliderWidget_C_GetValueText::CallFunc_GetValueByRange_Value' has a wrong offset!");
static_assert(offsetof(QualitySliderWidget_C_GetValueText, CallFunc_FFloor_ReturnValue) == 0x00001C, "Member 'QualitySliderWidget_C_GetValueText::CallFunc_FFloor_ReturnValue' has a wrong offset!");
static_assert(offsetof(QualitySliderWidget_C_GetValueText, CallFunc_Conv_IntToText_ReturnValue) == 0x000020, "Member 'QualitySliderWidget_C_GetValueText::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function QualitySliderWidget.QualitySliderWidget_C.GetValueByRange
// 0x000C (0x000C - 0x0000)
struct QualitySliderWidget_C_GetValueByRange final
{
public:
	float                                         Value;                                             // 0x0000(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetValue_ReturnValue;                     // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_MapRangeUnclamped_ReturnValue;            // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(QualitySliderWidget_C_GetValueByRange) == 0x000004, "Wrong alignment on QualitySliderWidget_C_GetValueByRange");
static_assert(sizeof(QualitySliderWidget_C_GetValueByRange) == 0x00000C, "Wrong size on QualitySliderWidget_C_GetValueByRange");
static_assert(offsetof(QualitySliderWidget_C_GetValueByRange, Value) == 0x000000, "Member 'QualitySliderWidget_C_GetValueByRange::Value' has a wrong offset!");
static_assert(offsetof(QualitySliderWidget_C_GetValueByRange, CallFunc_GetValue_ReturnValue) == 0x000004, "Member 'QualitySliderWidget_C_GetValueByRange::CallFunc_GetValue_ReturnValue' has a wrong offset!");
static_assert(offsetof(QualitySliderWidget_C_GetValueByRange, CallFunc_MapRangeUnclamped_ReturnValue) == 0x000008, "Member 'QualitySliderWidget_C_GetValueByRange::CallFunc_MapRangeUnclamped_ReturnValue' has a wrong offset!");

}

