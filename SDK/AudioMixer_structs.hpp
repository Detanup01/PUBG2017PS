#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: AudioMixer

#include "Basic.hpp"


namespace SDK
{

// Enum AudioMixer.ESourceEffectFilter
// NumValues: 0x0006
enum class ESourceEffectFilter : uint8
{
	LowPass                                  = 0,
	HighPass                                 = 1,
	BandPass                                 = 2,
	LowShelf                                 = 3,
	HighShelf                                = 4,
	ESourceEffectFilter_MAX                  = 5,
};

// ScriptStruct AudioMixer.SubmixEffectEQSettings
// 0x0001 (0x0001 - 0x0000)
struct FSubmixEffectEQSettings final
{
public:
	uint8                                         Pad_0[0x1];                                        // 0x0000(0x0001)(Fixing Struct Size After Last Property [ Dumper-7 ])
};
static_assert(alignof(FSubmixEffectEQSettings) == 0x000001, "Wrong alignment on FSubmixEffectEQSettings");
static_assert(sizeof(FSubmixEffectEQSettings) == 0x000001, "Wrong size on FSubmixEffectEQSettings");

// ScriptStruct AudioMixer.SoundEffectLowPassFilterSettings
// 0x0008 (0x0008 - 0x0000)
struct FSoundEffectLowPassFilterSettings final
{
public:
	float                                         CutoffFrequency;                                   // 0x0000(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Q;                                                 // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSoundEffectLowPassFilterSettings) == 0x000004, "Wrong alignment on FSoundEffectLowPassFilterSettings");
static_assert(sizeof(FSoundEffectLowPassFilterSettings) == 0x000008, "Wrong size on FSoundEffectLowPassFilterSettings");
static_assert(offsetof(FSoundEffectLowPassFilterSettings, CutoffFrequency) == 0x000000, "Member 'FSoundEffectLowPassFilterSettings::CutoffFrequency' has a wrong offset!");
static_assert(offsetof(FSoundEffectLowPassFilterSettings, Q) == 0x000004, "Member 'FSoundEffectLowPassFilterSettings::Q' has a wrong offset!");

// ScriptStruct AudioMixer.SourceEffectFilterSettings
// 0x0010 (0x0010 - 0x0000)
struct FSourceEffectFilterSettings final
{
public:
	ESourceEffectFilter                           FilterType;                                        // 0x0000(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         GainDb;                                            // 0x0004(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         CutoffFrequency;                                   // 0x0008(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
	float                                         Q;                                                 // 0x000C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor, HasGetValueTypeHash, NativeAccessSpecifierPublic)
};
static_assert(alignof(FSourceEffectFilterSettings) == 0x000004, "Wrong alignment on FSourceEffectFilterSettings");
static_assert(sizeof(FSourceEffectFilterSettings) == 0x000010, "Wrong size on FSourceEffectFilterSettings");
static_assert(offsetof(FSourceEffectFilterSettings, FilterType) == 0x000000, "Member 'FSourceEffectFilterSettings::FilterType' has a wrong offset!");
static_assert(offsetof(FSourceEffectFilterSettings, GainDb) == 0x000004, "Member 'FSourceEffectFilterSettings::GainDb' has a wrong offset!");
static_assert(offsetof(FSourceEffectFilterSettings, CutoffFrequency) == 0x000008, "Member 'FSourceEffectFilterSettings::CutoffFrequency' has a wrong offset!");
static_assert(offsetof(FSourceEffectFilterSettings, Q) == 0x00000C, "Member 'FSourceEffectFilterSettings::Q' has a wrong offset!");

}

