#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GeneralSettingWidget

#include "Basic.hpp"

#include "TslGame_structs.hpp"


namespace SDK::Params
{

// Function GeneralSettingWidget.GeneralSettingWidget_C.ExecuteUbergraph_GeneralSettingWidget
// 0x0028 (0x0028 - 0x0000)
struct GeneralSettingWidget_C_ExecuteUbergraph_GeneralSettingWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetLanguageCultureName_CultureName;       // 0x0008(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_GetSelectedOption_SelectedOption;         // 0x0018(0x0010)(ZeroConstructor)
};
static_assert(alignof(GeneralSettingWidget_C_ExecuteUbergraph_GeneralSettingWidget) == 0x000008, "Wrong alignment on GeneralSettingWidget_C_ExecuteUbergraph_GeneralSettingWidget");
static_assert(sizeof(GeneralSettingWidget_C_ExecuteUbergraph_GeneralSettingWidget) == 0x000028, "Wrong size on GeneralSettingWidget_C_ExecuteUbergraph_GeneralSettingWidget");
static_assert(offsetof(GeneralSettingWidget_C_ExecuteUbergraph_GeneralSettingWidget, EntryPoint) == 0x000000, "Member 'GeneralSettingWidget_C_ExecuteUbergraph_GeneralSettingWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ExecuteUbergraph_GeneralSettingWidget, CallFunc_GetLanguageCultureName_CultureName) == 0x000008, "Member 'GeneralSettingWidget_C_ExecuteUbergraph_GeneralSettingWidget::CallFunc_GetLanguageCultureName_CultureName' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ExecuteUbergraph_GeneralSettingWidget, CallFunc_GetSelectedOption_SelectedOption) == 0x000018, "Member 'GeneralSettingWidget_C_ExecuteUbergraph_GeneralSettingWidget::CallFunc_GetSelectedOption_SelectedOption' has a wrong offset!");

// Function GeneralSettingWidget.GeneralSettingWidget_C.InitializeResolutionIWidget
// 0x0118 (0x0118 - 0x0000)
struct GeneralSettingWidget_C_InitializeResolutionIWidget final
{
public:
	bool                                          bConstruct;                                        // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<class FText>                           CallFunc_GetAvailableProviderDisplayNames_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_GetIsEnabled_ReturnValue;                 // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0019(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1A[0x6];                                       // 0x001A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentProvider_ReturnValue;           // 0x0020(0x0010)(ZeroConstructor)
	TArray<class FString>                         CallFunc_GetAvailableProviderNames_ReturnValue;    // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Array_Index_Variable2;                      // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Array_Get_Item;                           // 0x0050(0x0018)()
	class FString                                 CallFunc_Array_Get_Item2;                          // 0x0068(0x0010)(ZeroConstructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentCultureName_ReturnValue;        // 0x0080(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_GetNativeLanguage_ReturnValue;            // 0x0090(0x0010)(ZeroConstructor)
	int32                                         m__int_Loop_Counter_Variable2;                     // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00A4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A5[0x3];                                       // 0x00A5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_AC[0x4];                                       // 0x00AC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_CultureNames_ReturnValue;                 // 0x00B0(0x0010)(ZeroConstructor, ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item3;                          // 0x00C0(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_GetNativeLanguage_ReturnValue2;           // 0x00D0(0x0010)(ZeroConstructor)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x00E0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E4[0x4];                                       // 0x00E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_StringToText_ReturnValue;            // 0x00E8(0x0018)()
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0100(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_101[0x7];                                      // 0x0101(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CurrentSelectedCultureName;                        // 0x0108(0x0010)(Edit, ZeroConstructor)
};
static_assert(alignof(GeneralSettingWidget_C_InitializeResolutionIWidget) == 0x000008, "Wrong alignment on GeneralSettingWidget_C_InitializeResolutionIWidget");
static_assert(sizeof(GeneralSettingWidget_C_InitializeResolutionIWidget) == 0x000118, "Wrong size on GeneralSettingWidget_C_InitializeResolutionIWidget");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, bConstruct) == 0x000000, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::bConstruct' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, m__int_Array_Index_Variable) == 0x000004, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_GetAvailableProviderDisplayNames_ReturnValue) == 0x000008, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_GetAvailableProviderDisplayNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_GetIsEnabled_ReturnValue) == 0x000018, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_GetIsEnabled_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_BooleanOR_ReturnValue) == 0x000019, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_GetCurrentProvider_ReturnValue) == 0x000020, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_GetCurrentProvider_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_GetAvailableProviderNames_ReturnValue) == 0x000030, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_GetAvailableProviderNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, m__int_Loop_Counter_Variable) == 0x000044, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, m__int_Array_Index_Variable2) == 0x000048, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::m__int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_Array_Get_Item) == 0x000050, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_Array_Get_Item2) == 0x000068, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_Add_IntInt_ReturnValue) == 0x000078, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_GetCurrentCultureName_ReturnValue) == 0x000080, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_GetCurrentCultureName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_GetNativeLanguage_ReturnValue) == 0x000090, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_GetNativeLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, m__int_Loop_Counter_Variable2) == 0x0000A0, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::m__int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_Less_IntInt_ReturnValue) == 0x0000A4, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_Add_IntInt_ReturnValue2) == 0x0000A8, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_CultureNames_ReturnValue) == 0x0000B0, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_CultureNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_Array_Get_Item3) == 0x0000C0, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_GetNativeLanguage_ReturnValue2) == 0x0000D0, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_GetNativeLanguage_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_Array_Length_ReturnValue2) == 0x0000E0, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_Conv_StringToText_ReturnValue) == 0x0000E8, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_Conv_StringToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CallFunc_Less_IntInt_ReturnValue2) == 0x000100, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_InitializeResolutionIWidget, CurrentSelectedCultureName) == 0x000108, "Member 'GeneralSettingWidget_C_InitializeResolutionIWidget::CurrentSelectedCultureName' has a wrong offset!");

// Function GeneralSettingWidget.GeneralSettingWidget_C.GetResolutionEnabled
// 0x0002 (0x0002 - 0x0000)
struct GeneralSettingWidget_C_GetResolutionEnabled final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GeneralSettingWidget_C_GetResolutionEnabled) == 0x000001, "Wrong alignment on GeneralSettingWidget_C_GetResolutionEnabled");
static_assert(sizeof(GeneralSettingWidget_C_GetResolutionEnabled) == 0x000002, "Wrong size on GeneralSettingWidget_C_GetResolutionEnabled");
static_assert(offsetof(GeneralSettingWidget_C_GetResolutionEnabled, ReturnValue) == 0x000000, "Member 'GeneralSettingWidget_C_GetResolutionEnabled::ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_GetResolutionEnabled, CallFunc_Not_PreBool_ReturnValue) == 0x000001, "Member 'GeneralSettingWidget_C_GetResolutionEnabled::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");

// Function GeneralSettingWidget.GeneralSettingWidget_C.SettingDefault
// 0x0028 (0x0028 - 0x0000)
struct GeneralSettingWidget_C_SettingDefault final
{
public:
	bool                                          CallFunc_IsEnable_VideoCapture_ReturnValue;        // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetDefaultCultureName_ReturnValue;        // 0x0008(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_GetNativeLanguage_ReturnValue;            // 0x0018(0x0010)(ZeroConstructor)
};
static_assert(alignof(GeneralSettingWidget_C_SettingDefault) == 0x000008, "Wrong alignment on GeneralSettingWidget_C_SettingDefault");
static_assert(sizeof(GeneralSettingWidget_C_SettingDefault) == 0x000028, "Wrong size on GeneralSettingWidget_C_SettingDefault");
static_assert(offsetof(GeneralSettingWidget_C_SettingDefault, CallFunc_IsEnable_VideoCapture_ReturnValue) == 0x000000, "Member 'GeneralSettingWidget_C_SettingDefault::CallFunc_IsEnable_VideoCapture_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_SettingDefault, CallFunc_GetDefaultCultureName_ReturnValue) == 0x000008, "Member 'GeneralSettingWidget_C_SettingDefault::CallFunc_GetDefaultCultureName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_SettingDefault, CallFunc_GetNativeLanguage_ReturnValue) == 0x000018, "Member 'GeneralSettingWidget_C_SettingDefault::CallFunc_GetNativeLanguage_ReturnValue' has a wrong offset!");

// Function GeneralSettingWidget.GeneralSettingWidget_C.ApplyMiniMapType
// 0x0128 (0x0128 - 0x0000)
struct GeneralSettingWidget_C_ApplyMiniMapType final
{
public:
	int32                                         m__int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetSelectMiniMapTypeIndex_ReturnValue;    // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslHUD*                                CallFunc_GetTslHUD_ReturnValue;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UUserWidget*                            CallFunc_GetMainUMGHud_ReturnValue;                // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UHudMain_C*                             K2Node_DynamicCast_AsHud_Main;                     // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslHUD*                                CallFunc_GetTslHUD_ReturnValue2;                   // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UClass*                                 CallFunc_GetMiniMapType_MiniMapype;                // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FTslWidgetConfig                       K2Node_MakeStruct_TslWidgetConfig;                 // 0x0040(0x0010)()
	class ATslHUD*                                CallFunc_GetTslHUD_ReturnValue3;                   // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslHUD*                                CallFunc_GetTslHUD_ReturnValue4;                   // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslHUD*                                CallFunc_GetTslHUD_ReturnValue5;                   // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FUiType>                        CallFunc_GetMiniMapTypes_ReturnValue;              // 0x0068(0x0010)(ZeroConstructor, ReferenceParm)
	class FString                                 CallFunc_GetSelectedOption_SelectedOption;         // 0x0078(0x0010)(ZeroConstructor)
	struct FUiType                                CallFunc_Array_Get_Item;                           // 0x0088(0x0028)()
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x00B1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B2[0x6];                                       // 0x00B2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class UUserWidget*                            CallFunc_GetWidget_ReturnValue;                    // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C6[0x2];                                       // 0x00C6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetSelectMiniMapTypeIndex_ReturnValue2;   // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CC[0x4];                                       // 0x00CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FUiType>                        CallFunc_GetMiniMapTypes_ReturnValue2;             // 0x00D0(0x0010)(ZeroConstructor, ReferenceParm)
	class ATslHUD*                                CallFunc_GetTslHUD_ReturnValue6;                   // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FUiType                                CallFunc_Array_Get_Item2;                          // 0x00E8(0x0028)()
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x7];                                      // 0x0111(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 OldMiniMapKey;                                     // 0x0118(0x0010)(Edit, ZeroConstructor)
};
static_assert(alignof(GeneralSettingWidget_C_ApplyMiniMapType) == 0x000008, "Wrong alignment on GeneralSettingWidget_C_ApplyMiniMapType");
static_assert(sizeof(GeneralSettingWidget_C_ApplyMiniMapType) == 0x000128, "Wrong size on GeneralSettingWidget_C_ApplyMiniMapType");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, m__int_Array_Index_Variable) == 0x000000, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, m__int_Loop_Counter_Variable) == 0x000004, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_GetSelectMiniMapTypeIndex_ReturnValue) == 0x00000C, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_GetSelectMiniMapTypeIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_GetTslHUD_ReturnValue) == 0x000010, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_GetTslHUD_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_GetMainUMGHud_ReturnValue) == 0x000018, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_GetMainUMGHud_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, K2Node_DynamicCast_AsHud_Main) == 0x000020, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::K2Node_DynamicCast_AsHud_Main' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_GetTslHUD_ReturnValue2) == 0x000030, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_GetTslHUD_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_GetMiniMapType_MiniMapype) == 0x000038, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_GetMiniMapType_MiniMapype' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, K2Node_MakeStruct_TslWidgetConfig) == 0x000040, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::K2Node_MakeStruct_TslWidgetConfig' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_GetTslHUD_ReturnValue3) == 0x000050, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_GetTslHUD_ReturnValue3' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_GetTslHUD_ReturnValue4) == 0x000058, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_GetTslHUD_ReturnValue4' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_GetTslHUD_ReturnValue5) == 0x000060, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_GetTslHUD_ReturnValue5' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_GetMiniMapTypes_ReturnValue) == 0x000068, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_GetMiniMapTypes_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_GetSelectedOption_SelectedOption) == 0x000078, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_GetSelectedOption_SelectedOption' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_Array_Get_Item) == 0x000088, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_NotEqual_StrStr_ReturnValue) == 0x0000B0, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x0000B1, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_GetWidget_ReturnValue) == 0x0000B8, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_GetWidget_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_Array_Length_ReturnValue) == 0x0000C0, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_IsValid_ReturnValue) == 0x0000C4, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_Less_IntInt_ReturnValue) == 0x0000C5, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_GetSelectMiniMapTypeIndex_ReturnValue2) == 0x0000C8, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_GetSelectMiniMapTypeIndex_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_GetMiniMapTypes_ReturnValue2) == 0x0000D0, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_GetMiniMapTypes_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_GetTslHUD_ReturnValue6) == 0x0000E0, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_GetTslHUD_ReturnValue6' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_Array_Get_Item2) == 0x0000E8, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, CallFunc_IsValid_ReturnValue2) == 0x000110, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_ApplyMiniMapType, OldMiniMapKey) == 0x000118, "Member 'GeneralSettingWidget_C_ApplyMiniMapType::OldMiniMapKey' has a wrong offset!");

// Function GeneralSettingWidget.GeneralSettingWidget_C.IsEnable_VideoCapture
// 0x0020 (0x0020 - 0x0000)
struct GeneralSettingWidget_C_IsEnable_VideoCapture final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_GetAvailableProviderNames_ReturnValue;    // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GeneralSettingWidget_C_IsEnable_VideoCapture) == 0x000008, "Wrong alignment on GeneralSettingWidget_C_IsEnable_VideoCapture");
static_assert(sizeof(GeneralSettingWidget_C_IsEnable_VideoCapture) == 0x000020, "Wrong size on GeneralSettingWidget_C_IsEnable_VideoCapture");
static_assert(offsetof(GeneralSettingWidget_C_IsEnable_VideoCapture, ReturnValue) == 0x000000, "Member 'GeneralSettingWidget_C_IsEnable_VideoCapture::ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_IsEnable_VideoCapture, CallFunc_GetAvailableProviderNames_ReturnValue) == 0x000008, "Member 'GeneralSettingWidget_C_IsEnable_VideoCapture::CallFunc_GetAvailableProviderNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_IsEnable_VideoCapture, CallFunc_Array_Length_ReturnValue) == 0x000018, "Member 'GeneralSettingWidget_C_IsEnable_VideoCapture::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_IsEnable_VideoCapture, CallFunc_Greater_IntInt_ReturnValue) == 0x00001C, "Member 'GeneralSettingWidget_C_IsEnable_VideoCapture::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");

// Function GeneralSettingWidget.GeneralSettingWidget_C.GetLanguageCultureName
// 0x0070 (0x0070 - 0x0000)
struct GeneralSettingWidget_C_GetLanguageCultureName final
{
public:
	class FString                                 CultureName;                                       // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
	int32                                         m__int_Array_Index_Variable;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class FString>                         CallFunc_CultureNames_ReturnValue;                 // 0x0020(0x0010)(ZeroConstructor, ReferenceParm)
	class FString                                 CallFunc_Array_Get_Item;                           // 0x0030(0x0010)(ZeroConstructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetNativeLanguage_ReturnValue;            // 0x0048(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_GetSelectedOption_SelectedOption;         // 0x0058(0x0010)(ZeroConstructor)
	bool                                          CallFunc_EqualEqual_StrStr_ReturnValue;            // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GeneralSettingWidget_C_GetLanguageCultureName) == 0x000008, "Wrong alignment on GeneralSettingWidget_C_GetLanguageCultureName");
static_assert(sizeof(GeneralSettingWidget_C_GetLanguageCultureName) == 0x000070, "Wrong size on GeneralSettingWidget_C_GetLanguageCultureName");
static_assert(offsetof(GeneralSettingWidget_C_GetLanguageCultureName, CultureName) == 0x000000, "Member 'GeneralSettingWidget_C_GetLanguageCultureName::CultureName' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_GetLanguageCultureName, m__int_Array_Index_Variable) == 0x000010, "Member 'GeneralSettingWidget_C_GetLanguageCultureName::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_GetLanguageCultureName, m__int_Loop_Counter_Variable) == 0x000014, "Member 'GeneralSettingWidget_C_GetLanguageCultureName::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_GetLanguageCultureName, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'GeneralSettingWidget_C_GetLanguageCultureName::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_GetLanguageCultureName, CallFunc_CultureNames_ReturnValue) == 0x000020, "Member 'GeneralSettingWidget_C_GetLanguageCultureName::CallFunc_CultureNames_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_GetLanguageCultureName, CallFunc_Array_Get_Item) == 0x000030, "Member 'GeneralSettingWidget_C_GetLanguageCultureName::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_GetLanguageCultureName, CallFunc_Array_Length_ReturnValue) == 0x000040, "Member 'GeneralSettingWidget_C_GetLanguageCultureName::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_GetLanguageCultureName, CallFunc_Less_IntInt_ReturnValue) == 0x000044, "Member 'GeneralSettingWidget_C_GetLanguageCultureName::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_GetLanguageCultureName, CallFunc_GetNativeLanguage_ReturnValue) == 0x000048, "Member 'GeneralSettingWidget_C_GetLanguageCultureName::CallFunc_GetNativeLanguage_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_GetLanguageCultureName, CallFunc_GetSelectedOption_SelectedOption) == 0x000058, "Member 'GeneralSettingWidget_C_GetLanguageCultureName::CallFunc_GetSelectedOption_SelectedOption' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_GetLanguageCultureName, CallFunc_EqualEqual_StrStr_ReturnValue) == 0x000068, "Member 'GeneralSettingWidget_C_GetLanguageCultureName::CallFunc_EqualEqual_StrStr_ReturnValue' has a wrong offset!");

// Function GeneralSettingWidget.GeneralSettingWidget_C.IsChanged
// 0x0038 (0x0038 - 0x0000)
struct GeneralSettingWidget_C_IsChanged final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentCultureName_ReturnValue;        // 0x0008(0x0010)(ZeroConstructor)
	bool                                          CallFunc_IsChangeVideoCapture_IsChange;            // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetLanguageCultureName_CultureName;       // 0x0020(0x0010)(ZeroConstructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanOR_ReturnValue;                    // 0x0031(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GeneralSettingWidget_C_IsChanged) == 0x000008, "Wrong alignment on GeneralSettingWidget_C_IsChanged");
static_assert(sizeof(GeneralSettingWidget_C_IsChanged) == 0x000038, "Wrong size on GeneralSettingWidget_C_IsChanged");
static_assert(offsetof(GeneralSettingWidget_C_IsChanged, ReturnValue) == 0x000000, "Member 'GeneralSettingWidget_C_IsChanged::ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_IsChanged, CallFunc_GetCurrentCultureName_ReturnValue) == 0x000008, "Member 'GeneralSettingWidget_C_IsChanged::CallFunc_GetCurrentCultureName_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_IsChanged, CallFunc_IsChangeVideoCapture_IsChange) == 0x000018, "Member 'GeneralSettingWidget_C_IsChanged::CallFunc_IsChangeVideoCapture_IsChange' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_IsChanged, CallFunc_GetLanguageCultureName_CultureName) == 0x000020, "Member 'GeneralSettingWidget_C_IsChanged::CallFunc_GetLanguageCultureName_CultureName' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_IsChanged, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000030, "Member 'GeneralSettingWidget_C_IsChanged::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_IsChanged, CallFunc_BooleanOR_ReturnValue) == 0x000031, "Member 'GeneralSettingWidget_C_IsChanged::CallFunc_BooleanOR_ReturnValue' has a wrong offset!");

// Function GeneralSettingWidget.GeneralSettingWidget_C.IsChangeVideoCapture
// 0x0030 (0x0030 - 0x0000)
struct GeneralSettingWidget_C_IsChangeVideoCapture final
{
public:
	bool                                          IsChange;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x7];                                        // 0x0001(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetCurrentProvider_ReturnValue;           // 0x0008(0x0010)(ZeroConstructor)
	class FString                                 CallFunc_GetSelectedOption_SelectedOption;         // 0x0018(0x0010)(ZeroConstructor)
	bool                                          CallFunc_NotEqual_StrStr_ReturnValue;              // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(GeneralSettingWidget_C_IsChangeVideoCapture) == 0x000008, "Wrong alignment on GeneralSettingWidget_C_IsChangeVideoCapture");
static_assert(sizeof(GeneralSettingWidget_C_IsChangeVideoCapture) == 0x000030, "Wrong size on GeneralSettingWidget_C_IsChangeVideoCapture");
static_assert(offsetof(GeneralSettingWidget_C_IsChangeVideoCapture, IsChange) == 0x000000, "Member 'GeneralSettingWidget_C_IsChangeVideoCapture::IsChange' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_IsChangeVideoCapture, CallFunc_GetCurrentProvider_ReturnValue) == 0x000008, "Member 'GeneralSettingWidget_C_IsChangeVideoCapture::CallFunc_GetCurrentProvider_ReturnValue' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_IsChangeVideoCapture, CallFunc_GetSelectedOption_SelectedOption) == 0x000018, "Member 'GeneralSettingWidget_C_IsChangeVideoCapture::CallFunc_GetSelectedOption_SelectedOption' has a wrong offset!");
static_assert(offsetof(GeneralSettingWidget_C_IsChangeVideoCapture, CallFunc_NotEqual_StrStr_ReturnValue) == 0x000028, "Member 'GeneralSettingWidget_C_IsChangeVideoCapture::CallFunc_NotEqual_StrStr_ReturnValue' has a wrong offset!");

}

