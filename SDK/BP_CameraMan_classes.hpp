#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_CameraMan

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "Engine_classes.hpp"


namespace SDK
{

// BlueprintGeneratedClass BP_CameraMan.BP_CameraMan_C
// 0x0050 (0x03F0 - 0x03A0)
class ABP_CameraMan_C final : public AActor
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x03A0(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UCameraComponent*                       Camera;                                            // 0x03A8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USpringArmComponent*                    SpringArm;                                         // 0x03B0(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class USceneComponent*                        DefaultSceneRoot;                                  // 0x03B8(0x0008)(BlueprintVisible, ZeroConstructor, IsPlainOldData, NonTransactional, NoDestructor)
	class ATslCharacter*                          ParentRef;                                         // 0x03C0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bInitialized;                                      // 0x03C8(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bIsAttached;                                       // 0x03C9(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bLookAtTarget;                                     // 0x03CA(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	bool                                          bAutoZoom;                                         // 0x03CB(0x0001)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3CC[0x4];                                      // 0x03CC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UCurveFloat*                            DistanceZoomCurve;                                 // 0x03D0(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         YawRotation;                                       // 0x03D8(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         YawRotationRate;                                   // 0x03DC(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	float                                         TargetOffsetZ;                                     // 0x03E0(0x0004)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnInstance, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3E4[0x4];                                      // 0x03E4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ABP_Motorbike_03_C*                     ParentRefMoto;                                     // 0x03E8(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_BP_CameraMan(int32 EntryPoint);
	void ReceiveTick(float DeltaSeconds);
	void UserConstructionScript();
	void Init(class ATslCharacter* ParentRef_0);
	void Init_Moto(class ABP_Motorbike_03_C* ParentRef_0);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"BP_CameraMan_C">();
	}
	static class ABP_CameraMan_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<ABP_CameraMan_C>();
	}
};
static_assert(alignof(ABP_CameraMan_C) == 0x000008, "Wrong alignment on ABP_CameraMan_C");
static_assert(sizeof(ABP_CameraMan_C) == 0x0003F0, "Wrong size on ABP_CameraMan_C");
static_assert(offsetof(ABP_CameraMan_C, UberGraphFrame) == 0x0003A0, "Member 'ABP_CameraMan_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(ABP_CameraMan_C, Camera) == 0x0003A8, "Member 'ABP_CameraMan_C::Camera' has a wrong offset!");
static_assert(offsetof(ABP_CameraMan_C, SpringArm) == 0x0003B0, "Member 'ABP_CameraMan_C::SpringArm' has a wrong offset!");
static_assert(offsetof(ABP_CameraMan_C, DefaultSceneRoot) == 0x0003B8, "Member 'ABP_CameraMan_C::DefaultSceneRoot' has a wrong offset!");
static_assert(offsetof(ABP_CameraMan_C, ParentRef) == 0x0003C0, "Member 'ABP_CameraMan_C::ParentRef' has a wrong offset!");
static_assert(offsetof(ABP_CameraMan_C, bInitialized) == 0x0003C8, "Member 'ABP_CameraMan_C::bInitialized' has a wrong offset!");
static_assert(offsetof(ABP_CameraMan_C, bIsAttached) == 0x0003C9, "Member 'ABP_CameraMan_C::bIsAttached' has a wrong offset!");
static_assert(offsetof(ABP_CameraMan_C, bLookAtTarget) == 0x0003CA, "Member 'ABP_CameraMan_C::bLookAtTarget' has a wrong offset!");
static_assert(offsetof(ABP_CameraMan_C, bAutoZoom) == 0x0003CB, "Member 'ABP_CameraMan_C::bAutoZoom' has a wrong offset!");
static_assert(offsetof(ABP_CameraMan_C, DistanceZoomCurve) == 0x0003D0, "Member 'ABP_CameraMan_C::DistanceZoomCurve' has a wrong offset!");
static_assert(offsetof(ABP_CameraMan_C, YawRotation) == 0x0003D8, "Member 'ABP_CameraMan_C::YawRotation' has a wrong offset!");
static_assert(offsetof(ABP_CameraMan_C, YawRotationRate) == 0x0003DC, "Member 'ABP_CameraMan_C::YawRotationRate' has a wrong offset!");
static_assert(offsetof(ABP_CameraMan_C, TargetOffsetZ) == 0x0003E0, "Member 'ABP_CameraMan_C::TargetOffsetZ' has a wrong offset!");
static_assert(offsetof(ABP_CameraMan_C, ParentRefMoto) == 0x0003E8, "Member 'ABP_CameraMan_C::ParentRefMoto' has a wrong offset!");

}

