#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: BP_MiniMapWidget

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"


namespace SDK::Params
{

// Function BP_MiniMapWidget.BP_MiniMapWidget_C.OnPrepass_0
// 0x00C8 (0x00C8 - 0x0000)
struct BP_MiniMapWidget_C_OnPrepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerController*                   CallFunc_GetOwningTslPlayerController_ReturnValue; // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSpectating_ReturnValue;                 // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsObserving_ReturnValue;                  // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x6];                                       // 0x0012(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetViewTargetTslCharacter_ReturnValue;    // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsSpectating_ReturnValue2;                // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x2];                                       // 0x0022(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0024(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerController*                   CallFunc_GetOwningTslPlayerController_ReturnValue2; // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_LocalPositionToServer_ReturnValue;        // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_44[0x4];                                       // 0x0044(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpectatorPawn*                         CallFunc_GetSpectatorPawn_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x005C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_LocalPositionToServer_ReturnValue2;       // 0x0070(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X2;                           // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y2;                           // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z2;                           // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue2;                // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_GetCachedCharacter_ReturnValue;           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0098(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_99[0x3];                                       // 0x0099(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue3;         // 0x009C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_LocalPositionToServer_ReturnValue3;       // 0x00A8(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X3;                           // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y3;                           // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z3;                           // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue3;                // 0x00C0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(BP_MiniMapWidget_C_OnPrepass_0) == 0x000008, "Wrong alignment on BP_MiniMapWidget_C_OnPrepass_0");
static_assert(sizeof(BP_MiniMapWidget_C_OnPrepass_0) == 0x0000C8, "Wrong size on BP_MiniMapWidget_C_OnPrepass_0");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, BoundWidget) == 0x000000, "Member 'BP_MiniMapWidget_C_OnPrepass_0::BoundWidget' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_GetOwningTslPlayerController_ReturnValue) == 0x000008, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_GetOwningTslPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_IsSpectating_ReturnValue) == 0x000010, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_IsSpectating_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_IsObserving_ReturnValue) == 0x000011, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_IsObserving_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_GetViewTargetTslCharacter_ReturnValue) == 0x000018, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_GetViewTargetTslCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_IsSpectating_ReturnValue2) == 0x000020, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_IsSpectating_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000024, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_GetOwningTslPlayerController_ReturnValue2) == 0x000030, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_GetOwningTslPlayerController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_LocalPositionToServer_ReturnValue) == 0x000038, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_LocalPositionToServer_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_GetSpectatorPawn_ReturnValue) == 0x000048, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_GetSpectatorPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_BreakVector_X) == 0x000050, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_BreakVector_Y) == 0x000054, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_BreakVector_Z) == 0x000058, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x00005C, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_MakeVector2D_ReturnValue) == 0x000068, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_LocalPositionToServer_ReturnValue2) == 0x000070, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_LocalPositionToServer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_BreakVector_X2) == 0x00007C, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_BreakVector_Y2) == 0x000080, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_BreakVector_Z2) == 0x000084, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_MakeVector2D_ReturnValue2) == 0x000088, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_MakeVector2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_GetCachedCharacter_ReturnValue) == 0x000090, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_GetCachedCharacter_ReturnValue' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_IsValid_ReturnValue2) == 0x000098, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_K2_GetActorLocation_ReturnValue3) == 0x00009C, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_K2_GetActorLocation_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_LocalPositionToServer_ReturnValue3) == 0x0000A8, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_LocalPositionToServer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_BreakVector_X3) == 0x0000B4, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_BreakVector_X3' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_BreakVector_Y3) == 0x0000B8, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_BreakVector_Y3' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_BreakVector_Z3) == 0x0000BC, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_BreakVector_Z3' has a wrong offset!");
static_assert(offsetof(BP_MiniMapWidget_C_OnPrepass_0, CallFunc_MakeVector2D_ReturnValue3) == 0x0000C0, "Member 'BP_MiniMapWidget_C_OnPrepass_0::CallFunc_MakeVector2D_ReturnValue3' has a wrong offset!");

}

