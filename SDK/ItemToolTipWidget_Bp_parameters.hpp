#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ItemToolTipWidget_Bp

#include "Basic.hpp"

#include "TslGame_structs.hpp"
#include "UMG_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.ExecuteUbergraph_ItemToolTipWidget_Bp
// 0x0038 (0x0038 - 0x0000)
struct ItemToolTipWidget_Bp_C_ExecuteUbergraph_ItemToolTipWidget_Bp final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UEquipableItem*                         K2Node_Event_EquipableItem;                        // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UEquipableItem*                         K2Node_Event_EquipmentSlotItem;                    // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TScriptInterface<class ISlotInterface>        K2Node_Event_SlotInterface;                        // 0x0020(0x0010)(ConstParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UEquipableItem*                         K2Node_Event_EquipableItem2;                       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemToolTipWidget_Bp_C_ExecuteUbergraph_ItemToolTipWidget_Bp) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_ExecuteUbergraph_ItemToolTipWidget_Bp");
static_assert(sizeof(ItemToolTipWidget_Bp_C_ExecuteUbergraph_ItemToolTipWidget_Bp) == 0x000038, "Wrong size on ItemToolTipWidget_Bp_C_ExecuteUbergraph_ItemToolTipWidget_Bp");
static_assert(offsetof(ItemToolTipWidget_Bp_C_ExecuteUbergraph_ItemToolTipWidget_Bp, EntryPoint) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_ExecuteUbergraph_ItemToolTipWidget_Bp::EntryPoint' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_ExecuteUbergraph_ItemToolTipWidget_Bp, K2Node_Event_EquipableItem) == 0x000008, "Member 'ItemToolTipWidget_Bp_C_ExecuteUbergraph_ItemToolTipWidget_Bp::K2Node_Event_EquipableItem' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_ExecuteUbergraph_ItemToolTipWidget_Bp, K2Node_Event_EquipmentSlotItem) == 0x000010, "Member 'ItemToolTipWidget_Bp_C_ExecuteUbergraph_ItemToolTipWidget_Bp::K2Node_Event_EquipmentSlotItem' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_ExecuteUbergraph_ItemToolTipWidget_Bp, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000018, "Member 'ItemToolTipWidget_Bp_C_ExecuteUbergraph_ItemToolTipWidget_Bp::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_ExecuteUbergraph_ItemToolTipWidget_Bp, K2Node_Event_SlotInterface) == 0x000020, "Member 'ItemToolTipWidget_Bp_C_ExecuteUbergraph_ItemToolTipWidget_Bp::K2Node_Event_SlotInterface' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_ExecuteUbergraph_ItemToolTipWidget_Bp, K2Node_Event_EquipableItem2) == 0x000030, "Member 'ItemToolTipWidget_Bp_C_ExecuteUbergraph_ItemToolTipWidget_Bp::K2Node_Event_EquipableItem2' has a wrong offset!");

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.UpdateVicinityOrInventorySlotItemToolTip
// 0x0010 (0x0010 - 0x0000)
struct ItemToolTipWidget_Bp_C_UpdateVicinityOrInventorySlotItemToolTip final
{
public:
	class UEquipableItem*                         EquipableItem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UEquipableItem*                         EquipmentSlotItem;                                 // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemToolTipWidget_Bp_C_UpdateVicinityOrInventorySlotItemToolTip) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_UpdateVicinityOrInventorySlotItemToolTip");
static_assert(sizeof(ItemToolTipWidget_Bp_C_UpdateVicinityOrInventorySlotItemToolTip) == 0x000010, "Wrong size on ItemToolTipWidget_Bp_C_UpdateVicinityOrInventorySlotItemToolTip");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateVicinityOrInventorySlotItemToolTip, EquipableItem) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_UpdateVicinityOrInventorySlotItemToolTip::EquipableItem' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateVicinityOrInventorySlotItemToolTip, EquipmentSlotItem) == 0x000008, "Member 'ItemToolTipWidget_Bp_C_UpdateVicinityOrInventorySlotItemToolTip::EquipmentSlotItem' has a wrong offset!");

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.UpdateEquipmentSlotItemToolTip
// 0x0008 (0x0008 - 0x0000)
struct ItemToolTipWidget_Bp_C_UpdateEquipmentSlotItemToolTip final
{
public:
	class UEquipableItem*                         EquipableItem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemToolTipWidget_Bp_C_UpdateEquipmentSlotItemToolTip) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_UpdateEquipmentSlotItemToolTip");
static_assert(sizeof(ItemToolTipWidget_Bp_C_UpdateEquipmentSlotItemToolTip) == 0x000008, "Wrong size on ItemToolTipWidget_Bp_C_UpdateEquipmentSlotItemToolTip");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateEquipmentSlotItemToolTip, EquipableItem) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_UpdateEquipmentSlotItemToolTip::EquipableItem' has a wrong offset!");

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.UpdateSlotInfo
// 0x0010 (0x0010 - 0x0000)
struct ItemToolTipWidget_Bp_C_UpdateSlotInfo final
{
public:
	TScriptInterface<class ISlotInterface>        SlotInterface;                                     // 0x0000(0x0010)(ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemToolTipWidget_Bp_C_UpdateSlotInfo) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_UpdateSlotInfo");
static_assert(sizeof(ItemToolTipWidget_Bp_C_UpdateSlotInfo) == 0x000010, "Wrong size on ItemToolTipWidget_Bp_C_UpdateSlotInfo");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateSlotInfo, SlotInterface) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_UpdateSlotInfo::SlotInterface' has a wrong offset!");

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.UpdateItemDetailInfo
// 0x02A0 (0x02A0 - 0x0000)
struct ItemToolTipWidget_Bp_C_UpdateItemDetailInfo final
{
public:
	class UItem*                                  Item;                                              // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0009(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x000A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable2;                                 // 0x000B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C[0x4];                                        // 0x000C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_GetOwningShooterCharacter_ShooterCharacter; // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x3];                                       // 0x0019(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWeaponPower_Damage;                    // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AWeaponProcessor*                       CallFunc_GetWeaponProcessor_ReturnValue;           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslWeapon*                             CallFunc_GetCurrentWeapon_ReturnValue;             // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x3];                                       // 0x0031(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetAttachedStability_Accuracy;            // 0x0034(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetAttachedStability_Accuracy2;           // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetStability_Accuracy;                    // 0x003C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue;        // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWeaponEffectiveRange_EffectRange;      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWeaponEffectiveRange_EffectRange2;     // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWeaponEffectiveRange_EffectRange3;     // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue2;       // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable3;                                 // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_55[0x3];                                       // 0x0055(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWeaponPower_Damage2;                   // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable4;                                 // 0x005C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5D[0x3];                                       // 0x005D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         K2Node_Select_Default;                             // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Select2_Default;                            // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue3;       // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable5;                                 // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0078(0x0018)()
	float                                         K2Node_Select3_Default;                            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue4;       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslWeapon*                             CallFunc_GetDefaultWeaponObject_ReturnValue;       // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslWeapon*                             CallFunc_GetEquippedWeapon_ReturnValue;            // 0x00A0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00A8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A9[0x7];                                       // 0x00A9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAmmoItem*                              CallFunc_GetDefaultAmmoObject_ReturnValue;         // 0x00B0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B9[0x7];                                       // 0x00B9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotInterface>        CallFunc_GetSlotName_self_CastInput;               // 0x00C0(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_GetSlotName_ReturnValue;                  // 0x00D0(0x0018)()
	float                                         CallFunc_GetWeaponFullRealoadTimeWithAttachments_ReturnValue; // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWeaponPower_Damage3;                   // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFiringRate_FringRate;                  // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00F4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F5[0x3];                                       // 0x00F5(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWeaponPower_Damage4;                   // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select4_Default;                            // 0x00FC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_FD[0x3];                                       // 0x00FD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon_Trajectory*                  K2Node_DynamicCast_AsTsl_Weapon_Trajectory;        // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0108(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0109(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_10A[0x2];                                      // 0x010A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAttachableItem*                        CallFunc_GetAttachedItem_ReturnValue;              // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_119[0x7];                                      // 0x0119(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponAttachmentData                  CallFunc_GetAttachmentData_ReturnValue;            // 0x0120(0x00B8)()
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue5;       // 0x01D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue6;       // 0x01DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable6;                                 // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon_Trajectory*                  K2Node_DynamicCast_AsTsl_Weapon_Trajectory2;       // 0x01E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x01F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1F1[0x7];                                      // 0x01F1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon*                             K2Node_Select5_Default;                            // 0x01F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponItem*                            K2Node_DynamicCast_AsWeapon_Item;                  // 0x0200(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UThrowableItem*                         K2Node_DynamicCast_AsThrowable_Item;               // 0x0210(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0218(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_219[0x7];                                      // 0x0219(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon*                             CallFunc_GetEquippedWeapon_ReturnValue2;           // 0x0220(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslWeapon*                             CallFunc_GetDefaultWeaponObject_ReturnValue2;      // 0x0228(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x0230(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_231[0x7];                                      // 0x0231(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon*                             K2Node_Select6_Default;                            // 0x0238(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bCompareWeaponValid;                               // 0x0240(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_241[0x7];                                      // 0x0241(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon_Trajectory*                  LocalCompareEquippedWeapon_Trajectory;             // 0x0248(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	class ATslWeapon*                             LocalCompareEquippedWeapon;                        // 0x0250(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	bool                                          bEquipmentWeaponToolTip;                           // 0x0258(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_259[0x7];                                      // 0x0259(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   AmmoName;                                          // 0x0260(0x0018)(Edit)
	class ATslWeapon*                             LocalDefaultWeaponObject_0;                        // 0x0278(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	int32                                         AmmoGap;                                           // 0x0280(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Ammo;                                              // 0x0284(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslWeapon_Trajectory*                  LocalDefaultWeapon_Trajectory;                     // 0x0288(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	class UWeaponItem*                            LocalWeaponItem;                                   // 0x0290(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UItem*                                  LocalItem;                                         // 0x0298(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_UpdateItemDetailInfo");
static_assert(sizeof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo) == 0x0002A0, "Wrong size on ItemToolTipWidget_Bp_C_UpdateItemDetailInfo");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, Item) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::Item' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, m__bool_Variable) == 0x000008, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, m__byte_Variable) == 0x000009, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, m__byte_Variable2) == 0x00000A, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, m__bool_Variable2) == 0x00000B, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetOwningShooterCharacter_ShooterCharacter) == 0x000010, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetOwningShooterCharacter_ShooterCharacter' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetWeaponPower_Damage) == 0x00001C, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetWeaponPower_Damage' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetWeaponProcessor_ReturnValue) == 0x000020, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetWeaponProcessor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetCurrentWeapon_ReturnValue) == 0x000028, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetCurrentWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_Not_PreBool_ReturnValue) == 0x000030, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetAttachedStability_Accuracy) == 0x000034, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetAttachedStability_Accuracy' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetAttachedStability_Accuracy2) == 0x000038, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetAttachedStability_Accuracy2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetStability_Accuracy) == 0x00003C, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetStability_Accuracy' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_SafeDivide_FloatFloat_ReturnValue) == 0x000040, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_SafeDivide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetWeaponEffectiveRange_EffectRange) == 0x000044, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetWeaponEffectiveRange_EffectRange' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetWeaponEffectiveRange_EffectRange2) == 0x000048, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetWeaponEffectiveRange_EffectRange2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetWeaponEffectiveRange_EffectRange3) == 0x00004C, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetWeaponEffectiveRange_EffectRange3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_SafeDivide_FloatFloat_ReturnValue2) == 0x000050, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_SafeDivide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, m__bool_Variable3) == 0x000054, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::m__bool_Variable3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetWeaponPower_Damage2) == 0x000058, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetWeaponPower_Damage2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, m__bool_Variable4) == 0x00005C, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::m__bool_Variable4' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, K2Node_Select_Default) == 0x000060, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000064, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, K2Node_Select2_Default) == 0x000068, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_SafeDivide_FloatFloat_ReturnValue3) == 0x00006C, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_SafeDivide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, m__bool_Variable5) == 0x000070, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::m__bool_Variable5' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_Conv_IntToText_ReturnValue) == 0x000078, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, K2Node_Select3_Default) == 0x000090, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_SafeDivide_FloatFloat_ReturnValue4) == 0x000094, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_SafeDivide_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetDefaultWeaponObject_ReturnValue) == 0x000098, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetDefaultWeaponObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetEquippedWeapon_ReturnValue) == 0x0000A0, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetEquippedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_IsValid_ReturnValue2) == 0x0000A8, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetDefaultAmmoObject_ReturnValue) == 0x0000B0, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetDefaultAmmoObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_IsValid_ReturnValue3) == 0x0000B8, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetSlotName_self_CastInput) == 0x0000C0, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetSlotName_self_CastInput' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetSlotName_ReturnValue) == 0x0000D0, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetSlotName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetWeaponFullRealoadTimeWithAttachments_ReturnValue) == 0x0000E8, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetWeaponFullRealoadTimeWithAttachments_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetWeaponPower_Damage3) == 0x0000EC, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetWeaponPower_Damage3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetFiringRate_FringRate) == 0x0000F0, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetFiringRate_FringRate' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000F4, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetWeaponPower_Damage4) == 0x0000F8, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetWeaponPower_Damage4' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, K2Node_Select4_Default) == 0x0000FC, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::K2Node_Select4_Default' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, K2Node_DynamicCast_AsTsl_Weapon_Trajectory) == 0x000100, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::K2Node_DynamicCast_AsTsl_Weapon_Trajectory' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, K2Node_DynamicCast_bSuccess) == 0x000108, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_IsValid_ReturnValue4) == 0x000109, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_Subtract_IntInt_ReturnValue) == 0x00010C, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetAttachedItem_ReturnValue) == 0x000110, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetAttachedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_IsValid_ReturnValue5) == 0x000118, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetAttachmentData_ReturnValue) == 0x000120, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetAttachmentData_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_SafeDivide_FloatFloat_ReturnValue5) == 0x0001D8, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_SafeDivide_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_SafeDivide_FloatFloat_ReturnValue6) == 0x0001DC, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_SafeDivide_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, m__bool_Variable6) == 0x0001E0, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::m__bool_Variable6' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, K2Node_DynamicCast_AsTsl_Weapon_Trajectory2) == 0x0001E8, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::K2Node_DynamicCast_AsTsl_Weapon_Trajectory2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, K2Node_DynamicCast_bSuccess2) == 0x0001F0, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, K2Node_Select5_Default) == 0x0001F8, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::K2Node_Select5_Default' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, K2Node_DynamicCast_AsWeapon_Item) == 0x000200, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::K2Node_DynamicCast_AsWeapon_Item' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, K2Node_DynamicCast_bSuccess3) == 0x000208, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, K2Node_DynamicCast_AsThrowable_Item) == 0x000210, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::K2Node_DynamicCast_AsThrowable_Item' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, K2Node_DynamicCast_bSuccess4) == 0x000218, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetEquippedWeapon_ReturnValue2) == 0x000220, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetEquippedWeapon_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_GetDefaultWeaponObject_ReturnValue2) == 0x000228, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_GetDefaultWeaponObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, CallFunc_IsValid_ReturnValue6) == 0x000230, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, K2Node_Select6_Default) == 0x000238, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::K2Node_Select6_Default' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, bCompareWeaponValid) == 0x000240, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::bCompareWeaponValid' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, LocalCompareEquippedWeapon_Trajectory) == 0x000248, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::LocalCompareEquippedWeapon_Trajectory' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, LocalCompareEquippedWeapon) == 0x000250, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::LocalCompareEquippedWeapon' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, bEquipmentWeaponToolTip) == 0x000258, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::bEquipmentWeaponToolTip' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, AmmoName) == 0x000260, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::AmmoName' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, LocalDefaultWeaponObject_0) == 0x000278, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::LocalDefaultWeaponObject_0' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, AmmoGap) == 0x000280, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::AmmoGap' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, Ammo) == 0x000284, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::Ammo' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, LocalDefaultWeapon_Trajectory) == 0x000288, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::LocalDefaultWeapon_Trajectory' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, LocalWeaponItem) == 0x000290, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::LocalWeaponItem' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateItemDetailInfo, LocalItem) == 0x000298, "Member 'ItemToolTipWidget_Bp_C_UpdateItemDetailInfo::LocalItem' has a wrong offset!");

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.SetItemByInterface
// 0x0068 (0x0068 - 0x0000)
struct ItemToolTipWidget_Bp_C_SetItemByInterface final
{
public:
	TScriptInterface<class ISlotInterface>        Item;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue;       // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UObject*                                CallFunc_Conv_InterfaceToObject_ReturnValue2;      // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UItem*                                  K2Node_DynamicCast_AsItem;                         // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class IDroppedItemInterface> K2Node_DynamicCast_AsDropped_Item_Interface;       // 0x0038(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x7];                                       // 0x0049(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UItem*                                  CallFunc_GetDroppedItem_ReturnValue;               // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AItemPackage*                           K2Node_DynamicCast_AsItem_Package;                 // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0060(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemToolTipWidget_Bp_C_SetItemByInterface) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_SetItemByInterface");
static_assert(sizeof(ItemToolTipWidget_Bp_C_SetItemByInterface) == 0x000068, "Wrong size on ItemToolTipWidget_Bp_C_SetItemByInterface");
static_assert(offsetof(ItemToolTipWidget_Bp_C_SetItemByInterface, Item) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_SetItemByInterface::Item' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_SetItemByInterface, CallFunc_Conv_InterfaceToObject_ReturnValue) == 0x000010, "Member 'ItemToolTipWidget_Bp_C_SetItemByInterface::CallFunc_Conv_InterfaceToObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_SetItemByInterface, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ItemToolTipWidget_Bp_C_SetItemByInterface::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_SetItemByInterface, CallFunc_Conv_InterfaceToObject_ReturnValue2) == 0x000020, "Member 'ItemToolTipWidget_Bp_C_SetItemByInterface::CallFunc_Conv_InterfaceToObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_SetItemByInterface, K2Node_DynamicCast_AsItem) == 0x000028, "Member 'ItemToolTipWidget_Bp_C_SetItemByInterface::K2Node_DynamicCast_AsItem' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_SetItemByInterface, K2Node_DynamicCast_bSuccess) == 0x000030, "Member 'ItemToolTipWidget_Bp_C_SetItemByInterface::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_SetItemByInterface, K2Node_DynamicCast_AsDropped_Item_Interface) == 0x000038, "Member 'ItemToolTipWidget_Bp_C_SetItemByInterface::K2Node_DynamicCast_AsDropped_Item_Interface' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_SetItemByInterface, K2Node_DynamicCast_bSuccess2) == 0x000048, "Member 'ItemToolTipWidget_Bp_C_SetItemByInterface::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_SetItemByInterface, CallFunc_GetDroppedItem_ReturnValue) == 0x000050, "Member 'ItemToolTipWidget_Bp_C_SetItemByInterface::CallFunc_GetDroppedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_SetItemByInterface, K2Node_DynamicCast_AsItem_Package) == 0x000058, "Member 'ItemToolTipWidget_Bp_C_SetItemByInterface::K2Node_DynamicCast_AsItem_Package' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_SetItemByInterface, K2Node_DynamicCast_bSuccess3) == 0x000060, "Member 'ItemToolTipWidget_Bp_C_SetItemByInterface::K2Node_DynamicCast_bSuccess3' has a wrong offset!");

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.UpdateDefaultInfo
// 0x0378 (0x0378 - 0x0000)
struct ItemToolTipWidget_Bp_C_UpdateDefaultInfo final
{
public:
	TScriptInterface<class ISlotInterface>        Item;                                              // 0x0000(0x0010)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetSlotCategory_ReturnValue;              // 0x0018(0x0018)()
	bool                                          CallFunc_IsWeapon_ReturnValue;                     // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData;              // 0x0038(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array;                            // 0x0078(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_GetSlotDetailedName_ReturnValue;          // 0x0088(0x0018)()
	class FText                                   CallFunc_Format_ReturnValue;                       // 0x00A0(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData2;             // 0x00B8(0x0040)()
	class UTexture*                               CallFunc_GetIconTexture_ReturnValue;               // 0x00F8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array2;                           // 0x0100(0x0010)(ZeroConstructor, ReferenceParm)
	float                                         CallFunc_GetIconSizeRatio_ReturnValue;             // 0x0110(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_114[0x4];                                      // 0x0114(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue2;                      // 0x0118(0x0018)()
	class FText                                   CallFunc_GetSlotDescription_ReturnValue;           // 0x0130(0x0018)()
	int32                                         CallFunc_GetStackCount_ReturnValue;                // 0x0148(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14C[0x4];                                      // 0x014C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData3;             // 0x0150(0x0040)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData4;             // 0x0190(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array3;                           // 0x01D0(0x0010)(ZeroConstructor, ReferenceParm)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x01E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E1[0x7];                                      // 0x01E1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Format_ReturnValue3;                      // 0x01E8(0x0018)()
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0200(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetSpace_ReturnValue;                     // 0x0204(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0208(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_209[0x7];                                      // 0x0209(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData5;             // 0x0210(0x0040)()
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0250(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_251[0x3];                                      // 0x0251(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0254(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData6;             // 0x0258(0x0040)()
	ESlateVisibility                              m__byte_Variable2;                                 // 0x0298(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_299[0x7];                                      // 0x0299(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array4;                           // 0x02A0(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue4;                      // 0x02B0(0x0018)()
	ESlateVisibility                              K2Node_Select_Default;                             // 0x02C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C9[0x7];                                      // 0x02C9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   m__text_Variable;                                  // 0x02D0(0x0018)()
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x02E8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x02F0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable2;                                 // 0x02F1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2F2[0x6];                                      // 0x02F2(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   K2Node_Select2_Default;                            // 0x02F8(0x0018)()
	struct FFormatArgumentData                    K2Node_MakeStruct_FormatArgumentData7;             // 0x0310(0x0040)()
	TArray<struct FFormatArgumentData>            K2Node_MakeArray_Array5;                           // 0x0350(0x0010)(ZeroConstructor, ReferenceParm)
	class FText                                   CallFunc_Format_ReturnValue5;                      // 0x0360(0x0018)()
};
static_assert(alignof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_UpdateDefaultInfo");
static_assert(sizeof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo) == 0x000378, "Wrong size on ItemToolTipWidget_Bp_C_UpdateDefaultInfo");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, Item) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::Item' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, m__bool_Variable) == 0x000010, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_GetSlotCategory_ReturnValue) == 0x000018, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_GetSlotCategory_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_IsWeapon_ReturnValue) == 0x000030, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_IsWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, K2Node_MakeStruct_FormatArgumentData) == 0x000038, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::K2Node_MakeStruct_FormatArgumentData' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, K2Node_MakeArray_Array) == 0x000078, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_GetSlotDetailedName_ReturnValue) == 0x000088, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_GetSlotDetailedName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_Format_ReturnValue) == 0x0000A0, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_Format_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, K2Node_MakeStruct_FormatArgumentData2) == 0x0000B8, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::K2Node_MakeStruct_FormatArgumentData2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_GetIconTexture_ReturnValue) == 0x0000F8, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_GetIconTexture_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, K2Node_MakeArray_Array2) == 0x000100, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::K2Node_MakeArray_Array2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_GetIconSizeRatio_ReturnValue) == 0x000110, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_GetIconSizeRatio_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_Format_ReturnValue2) == 0x000118, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_Format_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_GetSlotDescription_ReturnValue) == 0x000130, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_GetSlotDescription_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_GetStackCount_ReturnValue) == 0x000148, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_GetStackCount_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, K2Node_MakeStruct_FormatArgumentData3) == 0x000150, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::K2Node_MakeStruct_FormatArgumentData3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, K2Node_MakeStruct_FormatArgumentData4) == 0x000190, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::K2Node_MakeStruct_FormatArgumentData4' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, K2Node_MakeArray_Array3) == 0x0001D0, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::K2Node_MakeArray_Array3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_Greater_IntInt_ReturnValue) == 0x0001E0, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_Format_ReturnValue3) == 0x0001E8, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_Format_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000200, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_GetSpace_ReturnValue) == 0x000204, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_GetSpace_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, m__byte_Variable) == 0x000208, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, K2Node_MakeStruct_FormatArgumentData5) == 0x000210, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::K2Node_MakeStruct_FormatArgumentData5' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000250, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000254, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, K2Node_MakeStruct_FormatArgumentData6) == 0x000258, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::K2Node_MakeStruct_FormatArgumentData6' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, m__byte_Variable2) == 0x000298, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, K2Node_MakeArray_Array4) == 0x0002A0, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::K2Node_MakeArray_Array4' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_Format_ReturnValue4) == 0x0002B0, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_Format_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, K2Node_Select_Default) == 0x0002C8, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, m__text_Variable) == 0x0002D0, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::m__text_Variable' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_GetDynamicMaterial_ReturnValue) == 0x0002E8, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_IsValid_ReturnValue) == 0x0002F0, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, m__bool_Variable2) == 0x0002F1, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, K2Node_Select2_Default) == 0x0002F8, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, K2Node_MakeStruct_FormatArgumentData7) == 0x000310, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::K2Node_MakeStruct_FormatArgumentData7' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, K2Node_MakeArray_Array5) == 0x000350, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::K2Node_MakeArray_Array5' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_UpdateDefaultInfo, CallFunc_Format_ReturnValue5) == 0x000360, "Member 'ItemToolTipWidget_Bp_C_UpdateDefaultInfo::CallFunc_Format_ReturnValue5' has a wrong offset!");

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.GetWeaponPower
// 0x00C8 (0x00C8 - 0x0000)
struct ItemToolTipWidget_Bp_C_GetWeaponPower final
{
public:
	class ATslWeapon*                             ShooterWeapon;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Damage;                                            // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWeaponDamage_ReturnValue;              // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon_Gun*                         K2Node_DynamicCast_AsTsl_Weapon_Gun;               // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponGunData                         CallFunc_GetWeaponGunConfig_ReturnValue;           // 0x0028(0x0090)()
	float                                         CallFunc_Multiply_IntFloat_ReturnValue;            // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00BC(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BD[0x3];                                       // 0x00BD(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemToolTipWidget_Bp_C_GetWeaponPower) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_GetWeaponPower");
static_assert(sizeof(ItemToolTipWidget_Bp_C_GetWeaponPower) == 0x0000C8, "Wrong size on ItemToolTipWidget_Bp_C_GetWeaponPower");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetWeaponPower, ShooterWeapon) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_GetWeaponPower::ShooterWeapon' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetWeaponPower, Damage) == 0x000008, "Member 'ItemToolTipWidget_Bp_C_GetWeaponPower::Damage' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetWeaponPower, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'ItemToolTipWidget_Bp_C_GetWeaponPower::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetWeaponPower, CallFunc_GetWeaponDamage_ReturnValue) == 0x000010, "Member 'ItemToolTipWidget_Bp_C_GetWeaponPower::CallFunc_GetWeaponDamage_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetWeaponPower, K2Node_DynamicCast_AsTsl_Weapon_Gun) == 0x000018, "Member 'ItemToolTipWidget_Bp_C_GetWeaponPower::K2Node_DynamicCast_AsTsl_Weapon_Gun' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetWeaponPower, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ItemToolTipWidget_Bp_C_GetWeaponPower::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetWeaponPower, CallFunc_GetWeaponGunConfig_ReturnValue) == 0x000028, "Member 'ItemToolTipWidget_Bp_C_GetWeaponPower::CallFunc_GetWeaponGunConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetWeaponPower, CallFunc_Multiply_IntFloat_ReturnValue) == 0x0000B8, "Member 'ItemToolTipWidget_Bp_C_GetWeaponPower::CallFunc_Multiply_IntFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetWeaponPower, CallFunc_Greater_IntInt_ReturnValue) == 0x0000BC, "Member 'ItemToolTipWidget_Bp_C_GetWeaponPower::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetWeaponPower, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C0, "Member 'ItemToolTipWidget_Bp_C_GetWeaponPower::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.GetWeaponEffectiveRange
// 0x0078 (0x0078 - 0x0000)
struct ItemToolTipWidget_Bp_C_GetWeaponEffectiveRange final
{
public:
	class ATslWeapon_Trajectory*                  ShooterWeapon_Trajectory;                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         EffectRange;                                       // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTrajectoryWeaponData                  CallFunc_GetTrajectoryConfig_ReturnValue;          // 0x0010(0x0060)()
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0070(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemToolTipWidget_Bp_C_GetWeaponEffectiveRange) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_GetWeaponEffectiveRange");
static_assert(sizeof(ItemToolTipWidget_Bp_C_GetWeaponEffectiveRange) == 0x000078, "Wrong size on ItemToolTipWidget_Bp_C_GetWeaponEffectiveRange");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetWeaponEffectiveRange, ShooterWeapon_Trajectory) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_GetWeaponEffectiveRange::ShooterWeapon_Trajectory' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetWeaponEffectiveRange, EffectRange) == 0x000008, "Member 'ItemToolTipWidget_Bp_C_GetWeaponEffectiveRange::EffectRange' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetWeaponEffectiveRange, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'ItemToolTipWidget_Bp_C_GetWeaponEffectiveRange::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetWeaponEffectiveRange, CallFunc_GetTrajectoryConfig_ReturnValue) == 0x000010, "Member 'ItemToolTipWidget_Bp_C_GetWeaponEffectiveRange::CallFunc_GetTrajectoryConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetWeaponEffectiveRange, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000070, "Member 'ItemToolTipWidget_Bp_C_GetWeaponEffectiveRange::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.GetStability
// 0x0018 (0x0018 - 0x0000)
struct ItemToolTipWidget_Bp_C_GetStability final
{
public:
	class ATslWeapon_Trajectory*                  ShooterWeapon_Trajectory;                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Accuracy;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentStabilityVar_ReturnValue;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemToolTipWidget_Bp_C_GetStability) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_GetStability");
static_assert(sizeof(ItemToolTipWidget_Bp_C_GetStability) == 0x000018, "Wrong size on ItemToolTipWidget_Bp_C_GetStability");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetStability, ShooterWeapon_Trajectory) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_GetStability::ShooterWeapon_Trajectory' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetStability, Accuracy) == 0x000008, "Member 'ItemToolTipWidget_Bp_C_GetStability::Accuracy' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetStability, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'ItemToolTipWidget_Bp_C_GetStability::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetStability, CallFunc_GetCurrentStabilityVar_ReturnValue) == 0x000010, "Member 'ItemToolTipWidget_Bp_C_GetStability::CallFunc_GetCurrentStabilityVar_ReturnValue' has a wrong offset!");

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.GetAttachedStability
// 0x0018 (0x0018 - 0x0000)
struct ItemToolTipWidget_Bp_C_GetAttachedStability final
{
public:
	class ATslWeapon_Trajectory*                  ShooterWeapon_Trajectory;                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Accuracy;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetCurrentStabilityVar_ReturnValue;       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemToolTipWidget_Bp_C_GetAttachedStability) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_GetAttachedStability");
static_assert(sizeof(ItemToolTipWidget_Bp_C_GetAttachedStability) == 0x000018, "Wrong size on ItemToolTipWidget_Bp_C_GetAttachedStability");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetAttachedStability, ShooterWeapon_Trajectory) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_GetAttachedStability::ShooterWeapon_Trajectory' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetAttachedStability, Accuracy) == 0x000008, "Member 'ItemToolTipWidget_Bp_C_GetAttachedStability::Accuracy' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetAttachedStability, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'ItemToolTipWidget_Bp_C_GetAttachedStability::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetAttachedStability, CallFunc_GetCurrentStabilityVar_ReturnValue) == 0x000010, "Member 'ItemToolTipWidget_Bp_C_GetAttachedStability::CallFunc_GetCurrentStabilityVar_ReturnValue' has a wrong offset!");

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.GetAmmo
// 0x0010 (0x0010 - 0x0000)
struct ItemToolTipWidget_Bp_C_GetAmmo final
{
public:
	class UWeaponItem*                            WeaponItem;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         AmmoClip;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemToolTipWidget_Bp_C_GetAmmo) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_GetAmmo");
static_assert(sizeof(ItemToolTipWidget_Bp_C_GetAmmo) == 0x000010, "Wrong size on ItemToolTipWidget_Bp_C_GetAmmo");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetAmmo, WeaponItem) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_GetAmmo::WeaponItem' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetAmmo, AmmoClip) == 0x000008, "Member 'ItemToolTipWidget_Bp_C_GetAmmo::AmmoClip' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetAmmo, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'ItemToolTipWidget_Bp_C_GetAmmo::CallFunc_IsValid_ReturnValue' has a wrong offset!");

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.GetAttachedAmmo
// 0x00E0 (0x00E0 - 0x0000)
struct ItemToolTipWidget_Bp_C_GetAttachedAmmo final
{
public:
	class UWeaponItem*                            WeaponItem;                                        // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         AmmoClip;                                          // 0x0008(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D[0x3];                                        // 0x000D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UAttachableItem*                        CallFunc_GetAttachedItem_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponAttachmentData                  CallFunc_GetAttachmentData_ReturnValue;            // 0x0020(0x00B8)()
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x3];                                       // 0x00D9(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         Ammo;                                              // 0x00DC(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemToolTipWidget_Bp_C_GetAttachedAmmo) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_GetAttachedAmmo");
static_assert(sizeof(ItemToolTipWidget_Bp_C_GetAttachedAmmo) == 0x0000E0, "Wrong size on ItemToolTipWidget_Bp_C_GetAttachedAmmo");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetAttachedAmmo, WeaponItem) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_GetAttachedAmmo::WeaponItem' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetAttachedAmmo, AmmoClip) == 0x000008, "Member 'ItemToolTipWidget_Bp_C_GetAttachedAmmo::AmmoClip' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetAttachedAmmo, CallFunc_IsValid_ReturnValue) == 0x00000C, "Member 'ItemToolTipWidget_Bp_C_GetAttachedAmmo::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetAttachedAmmo, CallFunc_GetAttachedItem_ReturnValue) == 0x000010, "Member 'ItemToolTipWidget_Bp_C_GetAttachedAmmo::CallFunc_GetAttachedItem_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetAttachedAmmo, CallFunc_IsValid_ReturnValue2) == 0x000018, "Member 'ItemToolTipWidget_Bp_C_GetAttachedAmmo::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetAttachedAmmo, CallFunc_GetAttachmentData_ReturnValue) == 0x000020, "Member 'ItemToolTipWidget_Bp_C_GetAttachedAmmo::CallFunc_GetAttachmentData_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetAttachedAmmo, CallFunc_Greater_IntInt_ReturnValue) == 0x0000D8, "Member 'ItemToolTipWidget_Bp_C_GetAttachedAmmo::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetAttachedAmmo, Ammo) == 0x0000DC, "Member 'ItemToolTipWidget_Bp_C_GetAttachedAmmo::Ammo' has a wrong offset!");

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.OnUpdateVicinityOrInventorySlotItemToolTip
// 0x0158 (0x0158 - 0x0000)
struct ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip final
{
public:
	class UEquipableItem*                         EquipableItem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UEquipableItem*                         EquipmentSlotItem;                                 // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11[0x7];                                       // 0x0011(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponItem*                            K2Node_DynamicCast_AsWeapon_Item;                  // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_22[0x6];                                       // 0x0022(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_GetItemDetailedName_Name;                 // 0x0028(0x0018)()
	class ATslWeapon*                             CallFunc_GetShooterWeapon_ShooterWeapon;           // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslWeapon_Trajectory*                  CallFunc_GetShooterWeapon_ShooterWeapon_Trajectory; // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponItem*                            K2Node_DynamicCast_AsWeapon_Item2;                 // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWeaponFullRealoadTimeWithAttachments_ReturnValue; // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWeaponEffectiveRange_EffectRange;      // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetAttachedStability_Accuracy;            // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x2];                                       // 0x006A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWeaponPower_Damage;                    // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon*                             CallFunc_GetShooterWeapon_ShooterWeapon2;          // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslWeapon_Trajectory*                  CallFunc_GetShooterWeapon_ShooterWeapon_Trajectory2; // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UAmmoItem*                              CallFunc_GetDefaultAmmoObject_ReturnValue;         // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetAttachedStability_Accuracy2;           // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotInterface>        CallFunc_GetSlotName_self_CastInput;               // 0x0098(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_GetSlotName_ReturnValue;                  // 0x00A8(0x0018)()
	float                                         CallFunc_GetWeaponFullReloadTime_ReturnValue;      // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWeaponEffectiveRange_EffectRange2;     // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue6;                     // 0x00C8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue7;                     // 0x00C9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_CA[0x2];                                       // 0x00CA(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWeaponPower_Damage2;                   // 0x00CC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable2;                                 // 0x00D0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x00D1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x00D2(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable3;                                 // 0x00D3(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x00D4(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable4;                                 // 0x00D5(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D6[0x2];                                       // 0x00D6(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue;        // 0x00D8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue2;       // 0x00DC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue8;                     // 0x00E0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_E1[0x3];                                       // 0x00E1(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_GetAttachedAmmo_AmmoClip;                 // 0x00E4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFiringRate_FringRate;                  // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetAttachedAmmo_AmmoClip2;                // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x00F0(0x0018)()
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue3;       // 0x0108(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFiringRate_FringRate2;                 // 0x010C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable2;                                 // 0x0110(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_111[0x3];                                      // 0x0111(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue4;       // 0x0114(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable5;                                 // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable3;                                 // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select2_Default;                            // 0x011A(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable6;                                 // 0x011B(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue5;       // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select3_Default;                            // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue6;       // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue7;       // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   AmmoName;                                          // 0x0130(0x0018)(Edit)
	class UWeaponItem*                            EquipmentWeaponItem;                               // 0x0148(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponItem*                            WeaponItem;                                        // 0x0150(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip");
static_assert(sizeof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip) == 0x000158, "Wrong size on ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, EquipableItem) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::EquipableItem' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, EquipmentSlotItem) == 0x000008, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::EquipmentSlotItem' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, m__byte_Variable) == 0x000010, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, K2Node_DynamicCast_AsWeapon_Item) == 0x000018, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::K2Node_DynamicCast_AsWeapon_Item' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_IsValid_ReturnValue) == 0x000021, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetItemDetailedName_Name) == 0x000028, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetItemDetailedName_Name' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetShooterWeapon_ShooterWeapon) == 0x000040, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetShooterWeapon_ShooterWeapon' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetShooterWeapon_ShooterWeapon_Trajectory) == 0x000048, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetShooterWeapon_ShooterWeapon_Trajectory' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, K2Node_DynamicCast_AsWeapon_Item2) == 0x000050, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::K2Node_DynamicCast_AsWeapon_Item2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, K2Node_DynamicCast_bSuccess2) == 0x000058, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetWeaponFullRealoadTimeWithAttachments_ReturnValue) == 0x00005C, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetWeaponFullRealoadTimeWithAttachments_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetWeaponEffectiveRange_EffectRange) == 0x000060, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetWeaponEffectiveRange_EffectRange' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetAttachedStability_Accuracy) == 0x000064, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetAttachedStability_Accuracy' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_IsValid_ReturnValue2) == 0x000068, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_IsValid_ReturnValue3) == 0x000069, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetWeaponPower_Damage) == 0x00006C, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetWeaponPower_Damage' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_IsValid_ReturnValue4) == 0x000070, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetShooterWeapon_ShooterWeapon2) == 0x000078, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetShooterWeapon_ShooterWeapon2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetShooterWeapon_ShooterWeapon_Trajectory2) == 0x000080, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetShooterWeapon_ShooterWeapon_Trajectory2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetDefaultAmmoObject_ReturnValue) == 0x000088, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetDefaultAmmoObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetAttachedStability_Accuracy2) == 0x000090, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetAttachedStability_Accuracy2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_IsValid_ReturnValue5) == 0x000094, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetSlotName_self_CastInput) == 0x000098, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetSlotName_self_CastInput' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetSlotName_ReturnValue) == 0x0000A8, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetSlotName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetWeaponFullReloadTime_ReturnValue) == 0x0000C0, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetWeaponFullReloadTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetWeaponEffectiveRange_EffectRange2) == 0x0000C4, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetWeaponEffectiveRange_EffectRange2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_IsValid_ReturnValue6) == 0x0000C8, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_IsValid_ReturnValue6' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_IsValid_ReturnValue7) == 0x0000C9, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_IsValid_ReturnValue7' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetWeaponPower_Damage2) == 0x0000CC, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetWeaponPower_Damage2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, m__byte_Variable2) == 0x0000D0, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_Greater_FloatFloat_ReturnValue) == 0x0000D1, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, m__bool_Variable) == 0x0000D2, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, m__byte_Variable3) == 0x0000D3, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::m__byte_Variable3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, K2Node_Select_Default) == 0x0000D4, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, m__byte_Variable4) == 0x0000D5, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::m__byte_Variable4' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_SafeDivide_FloatFloat_ReturnValue) == 0x0000D8, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_SafeDivide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_SafeDivide_FloatFloat_ReturnValue2) == 0x0000DC, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_SafeDivide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_IsValid_ReturnValue8) == 0x0000E0, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_IsValid_ReturnValue8' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetAttachedAmmo_AmmoClip) == 0x0000E4, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetAttachedAmmo_AmmoClip' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetFiringRate_FringRate) == 0x0000E8, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetFiringRate_FringRate' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetAttachedAmmo_AmmoClip2) == 0x0000EC, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetAttachedAmmo_AmmoClip2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_Conv_IntToText_ReturnValue) == 0x0000F0, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_SafeDivide_FloatFloat_ReturnValue3) == 0x000108, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_SafeDivide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_GetFiringRate_FringRate2) == 0x00010C, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_GetFiringRate_FringRate2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, m__bool_Variable2) == 0x000110, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::m__bool_Variable2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_SafeDivide_FloatFloat_ReturnValue4) == 0x000114, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_SafeDivide_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, m__byte_Variable5) == 0x000118, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::m__byte_Variable5' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, m__bool_Variable3) == 0x000119, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::m__bool_Variable3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, K2Node_Select2_Default) == 0x00011A, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::K2Node_Select2_Default' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, m__byte_Variable6) == 0x00011B, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::m__byte_Variable6' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_SafeDivide_FloatFloat_ReturnValue5) == 0x00011C, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_SafeDivide_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, K2Node_Select3_Default) == 0x000120, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::K2Node_Select3_Default' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_SafeDivide_FloatFloat_ReturnValue6) == 0x000124, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_SafeDivide_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_Divide_FloatFloat_ReturnValue) == 0x000128, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, CallFunc_SafeDivide_FloatFloat_ReturnValue7) == 0x00012C, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::CallFunc_SafeDivide_FloatFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, AmmoName) == 0x000130, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::AmmoName' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, EquipmentWeaponItem) == 0x000148, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::EquipmentWeaponItem' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip, WeaponItem) == 0x000150, "Member 'ItemToolTipWidget_Bp_C_OnUpdateVicinityOrInventorySlotItemToolTip::WeaponItem' has a wrong offset!");

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.OnUpdateEquipmentSlotItemToolTip
// 0x0180 (0x0180 - 0x0000)
struct ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip final
{
public:
	class UEquipableItem*                         EquipableItem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              m__byte_Variable;                                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x7];                                        // 0x0009(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UThrowableItem*                         K2Node_DynamicCast_AsThrowable_Item;               // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon*                             CallFunc_GetEquippedWeapon_ReturnValue;            // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UWeaponItem*                            K2Node_DynamicCast_AsWeapon_Item;                  // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon*                             CallFunc_GetDefaultWeaponObject_ReturnValue;       // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWeaponFullRealoadTimeWithAttachments_ReturnValue; // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWeaponFullReloadTime_ReturnValue;      // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetStability_Accuracy;                    // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon_Trajectory*                  K2Node_DynamicCast_AsTsl_Weapon_Trajectory;        // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWeaponEffectiveRange_EffectRange;      // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWeaponEffectiveRange_EffectRange2;     // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetWeaponPower_Damage;                    // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_FloatFloat_ReturnValue;           // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_69[0x3];                                       // 0x0069(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue;        // 0x006C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslWeapon_Trajectory*                  K2Node_DynamicCast_AsTsl_Weapon_Trajectory2;       // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess4;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x3];                                       // 0x0079(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetWeaponPower_Damage2;                   // 0x007C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon*                             CallFunc_GetEquippedWeapon_ReturnValue2;           // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetAttachedStability_Accuracy;            // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue2;       // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue3;       // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue4;       // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Divide_FloatFloat_ReturnValue;            // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A4[0x4];                                       // 0x00A4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon*                             CallFunc_GetEquippedWeapon_ReturnValue3;           // 0x00A8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00B0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B1[0x7];                                       // 0x00B1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UAmmoItem*                              CallFunc_GetDefaultAmmoObject_ReturnValue;         // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TScriptInterface<class ISlotInterface>        CallFunc_GetSlotName_self_CastInput;               // 0x00C8(0x0010)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   CallFunc_GetSlotName_ReturnValue;                  // 0x00D8(0x0018)()
	int32                                         CallFunc_Subtract_IntInt_ReturnValue;              // 0x00F0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetFiringRate_FringRate;                  // 0x00F4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0100(0x0018)()
	ESlateVisibility                              m__byte_Variable2;                                 // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	ESlateVisibility                              K2Node_Select_Default;                             // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x2];                                      // 0x011A(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetFiringRate_FringRate2;                 // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetAttachedAmmo_AmmoClip;                 // 0x0120(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue5;       // 0x0124(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue6;       // 0x0128(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue7;       // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslWeapon_Trajectory*                  WeaponDefault_Trajectory;                          // 0x0130(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	class ATslWeapon*                             WeaponDefault;                                     // 0x0138(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	class FText                                   AmmoName;                                          // 0x0140(0x0018)(Edit)
	int32                                         AmmoGap;                                           // 0x0158(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         Ammo;                                              // 0x015C(0x0004)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslWeapon_Trajectory*                  Weapon_Trajectory;                                 // 0x0160(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	class ATslWeapon*                             Weapon;                                            // 0x0168(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	bool                                          bEquipmentWeaponToolTip;                           // 0x0170(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_171[0x7];                                      // 0x0171(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponItem*                            EquippedWeapon;                                    // 0x0178(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip");
static_assert(sizeof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip) == 0x000180, "Wrong size on ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, EquipableItem) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::EquipableItem' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, m__byte_Variable) == 0x000008, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::m__byte_Variable' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, K2Node_DynamicCast_AsThrowable_Item) == 0x000010, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::K2Node_DynamicCast_AsThrowable_Item' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, K2Node_DynamicCast_bSuccess) == 0x000018, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_GetEquippedWeapon_ReturnValue) == 0x000020, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_GetEquippedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, K2Node_DynamicCast_AsWeapon_Item) == 0x000028, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::K2Node_DynamicCast_AsWeapon_Item' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, K2Node_DynamicCast_bSuccess2) == 0x000030, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_GetDefaultWeaponObject_ReturnValue) == 0x000038, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_GetDefaultWeaponObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_GetWeaponFullRealoadTimeWithAttachments_ReturnValue) == 0x000040, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_GetWeaponFullRealoadTimeWithAttachments_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_GetWeaponFullReloadTime_ReturnValue) == 0x000044, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_GetWeaponFullReloadTime_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_GetStability_Accuracy) == 0x000048, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_GetStability_Accuracy' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, K2Node_DynamicCast_AsTsl_Weapon_Trajectory) == 0x000050, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::K2Node_DynamicCast_AsTsl_Weapon_Trajectory' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, K2Node_DynamicCast_bSuccess3) == 0x000058, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_GetWeaponEffectiveRange_EffectRange) == 0x00005C, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_GetWeaponEffectiveRange_EffectRange' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_GetWeaponEffectiveRange_EffectRange2) == 0x000060, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_GetWeaponEffectiveRange_EffectRange2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_GetWeaponPower_Damage) == 0x000064, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_GetWeaponPower_Damage' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_Greater_FloatFloat_ReturnValue) == 0x000068, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_Greater_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_SafeDivide_FloatFloat_ReturnValue) == 0x00006C, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_SafeDivide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, K2Node_DynamicCast_AsTsl_Weapon_Trajectory2) == 0x000070, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::K2Node_DynamicCast_AsTsl_Weapon_Trajectory2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, K2Node_DynamicCast_bSuccess4) == 0x000078, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::K2Node_DynamicCast_bSuccess4' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_GetWeaponPower_Damage2) == 0x00007C, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_GetWeaponPower_Damage2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_IsValid_ReturnValue) == 0x000080, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_GetEquippedWeapon_ReturnValue2) == 0x000088, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_GetEquippedWeapon_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_GetAttachedStability_Accuracy) == 0x000090, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_GetAttachedStability_Accuracy' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_SafeDivide_FloatFloat_ReturnValue2) == 0x000094, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_SafeDivide_FloatFloat_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_SafeDivide_FloatFloat_ReturnValue3) == 0x000098, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_SafeDivide_FloatFloat_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_SafeDivide_FloatFloat_ReturnValue4) == 0x00009C, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_SafeDivide_FloatFloat_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_Divide_FloatFloat_ReturnValue) == 0x0000A0, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_Divide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_GetEquippedWeapon_ReturnValue3) == 0x0000A8, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_GetEquippedWeapon_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_IsValid_ReturnValue2) == 0x0000B0, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_GetDefaultAmmoObject_ReturnValue) == 0x0000B8, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_GetDefaultAmmoObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_IsValid_ReturnValue3) == 0x0000C0, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_GetSlotName_self_CastInput) == 0x0000C8, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_GetSlotName_self_CastInput' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_GetSlotName_ReturnValue) == 0x0000D8, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_GetSlotName_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_Subtract_IntInt_ReturnValue) == 0x0000F0, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_Subtract_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_GetFiringRate_FringRate) == 0x0000F4, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_GetFiringRate_FringRate' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, m__bool_Variable) == 0x0000F8, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_Conv_IntToText_ReturnValue) == 0x000100, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, m__byte_Variable2) == 0x000118, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::m__byte_Variable2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, K2Node_Select_Default) == 0x000119, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::K2Node_Select_Default' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_GetFiringRate_FringRate2) == 0x00011C, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_GetFiringRate_FringRate2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_GetAttachedAmmo_AmmoClip) == 0x000120, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_GetAttachedAmmo_AmmoClip' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_SafeDivide_FloatFloat_ReturnValue5) == 0x000124, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_SafeDivide_FloatFloat_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_SafeDivide_FloatFloat_ReturnValue6) == 0x000128, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_SafeDivide_FloatFloat_ReturnValue6' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, CallFunc_SafeDivide_FloatFloat_ReturnValue7) == 0x00012C, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::CallFunc_SafeDivide_FloatFloat_ReturnValue7' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, WeaponDefault_Trajectory) == 0x000130, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::WeaponDefault_Trajectory' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, WeaponDefault) == 0x000138, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::WeaponDefault' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, AmmoName) == 0x000140, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::AmmoName' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, AmmoGap) == 0x000158, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::AmmoGap' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, Ammo) == 0x00015C, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::Ammo' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, Weapon_Trajectory) == 0x000160, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::Weapon_Trajectory' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, Weapon) == 0x000168, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::Weapon' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, bEquipmentWeaponToolTip) == 0x000170, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::bEquipmentWeaponToolTip' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip, EquippedWeapon) == 0x000178, "Member 'ItemToolTipWidget_Bp_C_OnUpdateEquipmentSlotItemToolTip::EquippedWeapon' has a wrong offset!");

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.GetShooterWeapon
// 0x0088 (0x0088 - 0x0000)
struct ItemToolTipWidget_Bp_C_GetShooterWeapon final
{
public:
	class UEquipableItem*                         EquipableItem;                                     // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslWeapon*                             ShooterWeapon;                                     // 0x0008(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslWeapon_Trajectory*                  ShooterWeapon_Trajectory;                          // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0018(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_19[0x7];                                       // 0x0019(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UThrowableItem*                         K2Node_DynamicCast_AsThrowable_Item;               // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0028(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_29[0x7];                                       // 0x0029(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon*                             CallFunc_GetDefaultWeaponObject_ReturnValue;       // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslWeapon*                             CallFunc_GetEquippedWeapon_ReturnValue;            // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x7];                                       // 0x0041(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UWeaponItem*                            K2Node_DynamicCast_AsWeapon_Item;                  // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon*                             CallFunc_GetEquippedWeapon_ReturnValue2;           // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslWeapon*                             CallFunc_GetDefaultWeaponObject_ReturnValue2;      // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0068(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0069(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_6A[0x6];                                       // 0x006A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon_Trajectory*                  K2Node_DynamicCast_AsTsl_Weapon_Trajectory;        // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x0078(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_79[0x7];                                       // 0x0079(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslWeapon*                             NewLocalVar_0;                                     // 0x0080(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemToolTipWidget_Bp_C_GetShooterWeapon) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_GetShooterWeapon");
static_assert(sizeof(ItemToolTipWidget_Bp_C_GetShooterWeapon) == 0x000088, "Wrong size on ItemToolTipWidget_Bp_C_GetShooterWeapon");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetShooterWeapon, EquipableItem) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_GetShooterWeapon::EquipableItem' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetShooterWeapon, ShooterWeapon) == 0x000008, "Member 'ItemToolTipWidget_Bp_C_GetShooterWeapon::ShooterWeapon' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetShooterWeapon, ShooterWeapon_Trajectory) == 0x000010, "Member 'ItemToolTipWidget_Bp_C_GetShooterWeapon::ShooterWeapon_Trajectory' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetShooterWeapon, CallFunc_IsValid_ReturnValue) == 0x000018, "Member 'ItemToolTipWidget_Bp_C_GetShooterWeapon::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetShooterWeapon, K2Node_DynamicCast_AsThrowable_Item) == 0x000020, "Member 'ItemToolTipWidget_Bp_C_GetShooterWeapon::K2Node_DynamicCast_AsThrowable_Item' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetShooterWeapon, K2Node_DynamicCast_bSuccess) == 0x000028, "Member 'ItemToolTipWidget_Bp_C_GetShooterWeapon::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetShooterWeapon, CallFunc_GetDefaultWeaponObject_ReturnValue) == 0x000030, "Member 'ItemToolTipWidget_Bp_C_GetShooterWeapon::CallFunc_GetDefaultWeaponObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetShooterWeapon, CallFunc_GetEquippedWeapon_ReturnValue) == 0x000038, "Member 'ItemToolTipWidget_Bp_C_GetShooterWeapon::CallFunc_GetEquippedWeapon_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetShooterWeapon, CallFunc_IsValid_ReturnValue2) == 0x000040, "Member 'ItemToolTipWidget_Bp_C_GetShooterWeapon::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetShooterWeapon, K2Node_DynamicCast_AsWeapon_Item) == 0x000048, "Member 'ItemToolTipWidget_Bp_C_GetShooterWeapon::K2Node_DynamicCast_AsWeapon_Item' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetShooterWeapon, K2Node_DynamicCast_bSuccess2) == 0x000050, "Member 'ItemToolTipWidget_Bp_C_GetShooterWeapon::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetShooterWeapon, CallFunc_GetEquippedWeapon_ReturnValue2) == 0x000058, "Member 'ItemToolTipWidget_Bp_C_GetShooterWeapon::CallFunc_GetEquippedWeapon_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetShooterWeapon, CallFunc_GetDefaultWeaponObject_ReturnValue2) == 0x000060, "Member 'ItemToolTipWidget_Bp_C_GetShooterWeapon::CallFunc_GetDefaultWeaponObject_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetShooterWeapon, CallFunc_IsValid_ReturnValue3) == 0x000068, "Member 'ItemToolTipWidget_Bp_C_GetShooterWeapon::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetShooterWeapon, CallFunc_IsValid_ReturnValue4) == 0x000069, "Member 'ItemToolTipWidget_Bp_C_GetShooterWeapon::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetShooterWeapon, K2Node_DynamicCast_AsTsl_Weapon_Trajectory) == 0x000070, "Member 'ItemToolTipWidget_Bp_C_GetShooterWeapon::K2Node_DynamicCast_AsTsl_Weapon_Trajectory' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetShooterWeapon, K2Node_DynamicCast_bSuccess3) == 0x000078, "Member 'ItemToolTipWidget_Bp_C_GetShooterWeapon::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetShooterWeapon, NewLocalVar_0) == 0x000080, "Member 'ItemToolTipWidget_Bp_C_GetShooterWeapon::NewLocalVar_0' has a wrong offset!");

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.GetFiringRate
// 0x00C0 (0x00C0 - 0x0000)
struct ItemToolTipWidget_Bp_C_GetFiringRate final
{
public:
	class ATslWeapon_Trajectory*                  ShooterWeapon_Trajectory;                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         AmmoClip;                                          // 0x0008(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         FullReloadingTime;                                 // 0x000C(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         FringRate;                                         // 0x0010(0x0004)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0014(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_15[0x3];                                       // 0x0015(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Conv_IntToFloat_ReturnValue;              // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue;        // 0x001C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_21[0x7];                                       // 0x0021(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FWeaponGunData                         CallFunc_GetWeaponGunConfig_ReturnValue;           // 0x0028(0x0090)()
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x00B8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_SafeDivide_FloatFloat_ReturnValue2;       // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemToolTipWidget_Bp_C_GetFiringRate) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_GetFiringRate");
static_assert(sizeof(ItemToolTipWidget_Bp_C_GetFiringRate) == 0x0000C0, "Wrong size on ItemToolTipWidget_Bp_C_GetFiringRate");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetFiringRate, ShooterWeapon_Trajectory) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_GetFiringRate::ShooterWeapon_Trajectory' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetFiringRate, AmmoClip) == 0x000008, "Member 'ItemToolTipWidget_Bp_C_GetFiringRate::AmmoClip' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetFiringRate, FullReloadingTime) == 0x00000C, "Member 'ItemToolTipWidget_Bp_C_GetFiringRate::FullReloadingTime' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetFiringRate, FringRate) == 0x000010, "Member 'ItemToolTipWidget_Bp_C_GetFiringRate::FringRate' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetFiringRate, CallFunc_Greater_IntInt_ReturnValue) == 0x000014, "Member 'ItemToolTipWidget_Bp_C_GetFiringRate::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetFiringRate, CallFunc_Conv_IntToFloat_ReturnValue) == 0x000018, "Member 'ItemToolTipWidget_Bp_C_GetFiringRate::CallFunc_Conv_IntToFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetFiringRate, CallFunc_SafeDivide_FloatFloat_ReturnValue) == 0x00001C, "Member 'ItemToolTipWidget_Bp_C_GetFiringRate::CallFunc_SafeDivide_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetFiringRate, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'ItemToolTipWidget_Bp_C_GetFiringRate::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetFiringRate, CallFunc_GetWeaponGunConfig_ReturnValue) == 0x000028, "Member 'ItemToolTipWidget_Bp_C_GetFiringRate::CallFunc_GetWeaponGunConfig_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetFiringRate, CallFunc_Add_FloatFloat_ReturnValue) == 0x0000B8, "Member 'ItemToolTipWidget_Bp_C_GetFiringRate::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetFiringRate, CallFunc_SafeDivide_FloatFloat_ReturnValue2) == 0x0000BC, "Member 'ItemToolTipWidget_Bp_C_GetFiringRate::CallFunc_SafeDivide_FloatFloat_ReturnValue2' has a wrong offset!");

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.On_MagazineIcon_Prepass_0
// 0x0008 (0x0008 - 0x0000)
struct ItemToolTipWidget_Bp_C_On_MagazineIcon_Prepass_0 final
{
public:
	class UWidget*                                BoundWidget;                                       // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemToolTipWidget_Bp_C_On_MagazineIcon_Prepass_0) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_On_MagazineIcon_Prepass_0");
static_assert(sizeof(ItemToolTipWidget_Bp_C_On_MagazineIcon_Prepass_0) == 0x000008, "Wrong size on ItemToolTipWidget_Bp_C_On_MagazineIcon_Prepass_0");
static_assert(offsetof(ItemToolTipWidget_Bp_C_On_MagazineIcon_Prepass_0, BoundWidget) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_On_MagazineIcon_Prepass_0::BoundWidget' has a wrong offset!");

// Function ItemToolTipWidget_Bp.ItemToolTipWidget_Bp_C.GetItemDetailedName
// 0x0028 (0x0028 - 0x0000)
struct ItemToolTipWidget_Bp_C_GetItemDetailedName final
{
public:
	class UEquipableItem*                         NewParam;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class FText                                   Name_0;                                            // 0x0008(0x0018)(Parm, OutParm)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ItemToolTipWidget_Bp_C_GetItemDetailedName) == 0x000008, "Wrong alignment on ItemToolTipWidget_Bp_C_GetItemDetailedName");
static_assert(sizeof(ItemToolTipWidget_Bp_C_GetItemDetailedName) == 0x000028, "Wrong size on ItemToolTipWidget_Bp_C_GetItemDetailedName");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetItemDetailedName, NewParam) == 0x000000, "Member 'ItemToolTipWidget_Bp_C_GetItemDetailedName::NewParam' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetItemDetailedName, Name_0) == 0x000008, "Member 'ItemToolTipWidget_Bp_C_GetItemDetailedName::Name_0' has a wrong offset!");
static_assert(offsetof(ItemToolTipWidget_Bp_C_GetItemDetailedName, CallFunc_IsValid_ReturnValue) == 0x000020, "Member 'ItemToolTipWidget_Bp_C_GetItemDetailedName::CallFunc_IsValid_ReturnValue' has a wrong offset!");

}

