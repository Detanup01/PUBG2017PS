#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: PlayerListWidget

#include "Basic.hpp"

#include "SlateCore_structs.hpp"
#include "UMG_structs.hpp"
#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function PlayerListWidget.PlayerListWidget_C.ExecuteUbergraph_PlayerListWidget
// 0x0178 (0x0178 - 0x0000)
struct PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0008(0x0010)(ZeroConstructor, NoDestructor)
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate2;             // 0x0018(0x0010)(ZeroConstructor, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float Scale)>                  K2Node_CreateDelegate_OutputDelegate3;             // 0x0030(0x0010)(ZeroConstructor, NoDestructor)
	class ATslPlayerController*                   CallFunc_GetOwningTslPlayerController_ReturnValue; // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ASpectatorPawn*                         CallFunc_GetSpectatorPawn_ReturnValue;             // 0x0048(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslSpectatorPawn*                      K2Node_DynamicCast_AsTsl_Spectator_Pawn;           // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_59[0x3];                                       // 0x0059(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FGeometry                              K2Node_Event_MyGeometry;                           // 0x005C(0x0034)(IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_InDeltaTime;                          // 0x0090(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_ComponentBoundEvent_NewDistance;            // 0x0094(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_ComponentBoundEvent_Value;                  // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9C[0x4];                                       // 0x009C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void(float Scale)>                  K2Node_CreateDelegate_OutputDelegate4;             // 0x00A0(0x0010)(ZeroConstructor, NoDestructor)
	float                                         K2Node_CustomEvent_Scale2;                         // 0x00B0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_B4[0x4];                                       // 0x00B4(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslPlayerController*                   CallFunc_GetOwningTslPlayerController_ReturnValue2; // 0x00B8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate5;             // 0x00C8(0x0010)(ZeroConstructor, NoDestructor)
	struct FTimerHandle                           CallFunc_K2_SetTimerDelegate_ReturnValue;          // 0x00D8(0x0008)()
	class ASpectatorPawn*                         CallFunc_GetSpectatorPawn_ReturnValue2;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_CustomEvent_Scale;                          // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_EC[0x4];                                       // 0x00EC(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslPlayerController*                   CallFunc_GetOwningTslPlayerController_ReturnValue3; // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00F8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_F9[0x7];                                       // 0x00F9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpectatorPawn*                         CallFunc_GetSpectatorPawn_ReturnValue3;            // 0x0100(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue2;             // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetMousePosition_LocationX;               // 0x0118(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetMousePosition_LocationY;               // 0x011C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GetMousePosition_ReturnValue;             // 0x0120(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_121[0x3];                                      // 0x0121(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0124(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_X;                          // 0x012C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector2D_Y;                          // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_FTrunc_ReturnValue;                       // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_FTrunc_ReturnValue2;                      // 0x0138(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_13C[0x4];                                      // 0x013C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue3;             // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue4;             // 0x0148(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_CheckChangeList_bChange;                  // 0x0150(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_151[0x7];                                      // 0x0151(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslPlayerController*                   CallFunc_GetOwningTslPlayerController_ReturnValue4; // 0x0158(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ASpectatorPawn*                         CallFunc_GetSpectatorPawn_ReturnValue4;            // 0x0160(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslSpectatorPawn*                      K2Node_DynamicCast_AsTsl_Spectator_Pawn2;          // 0x0168(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0170(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget) == 0x000008, "Wrong alignment on PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget");
static_assert(sizeof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget) == 0x000178, "Wrong size on PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, EntryPoint) == 0x000000, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::EntryPoint' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, K2Node_CreateDelegate_OutputDelegate) == 0x000008, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, K2Node_CreateDelegate_OutputDelegate2) == 0x000018, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::K2Node_CreateDelegate_OutputDelegate2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x00002C, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, K2Node_CreateDelegate_OutputDelegate3) == 0x000030, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::K2Node_CreateDelegate_OutputDelegate3' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_GetOwningTslPlayerController_ReturnValue) == 0x000040, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_GetOwningTslPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_GetSpectatorPawn_ReturnValue) == 0x000048, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_GetSpectatorPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, K2Node_DynamicCast_AsTsl_Spectator_Pawn) == 0x000050, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::K2Node_DynamicCast_AsTsl_Spectator_Pawn' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, K2Node_DynamicCast_bSuccess) == 0x000058, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, K2Node_Event_MyGeometry) == 0x00005C, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::K2Node_Event_MyGeometry' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, K2Node_Event_InDeltaTime) == 0x000090, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::K2Node_Event_InDeltaTime' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, K2Node_ComponentBoundEvent_NewDistance) == 0x000094, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::K2Node_ComponentBoundEvent_NewDistance' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, K2Node_ComponentBoundEvent_Value) == 0x000098, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::K2Node_ComponentBoundEvent_Value' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, K2Node_CreateDelegate_OutputDelegate4) == 0x0000A0, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::K2Node_CreateDelegate_OutputDelegate4' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, K2Node_CustomEvent_Scale2) == 0x0000B0, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::K2Node_CustomEvent_Scale2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_GetOwningTslPlayerController_ReturnValue2) == 0x0000B8, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_GetOwningTslPlayerController_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_IsValid_ReturnValue) == 0x0000C0, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, K2Node_CreateDelegate_OutputDelegate5) == 0x0000C8, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::K2Node_CreateDelegate_OutputDelegate5' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_K2_SetTimerDelegate_ReturnValue) == 0x0000D8, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_K2_SetTimerDelegate_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_GetSpectatorPawn_ReturnValue2) == 0x0000E0, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_GetSpectatorPawn_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, K2Node_CustomEvent_Scale) == 0x0000E8, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::K2Node_CustomEvent_Scale' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_GetOwningTslPlayerController_ReturnValue3) == 0x0000F0, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_GetOwningTslPlayerController_ReturnValue3' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_IsValid_ReturnValue2) == 0x0000F8, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_GetSpectatorPawn_ReturnValue3) == 0x000100, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_GetSpectatorPawn_ReturnValue3' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_GetOwningPlayer_ReturnValue) == 0x000108, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_GetOwningPlayer_ReturnValue2) == 0x000110, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_GetOwningPlayer_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_GetMousePosition_LocationX) == 0x000118, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_GetMousePosition_LocationX' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_GetMousePosition_LocationY) == 0x00011C, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_GetMousePosition_LocationY' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_GetMousePosition_ReturnValue) == 0x000120, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_GetMousePosition_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_MakeVector2D_ReturnValue) == 0x000124, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_BreakVector2D_X) == 0x00012C, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_BreakVector2D_X' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_BreakVector2D_Y) == 0x000130, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_BreakVector2D_Y' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_FTrunc_ReturnValue) == 0x000134, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_FTrunc_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_FTrunc_ReturnValue2) == 0x000138, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_FTrunc_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_GetOwningPlayer_ReturnValue3) == 0x000140, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_GetOwningPlayer_ReturnValue3' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_GetOwningPlayer_ReturnValue4) == 0x000148, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_GetOwningPlayer_ReturnValue4' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_CheckChangeList_bChange) == 0x000150, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_CheckChangeList_bChange' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_GetOwningTslPlayerController_ReturnValue4) == 0x000158, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_GetOwningTslPlayerController_ReturnValue4' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, CallFunc_GetSpectatorPawn_ReturnValue4) == 0x000160, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::CallFunc_GetSpectatorPawn_ReturnValue4' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, K2Node_DynamicCast_AsTsl_Spectator_Pawn2) == 0x000168, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::K2Node_DynamicCast_AsTsl_Spectator_Pawn2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget, K2Node_DynamicCast_bSuccess2) == 0x000170, "Member 'PlayerListWidget_C_ExecuteUbergraph_PlayerListWidget::K2Node_DynamicCast_bSuccess2' has a wrong offset!");

// Function PlayerListWidget.PlayerListWidget_C.OnLookUp
// 0x0004 (0x0004 - 0x0000)
struct PlayerListWidget_C_OnLookUp final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListWidget_C_OnLookUp) == 0x000004, "Wrong alignment on PlayerListWidget_C_OnLookUp");
static_assert(sizeof(PlayerListWidget_C_OnLookUp) == 0x000004, "Wrong size on PlayerListWidget_C_OnLookUp");
static_assert(offsetof(PlayerListWidget_C_OnLookUp, Scale) == 0x000000, "Member 'PlayerListWidget_C_OnLookUp::Scale' has a wrong offset!");

// Function PlayerListWidget.PlayerListWidget_C.OnTurn
// 0x0004 (0x0004 - 0x0000)
struct PlayerListWidget_C_OnTurn final
{
public:
	float                                         Scale;                                             // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListWidget_C_OnTurn) == 0x000004, "Wrong alignment on PlayerListWidget_C_OnTurn");
static_assert(sizeof(PlayerListWidget_C_OnTurn) == 0x000004, "Wrong size on PlayerListWidget_C_OnTurn");
static_assert(offsetof(PlayerListWidget_C_OnTurn, Scale) == 0x000000, "Member 'PlayerListWidget_C_OnTurn::Scale' has a wrong offset!");

// Function PlayerListWidget.PlayerListWidget_C.BndEvt__DistanceSliderWidget_K2Node_ComponentBoundEvent_81_ChagedDistance__DelegateSignature
// 0x0008 (0x0008 - 0x0000)
struct PlayerListWidget_C_BndEvt__DistanceSliderWidget_K2Node_ComponentBoundEvent_81_ChagedDistance__DelegateSignature final
{
public:
	float                                         NewDistance;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         Value;                                             // 0x0004(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListWidget_C_BndEvt__DistanceSliderWidget_K2Node_ComponentBoundEvent_81_ChagedDistance__DelegateSignature) == 0x000004, "Wrong alignment on PlayerListWidget_C_BndEvt__DistanceSliderWidget_K2Node_ComponentBoundEvent_81_ChagedDistance__DelegateSignature");
static_assert(sizeof(PlayerListWidget_C_BndEvt__DistanceSliderWidget_K2Node_ComponentBoundEvent_81_ChagedDistance__DelegateSignature) == 0x000008, "Wrong size on PlayerListWidget_C_BndEvt__DistanceSliderWidget_K2Node_ComponentBoundEvent_81_ChagedDistance__DelegateSignature");
static_assert(offsetof(PlayerListWidget_C_BndEvt__DistanceSliderWidget_K2Node_ComponentBoundEvent_81_ChagedDistance__DelegateSignature, NewDistance) == 0x000000, "Member 'PlayerListWidget_C_BndEvt__DistanceSliderWidget_K2Node_ComponentBoundEvent_81_ChagedDistance__DelegateSignature::NewDistance' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_BndEvt__DistanceSliderWidget_K2Node_ComponentBoundEvent_81_ChagedDistance__DelegateSignature, Value) == 0x000004, "Member 'PlayerListWidget_C_BndEvt__DistanceSliderWidget_K2Node_ComponentBoundEvent_81_ChagedDistance__DelegateSignature::Value' has a wrong offset!");

// Function PlayerListWidget.PlayerListWidget_C.Tick
// 0x0038 (0x0038 - 0x0000)
struct PlayerListWidget_C_Tick final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	float                                         InDeltaTime;                                       // 0x0034(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListWidget_C_Tick) == 0x000004, "Wrong alignment on PlayerListWidget_C_Tick");
static_assert(sizeof(PlayerListWidget_C_Tick) == 0x000038, "Wrong size on PlayerListWidget_C_Tick");
static_assert(offsetof(PlayerListWidget_C_Tick, MyGeometry) == 0x000000, "Member 'PlayerListWidget_C_Tick::MyGeometry' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_Tick, InDeltaTime) == 0x000034, "Member 'PlayerListWidget_C_Tick::InDeltaTime' has a wrong offset!");

// Function PlayerListWidget.PlayerListWidget_C.RefreshList
// 0x0068 (0x0068 - 0x0000)
struct PlayerListWidget_C_RefreshList final
{
public:
	int32                                         m__int_Array_Index_Variable;                       // 0x0000(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ATslCharacter*>                  CallFunc_GetSortedReplicateCharactersBySpectatorPawnDistance_ReturnValue; // 0x0008(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         m__int_Array_Index_Variable2;                      // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1C[0x4];                                       // 0x001C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerGroupWidget_C*                   CallFunc_Array_Get_Item;                           // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPlayerInfoWidget_C*                    CallFunc_Array_Get_Item2;                          // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0038(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x003C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_3D[0x3];                                       // 0x003D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable2;                     // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          RefCharacter;                                      // 0x0050(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	TArray<class ATslCharacter*>                  Teamp;                                             // 0x0058(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate)
};
static_assert(alignof(PlayerListWidget_C_RefreshList) == 0x000008, "Wrong alignment on PlayerListWidget_C_RefreshList");
static_assert(sizeof(PlayerListWidget_C_RefreshList) == 0x000068, "Wrong size on PlayerListWidget_C_RefreshList");
static_assert(offsetof(PlayerListWidget_C_RefreshList, m__int_Array_Index_Variable) == 0x000000, "Member 'PlayerListWidget_C_RefreshList::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_RefreshList, CallFunc_GetSortedReplicateCharactersBySpectatorPawnDistance_ReturnValue) == 0x000008, "Member 'PlayerListWidget_C_RefreshList::CallFunc_GetSortedReplicateCharactersBySpectatorPawnDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_RefreshList, m__int_Array_Index_Variable2) == 0x000018, "Member 'PlayerListWidget_C_RefreshList::m__int_Array_Index_Variable2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_RefreshList, CallFunc_Array_Get_Item) == 0x000020, "Member 'PlayerListWidget_C_RefreshList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_RefreshList, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'PlayerListWidget_C_RefreshList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_RefreshList, m__int_Loop_Counter_Variable) == 0x00002C, "Member 'PlayerListWidget_C_RefreshList::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_RefreshList, CallFunc_Array_Get_Item2) == 0x000030, "Member 'PlayerListWidget_C_RefreshList::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_RefreshList, CallFunc_Array_Length_ReturnValue2) == 0x000038, "Member 'PlayerListWidget_C_RefreshList::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_RefreshList, CallFunc_Less_IntInt_ReturnValue) == 0x00003C, "Member 'PlayerListWidget_C_RefreshList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_RefreshList, CallFunc_Add_IntInt_ReturnValue) == 0x000040, "Member 'PlayerListWidget_C_RefreshList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_RefreshList, m__int_Loop_Counter_Variable2) == 0x000044, "Member 'PlayerListWidget_C_RefreshList::m__int_Loop_Counter_Variable2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_RefreshList, CallFunc_Less_IntInt_ReturnValue2) == 0x000048, "Member 'PlayerListWidget_C_RefreshList::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_RefreshList, CallFunc_Add_IntInt_ReturnValue2) == 0x00004C, "Member 'PlayerListWidget_C_RefreshList::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_RefreshList, RefCharacter) == 0x000050, "Member 'PlayerListWidget_C_RefreshList::RefCharacter' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_RefreshList, Teamp) == 0x000058, "Member 'PlayerListWidget_C_RefreshList::Teamp' has a wrong offset!");

// Function PlayerListWidget.PlayerListWidget_C.CreateOrUpdatePlayerInfo
// 0x0040 (0x0040 - 0x0000)
struct PlayerListWidget_C_CreateOrUpdatePlayerInfo final
{
public:
	int32                                         IndexToTest;                                       // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          Character;                                         // 0x0008(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPlayerInfoWidget_C*                    ReturnValue;                                       // 0x0010(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
	class UPlayerInfoWidget_C*                    CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_24[0x4];                                       // 0x0024(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInfoWidget_C*                    CallFunc_Create_ReturnValue;                       // 0x0028(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInfoWidget_C*                    Temp;                                              // 0x0038(0x0008)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListWidget_C_CreateOrUpdatePlayerInfo) == 0x000008, "Wrong alignment on PlayerListWidget_C_CreateOrUpdatePlayerInfo");
static_assert(sizeof(PlayerListWidget_C_CreateOrUpdatePlayerInfo) == 0x000040, "Wrong size on PlayerListWidget_C_CreateOrUpdatePlayerInfo");
static_assert(offsetof(PlayerListWidget_C_CreateOrUpdatePlayerInfo, IndexToTest) == 0x000000, "Member 'PlayerListWidget_C_CreateOrUpdatePlayerInfo::IndexToTest' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CreateOrUpdatePlayerInfo, Character) == 0x000008, "Member 'PlayerListWidget_C_CreateOrUpdatePlayerInfo::Character' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CreateOrUpdatePlayerInfo, ReturnValue) == 0x000010, "Member 'PlayerListWidget_C_CreateOrUpdatePlayerInfo::ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CreateOrUpdatePlayerInfo, CallFunc_Array_Get_Item) == 0x000018, "Member 'PlayerListWidget_C_CreateOrUpdatePlayerInfo::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CreateOrUpdatePlayerInfo, CallFunc_Array_Add_ReturnValue) == 0x000020, "Member 'PlayerListWidget_C_CreateOrUpdatePlayerInfo::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CreateOrUpdatePlayerInfo, CallFunc_Create_ReturnValue) == 0x000028, "Member 'PlayerListWidget_C_CreateOrUpdatePlayerInfo::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CreateOrUpdatePlayerInfo, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000030, "Member 'PlayerListWidget_C_CreateOrUpdatePlayerInfo::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CreateOrUpdatePlayerInfo, Temp) == 0x000038, "Member 'PlayerListWidget_C_CreateOrUpdatePlayerInfo::Temp' has a wrong offset!");

// Function PlayerListWidget.PlayerListWidget_C.CheckUpdate
// 0x0068 (0x0068 - 0x0000)
struct PlayerListWidget_C_CheckUpdate final
{
public:
	bool                                          m__bool_True_if_break_was_hit_Variable;            // 0x0000(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x0008(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9[0x3];                                        // 0x0009(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Loop_Counter_Variable;                      // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_14[0x4];                                       // 0x0014(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ATslCharacter*>                  CallFunc_GetPlayersInDistance_PlayerList;          // 0x0018(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x002C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x0030(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_31[0x7];                                       // 0x0031(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_Array_Get_Item;                           // 0x0038(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x0040(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_41[0x3];                                       // 0x0041(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0044(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_EqualEqual_IntInt_ReturnValue;            // 0x0048(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_49[0x3];                                       // 0x0049(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x004C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0050(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_51[0x7];                                       // 0x0051(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ATslCharacter*>                  Temp;                                              // 0x0058(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate)
};
static_assert(alignof(PlayerListWidget_C_CheckUpdate) == 0x000008, "Wrong alignment on PlayerListWidget_C_CheckUpdate");
static_assert(sizeof(PlayerListWidget_C_CheckUpdate) == 0x000068, "Wrong size on PlayerListWidget_C_CheckUpdate");
static_assert(offsetof(PlayerListWidget_C_CheckUpdate, m__bool_True_if_break_was_hit_Variable) == 0x000000, "Member 'PlayerListWidget_C_CheckUpdate::m__bool_True_if_break_was_hit_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckUpdate, m__int_Array_Index_Variable) == 0x000004, "Member 'PlayerListWidget_C_CheckUpdate::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckUpdate, CallFunc_Not_PreBool_ReturnValue) == 0x000008, "Member 'PlayerListWidget_C_CheckUpdate::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckUpdate, m__int_Loop_Counter_Variable) == 0x00000C, "Member 'PlayerListWidget_C_CheckUpdate::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckUpdate, CallFunc_Add_IntInt_ReturnValue) == 0x000010, "Member 'PlayerListWidget_C_CheckUpdate::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckUpdate, CallFunc_GetPlayersInDistance_PlayerList) == 0x000018, "Member 'PlayerListWidget_C_CheckUpdate::CallFunc_GetPlayersInDistance_PlayerList' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckUpdate, CallFunc_Array_Length_ReturnValue) == 0x000028, "Member 'PlayerListWidget_C_CheckUpdate::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckUpdate, CallFunc_Array_Length_ReturnValue2) == 0x00002C, "Member 'PlayerListWidget_C_CheckUpdate::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckUpdate, CallFunc_Less_IntInt_ReturnValue) == 0x000030, "Member 'PlayerListWidget_C_CheckUpdate::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckUpdate, CallFunc_Array_Get_Item) == 0x000038, "Member 'PlayerListWidget_C_CheckUpdate::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckUpdate, CallFunc_BooleanAND_ReturnValue) == 0x000040, "Member 'PlayerListWidget_C_CheckUpdate::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckUpdate, CallFunc_Array_Find_ReturnValue) == 0x000044, "Member 'PlayerListWidget_C_CheckUpdate::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckUpdate, CallFunc_EqualEqual_IntInt_ReturnValue) == 0x000048, "Member 'PlayerListWidget_C_CheckUpdate::CallFunc_EqualEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckUpdate, CallFunc_Array_Length_ReturnValue3) == 0x00004C, "Member 'PlayerListWidget_C_CheckUpdate::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckUpdate, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000050, "Member 'PlayerListWidget_C_CheckUpdate::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckUpdate, Temp) == 0x000058, "Member 'PlayerListWidget_C_CheckUpdate::Temp' has a wrong offset!");

// Function PlayerListWidget.PlayerListWidget_C.UpdatePlayerList
// 0x0158 (0x0158 - 0x0000)
struct PlayerListWidget_C_UpdatePlayerList final
{
public:
	float                                         InputPin;                                          // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Variable;                                   // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_IntInt_ReturnValue;             // 0x000C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          m__bool_Variable;                                  // 0x000D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue;                  // 0x000E(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_BooleanAND_ReturnValue;                   // 0x000F(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsQuitter_ReturnValue;                    // 0x0010(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Not_PreBool_ReturnValue2;                 // 0x0011(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_12[0x2];                                       // 0x0012(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Add_IntInt_ReturnValue2;                  // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_Array_Get_Item;                           // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y;                            // 0x0024(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z;                            // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FString                                 CallFunc_GetPlayerName_ReturnValue;                // 0x0030(0x0010)(ZeroConstructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0040(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Len_ReturnValue;                          // 0x0048(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4C[0x4];                                       // 0x004C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslPlayerController*                   CallFunc_GetOwningTslPlayerController_ReturnValue; // 0x0050(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Greater_IntInt_ReturnValue;               // 0x0058(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0059(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5A[0x6];                                       // 0x005A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpectatorPawn*                         CallFunc_GetSpectatorPawn_ReturnValue;             // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0068(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x006C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue3;                  // 0x0078(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_7C[0x4];                                       // 0x007C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerGroupWidget_C*                   CallFunc_Create_ReturnValue;                       // 0x0080(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0088(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDying_ReturnValue;                      // 0x0094(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_95[0x3];                                       // 0x0095(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_BreakVector_X2;                           // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y2;                           // 0x009C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z2;                           // 0x00A0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue2;                // 0x00A4(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x00AC(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x00B4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x00B8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsIncludeDyingPlayer_NewParam;            // 0x00B9(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x00BA(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_BB[0x1];                                       // 0x00BB(0x0001)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_C1[0x7];                                       // 0x00C1(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue;                     // 0x00C8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue4;                  // 0x00D0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue5;                  // 0x00D4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_Array_Get_Item2;                          // 0x00D8(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslPlayerState*                        CallFunc_GetTslPlayerState_ReturnValue;            // 0x00E0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetTeamNum_ReturnValue;                   // 0x00E8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x00EC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_Array_Get_Item3;                          // 0x00F0(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_GetTeamId_ReturnValue;                    // 0x00F8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x00FC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Find_ReturnValue;                   // 0x0100(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue2;                 // 0x0104(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_105[0x3];                                      // 0x0105(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerGroupWidget_C*                   CallFunc_Array_Get_Item4;                          // 0x0108(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPanelSlot*                             CallFunc_AddChild_ReturnValue2;                    // 0x0110(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_HasChild_ReturnValue;                     // 0x0118(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Array_IsValidIndex_ReturnValue;           // 0x0119(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_11A[0x6];                                      // 0x011A(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_Array_Get_Item5;                          // 0x0120(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UPlayerInfoWidget_C*                    CallFunc_CreateOrUpdatePlayerInfo_ReturnValue;     // 0x0128(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0130(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Array_Index_Variable;                       // 0x0134(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue3;                 // 0x0138(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_139[0x7];                                      // 0x0139(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class UPlayerInfoWidget_C*                    CallFunc_Array_Get_Item6;                          // 0x0140(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_GreaterEqual_FloatFloat_ReturnValue;      // 0x0148(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_149[0x3];                                      // 0x0149(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_Add_FloatFloat_ReturnValue;               // 0x014C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          bNextShow;                                         // 0x0150(0x0001)(Edit, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListWidget_C_UpdatePlayerList) == 0x000008, "Wrong alignment on PlayerListWidget_C_UpdatePlayerList");
static_assert(sizeof(PlayerListWidget_C_UpdatePlayerList) == 0x000158, "Wrong size on PlayerListWidget_C_UpdatePlayerList");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, InputPin) == 0x000000, "Member 'PlayerListWidget_C_UpdatePlayerList::InputPin' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, m__int_Variable) == 0x000004, "Member 'PlayerListWidget_C_UpdatePlayerList::m__int_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Add_IntInt_ReturnValue) == 0x000008, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_LessEqual_IntInt_ReturnValue) == 0x00000C, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_LessEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, m__bool_Variable) == 0x00000D, "Member 'PlayerListWidget_C_UpdatePlayerList::m__bool_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Not_PreBool_ReturnValue) == 0x00000E, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Not_PreBool_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_BooleanAND_ReturnValue) == 0x00000F, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_BooleanAND_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_IsQuitter_ReturnValue) == 0x000010, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_IsQuitter_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Not_PreBool_ReturnValue2) == 0x000011, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Not_PreBool_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Add_IntInt_ReturnValue2) == 0x000014, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Add_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Array_Get_Item) == 0x000018, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_BreakVector_X) == 0x000020, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_BreakVector_Y) == 0x000024, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_BreakVector_Z) == 0x000028, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_GetPlayerName_ReturnValue) == 0x000030, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_GetPlayerName_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_MakeVector2D_ReturnValue) == 0x000040, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Len_ReturnValue) == 0x000048, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Len_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_GetOwningTslPlayerController_ReturnValue) == 0x000050, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_GetOwningTslPlayerController_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Greater_IntInt_ReturnValue) == 0x000058, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Greater_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_IsValid_ReturnValue) == 0x000059, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_GetSpectatorPawn_ReturnValue) == 0x000060, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_GetSpectatorPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, m__int_Loop_Counter_Variable) == 0x000068, "Member 'PlayerListWidget_C_UpdatePlayerList::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_K2_GetActorLocation_ReturnValue) == 0x00006C, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Add_IntInt_ReturnValue3) == 0x000078, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Add_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Create_ReturnValue) == 0x000080, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Create_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000088, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_IsDying_ReturnValue) == 0x000094, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_IsDying_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_BreakVector_X2) == 0x000098, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_BreakVector_Y2) == 0x00009C, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_BreakVector_Z2) == 0x0000A0, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_MakeVector2D_ReturnValue2) == 0x0000A4, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_MakeVector2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x0000AC, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_VSize2D_ReturnValue) == 0x0000B4, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_IsValid_ReturnValue2) == 0x0000B8, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_IsIncludeDyingPlayer_NewParam) == 0x0000B9, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_IsIncludeDyingPlayer_NewParam' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x0000BA, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Array_Length_ReturnValue) == 0x0000BC, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Less_IntInt_ReturnValue) == 0x0000C0, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_AddChild_ReturnValue) == 0x0000C8, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_AddChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Add_IntInt_ReturnValue4) == 0x0000D0, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Add_IntInt_ReturnValue4' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Add_IntInt_ReturnValue5) == 0x0000D4, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Add_IntInt_ReturnValue5' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Array_Get_Item2) == 0x0000D8, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_GetTslPlayerState_ReturnValue) == 0x0000E0, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_GetTslPlayerState_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_GetTeamNum_ReturnValue) == 0x0000E8, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_GetTeamNum_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Array_Add_ReturnValue) == 0x0000EC, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Array_Get_Item3) == 0x0000F0, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Array_Get_Item3' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_GetTeamId_ReturnValue) == 0x0000F8, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_GetTeamId_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Array_Length_ReturnValue2) == 0x0000FC, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Array_Find_ReturnValue) == 0x000100, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Array_Find_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Less_IntInt_ReturnValue2) == 0x000104, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Less_IntInt_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Array_Get_Item4) == 0x000108, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Array_Get_Item4' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_AddChild_ReturnValue2) == 0x000110, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_AddChild_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_HasChild_ReturnValue) == 0x000118, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_HasChild_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Array_IsValidIndex_ReturnValue) == 0x000119, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Array_IsValidIndex_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Array_Get_Item5) == 0x000120, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Array_Get_Item5' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_CreateOrUpdatePlayerInfo_ReturnValue) == 0x000128, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_CreateOrUpdatePlayerInfo_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Array_Length_ReturnValue3) == 0x000130, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, m__int_Array_Index_Variable) == 0x000134, "Member 'PlayerListWidget_C_UpdatePlayerList::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Less_IntInt_ReturnValue3) == 0x000138, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Less_IntInt_ReturnValue3' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Array_Get_Item6) == 0x000140, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Array_Get_Item6' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_GreaterEqual_FloatFloat_ReturnValue) == 0x000148, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_GreaterEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, CallFunc_Add_FloatFloat_ReturnValue) == 0x00014C, "Member 'PlayerListWidget_C_UpdatePlayerList::CallFunc_Add_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_UpdatePlayerList, bNextShow) == 0x000150, "Member 'PlayerListWidget_C_UpdatePlayerList::bNextShow' has a wrong offset!");

// Function PlayerListWidget.PlayerListWidget_C.OnPreviewKeyDown
// 0x01C8 (0x01C8 - 0x0000)
struct PlayerListWidget_C_OnPreviewKeyDown final
{
public:
	struct FGeometry                              MyGeometry;                                        // 0x0000(0x0034)(Parm, IsPlainOldData, NoDestructor)
	uint8                                         Pad_34[0x4];                                       // 0x0034(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	struct FKeyEvent                              InKeyEvent;                                        // 0x0038(0x0040)(Parm)
	struct FEventReply                            ReturnValue;                                       // 0x0078(0x00A8)(Parm, OutParm, ReturnParm)
	struct FEventReply                            CallFunc_Unhandled_ReturnValue;                    // 0x0120(0x00A8)()
};
static_assert(alignof(PlayerListWidget_C_OnPreviewKeyDown) == 0x000008, "Wrong alignment on PlayerListWidget_C_OnPreviewKeyDown");
static_assert(sizeof(PlayerListWidget_C_OnPreviewKeyDown) == 0x0001C8, "Wrong size on PlayerListWidget_C_OnPreviewKeyDown");
static_assert(offsetof(PlayerListWidget_C_OnPreviewKeyDown, MyGeometry) == 0x000000, "Member 'PlayerListWidget_C_OnPreviewKeyDown::MyGeometry' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_OnPreviewKeyDown, InKeyEvent) == 0x000038, "Member 'PlayerListWidget_C_OnPreviewKeyDown::InKeyEvent' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_OnPreviewKeyDown, ReturnValue) == 0x000078, "Member 'PlayerListWidget_C_OnPreviewKeyDown::ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_OnPreviewKeyDown, CallFunc_Unhandled_ReturnValue) == 0x000120, "Member 'PlayerListWidget_C_OnPreviewKeyDown::CallFunc_Unhandled_ReturnValue' has a wrong offset!");

// Function PlayerListWidget.PlayerListWidget_C.InitForReplay
// 0x0028 (0x0028 - 0x0000)
struct PlayerListWidget_C_InitForReplay final
{
public:
	TDelegate<void()>                             K2Node_CreateDelegate_OutputDelegate;              // 0x0000(0x0010)(ZeroConstructor, NoDestructor)
	class UGameInstance*                          CallFunc_GetGameInstance_ReturnValue;              // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UTslGameInstance*                       K2Node_DynamicCast_AsTsl_Game_Instance;            // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0020(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReplaying_ReturnValue;                  // 0x0021(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListWidget_C_InitForReplay) == 0x000008, "Wrong alignment on PlayerListWidget_C_InitForReplay");
static_assert(sizeof(PlayerListWidget_C_InitForReplay) == 0x000028, "Wrong size on PlayerListWidget_C_InitForReplay");
static_assert(offsetof(PlayerListWidget_C_InitForReplay, K2Node_CreateDelegate_OutputDelegate) == 0x000000, "Member 'PlayerListWidget_C_InitForReplay::K2Node_CreateDelegate_OutputDelegate' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_InitForReplay, CallFunc_GetGameInstance_ReturnValue) == 0x000010, "Member 'PlayerListWidget_C_InitForReplay::CallFunc_GetGameInstance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_InitForReplay, K2Node_DynamicCast_AsTsl_Game_Instance) == 0x000018, "Member 'PlayerListWidget_C_InitForReplay::K2Node_DynamicCast_AsTsl_Game_Instance' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_InitForReplay, K2Node_DynamicCast_bSuccess) == 0x000020, "Member 'PlayerListWidget_C_InitForReplay::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_InitForReplay, CallFunc_IsReplaying_ReturnValue) == 0x000021, "Member 'PlayerListWidget_C_InitForReplay::CallFunc_IsReplaying_ReturnValue' has a wrong offset!");

// Function PlayerListWidget.PlayerListWidget_C.GetPlayersInDistance
// 0x00D8 (0x00D8 - 0x0000)
struct PlayerListWidget_C_GetPlayersInDistance final
{
public:
	TArray<class ATslCharacter*>                  PlayerList;                                        // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor)
	int32                                         m__int_Array_Index_Variable;                       // 0x0010(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0014(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x0018(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsDying_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChecked_ReturnValue;                    // 0x001D(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1E[0x2];                                       // 0x001E(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class APlayerController*                      CallFunc_GetOwningPlayer_ReturnValue;              // 0x0020(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Add_ReturnValue;                    // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2C[0x4];                                       // 0x002C(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class ASpectatorPawn*                         CallFunc_GetSpectatorPawn_ReturnValue;             // 0x0030(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue2;         // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X;                            // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y;                            // 0x0054(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z;                            // 0x0058(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_X2;                           // 0x005C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Y2;                           // 0x0060(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakVector_Z2;                           // 0x0064(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue;                 // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_MakeVector2D_ReturnValue2;                // 0x0070(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector2D                              CallFunc_Subtract_Vector2DVector2D_ReturnValue;    // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x0080(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_VSize2D_ReturnValue;                      // 0x0084(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_LessEqual_FloatFloat_ReturnValue;         // 0x0088(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_89[0x7];                                       // 0x0089(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          CallFunc_Array_Get_Item;                           // 0x0090(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0098(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x009C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_9D[0x3];                                       // 0x009D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ATslCharacter*>                  CallFunc_GetTslCharacters_Bp_OutActors;            // 0x00A0(0x0010)(ZeroConstructor, ReferenceParm)
	TArray<class ATslCharacter*>                  InDistancePlayerList;                              // 0x00B0(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate)
	class ATslCharacter*                          RefCharacter;                                      // 0x00C0(0x0008)(Edit, ZeroConstructor, DisableEditOnTemplate, IsPlainOldData, NoDestructor)
	TArray<class ATslCharacter*>                  Teamp;                                             // 0x00C8(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate)
};
static_assert(alignof(PlayerListWidget_C_GetPlayersInDistance) == 0x000008, "Wrong alignment on PlayerListWidget_C_GetPlayersInDistance");
static_assert(sizeof(PlayerListWidget_C_GetPlayersInDistance) == 0x0000D8, "Wrong size on PlayerListWidget_C_GetPlayersInDistance");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, PlayerList) == 0x000000, "Member 'PlayerListWidget_C_GetPlayersInDistance::PlayerList' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, m__int_Array_Index_Variable) == 0x000010, "Member 'PlayerListWidget_C_GetPlayersInDistance::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, m__int_Loop_Counter_Variable) == 0x000014, "Member 'PlayerListWidget_C_GetPlayersInDistance::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_Add_IntInt_ReturnValue) == 0x000018, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_IsDying_ReturnValue) == 0x00001C, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_IsDying_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_IsChecked_ReturnValue) == 0x00001D, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_IsChecked_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_GetOwningPlayer_ReturnValue) == 0x000020, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_GetOwningPlayer_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_Array_Add_ReturnValue) == 0x000028, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_Array_Add_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_GetSpectatorPawn_ReturnValue) == 0x000030, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_GetSpectatorPawn_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000038, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_K2_GetActorLocation_ReturnValue2) == 0x000044, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_K2_GetActorLocation_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_BreakVector_X) == 0x000050, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_BreakVector_X' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_BreakVector_Y) == 0x000054, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_BreakVector_Y' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_BreakVector_Z) == 0x000058, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_BreakVector_Z' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_BreakVector_X2) == 0x00005C, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_BreakVector_X2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_BreakVector_Y2) == 0x000060, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_BreakVector_Y2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_BreakVector_Z2) == 0x000064, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_BreakVector_Z2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_MakeVector2D_ReturnValue) == 0x000068, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_MakeVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_MakeVector2D_ReturnValue2) == 0x000070, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_MakeVector2D_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_Subtract_Vector2DVector2D_ReturnValue) == 0x000078, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_Subtract_Vector2DVector2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x000080, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_VSize2D_ReturnValue) == 0x000084, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_VSize2D_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_LessEqual_FloatFloat_ReturnValue) == 0x000088, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_LessEqual_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_Array_Get_Item) == 0x000090, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_Array_Length_ReturnValue) == 0x000098, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_Less_IntInt_ReturnValue) == 0x00009C, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, CallFunc_GetTslCharacters_Bp_OutActors) == 0x0000A0, "Member 'PlayerListWidget_C_GetPlayersInDistance::CallFunc_GetTslCharacters_Bp_OutActors' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, InDistancePlayerList) == 0x0000B0, "Member 'PlayerListWidget_C_GetPlayersInDistance::InDistancePlayerList' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, RefCharacter) == 0x0000C0, "Member 'PlayerListWidget_C_GetPlayersInDistance::RefCharacter' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_GetPlayersInDistance, Teamp) == 0x0000C8, "Member 'PlayerListWidget_C_GetPlayersInDistance::Teamp' has a wrong offset!");

// Function PlayerListWidget.PlayerListWidget_C.IsIncludeDyingPlayer
// 0x0002 (0x0002 - 0x0000)
struct PlayerListWidget_C_IsIncludeDyingPlayer final
{
public:
	bool                                          NewParam;                                          // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsChecked_ReturnValue;                    // 0x0001(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(PlayerListWidget_C_IsIncludeDyingPlayer) == 0x000001, "Wrong alignment on PlayerListWidget_C_IsIncludeDyingPlayer");
static_assert(sizeof(PlayerListWidget_C_IsIncludeDyingPlayer) == 0x000002, "Wrong size on PlayerListWidget_C_IsIncludeDyingPlayer");
static_assert(offsetof(PlayerListWidget_C_IsIncludeDyingPlayer, NewParam) == 0x000000, "Member 'PlayerListWidget_C_IsIncludeDyingPlayer::NewParam' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_IsIncludeDyingPlayer, CallFunc_IsChecked_ReturnValue) == 0x000001, "Member 'PlayerListWidget_C_IsIncludeDyingPlayer::CallFunc_IsChecked_ReturnValue' has a wrong offset!");

// Function PlayerListWidget.PlayerListWidget_C.CheckChangeList
// 0x0058 (0x0058 - 0x0000)
struct PlayerListWidget_C_CheckChangeList final
{
public:
	bool                                          bChange;                                           // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1[0x3];                                        // 0x0001(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         m__int_Array_Index_Variable;                       // 0x0004(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         m__int_Loop_Counter_Variable;                      // 0x0008(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Add_IntInt_ReturnValue;                   // 0x000C(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_Array_Get_Item;                           // 0x0010(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class ATslCharacter*                          CallFunc_Array_Get_Item2;                          // 0x0018(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	int32                                         CallFunc_Array_Length_ReturnValue;                 // 0x0020(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_ObjectObject_ReturnValue;        // 0x0024(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_25[0x3];                                       // 0x0025(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	int32                                         CallFunc_Array_Length_ReturnValue2;                // 0x0028(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_Less_IntInt_ReturnValue;                  // 0x002C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_2D[0x3];                                       // 0x002D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ATslCharacter*>                  CallFunc_GetSortedReplicateCharactersBySpectatorPawnDistance_ReturnValue; // 0x0030(0x0010)(ZeroConstructor, ReferenceParm)
	int32                                         CallFunc_Array_Length_ReturnValue3;                // 0x0040(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_NotEqual_IntInt_ReturnValue;              // 0x0044(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_45[0x3];                                       // 0x0045(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	TArray<class ATslCharacter*>                  NewLocalVar_0;                                     // 0x0048(0x0010)(Edit, ZeroConstructor, DisableEditOnTemplate)
};
static_assert(alignof(PlayerListWidget_C_CheckChangeList) == 0x000008, "Wrong alignment on PlayerListWidget_C_CheckChangeList");
static_assert(sizeof(PlayerListWidget_C_CheckChangeList) == 0x000058, "Wrong size on PlayerListWidget_C_CheckChangeList");
static_assert(offsetof(PlayerListWidget_C_CheckChangeList, bChange) == 0x000000, "Member 'PlayerListWidget_C_CheckChangeList::bChange' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckChangeList, m__int_Array_Index_Variable) == 0x000004, "Member 'PlayerListWidget_C_CheckChangeList::m__int_Array_Index_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckChangeList, m__int_Loop_Counter_Variable) == 0x000008, "Member 'PlayerListWidget_C_CheckChangeList::m__int_Loop_Counter_Variable' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckChangeList, CallFunc_Add_IntInt_ReturnValue) == 0x00000C, "Member 'PlayerListWidget_C_CheckChangeList::CallFunc_Add_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckChangeList, CallFunc_Array_Get_Item) == 0x000010, "Member 'PlayerListWidget_C_CheckChangeList::CallFunc_Array_Get_Item' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckChangeList, CallFunc_Array_Get_Item2) == 0x000018, "Member 'PlayerListWidget_C_CheckChangeList::CallFunc_Array_Get_Item2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckChangeList, CallFunc_Array_Length_ReturnValue) == 0x000020, "Member 'PlayerListWidget_C_CheckChangeList::CallFunc_Array_Length_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckChangeList, CallFunc_NotEqual_ObjectObject_ReturnValue) == 0x000024, "Member 'PlayerListWidget_C_CheckChangeList::CallFunc_NotEqual_ObjectObject_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckChangeList, CallFunc_Array_Length_ReturnValue2) == 0x000028, "Member 'PlayerListWidget_C_CheckChangeList::CallFunc_Array_Length_ReturnValue2' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckChangeList, CallFunc_Less_IntInt_ReturnValue) == 0x00002C, "Member 'PlayerListWidget_C_CheckChangeList::CallFunc_Less_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckChangeList, CallFunc_GetSortedReplicateCharactersBySpectatorPawnDistance_ReturnValue) == 0x000030, "Member 'PlayerListWidget_C_CheckChangeList::CallFunc_GetSortedReplicateCharactersBySpectatorPawnDistance_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckChangeList, CallFunc_Array_Length_ReturnValue3) == 0x000040, "Member 'PlayerListWidget_C_CheckChangeList::CallFunc_Array_Length_ReturnValue3' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckChangeList, CallFunc_NotEqual_IntInt_ReturnValue) == 0x000044, "Member 'PlayerListWidget_C_CheckChangeList::CallFunc_NotEqual_IntInt_ReturnValue' has a wrong offset!");
static_assert(offsetof(PlayerListWidget_C_CheckChangeList, NewLocalVar_0) == 0x000048, "Member 'PlayerListWidget_C_CheckChangeList::NewLocalVar_0' has a wrong offset!");

}

