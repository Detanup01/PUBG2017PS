#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: VehicleBase

#include "Basic.hpp"

#include "VehicleBase_classes.hpp"
#include "VehicleBase_parameters.hpp"


namespace SDK
{

// Function VehicleBase.VehicleBase_C.ExecuteUbergraph_VehicleBase
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AVehicleBase_C::ExecuteUbergraph_VehicleBase(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "ExecuteUbergraph_VehicleBase");

	Params::VehicleBase_C_ExecuteUbergraph_VehicleBase Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VehicleBase.VehicleBase_C.EventFuelConsumption
// (BlueprintCallable, BlueprintEvent)

void AVehicleBase_C::EventFuelConsumption()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "EventFuelConsumption");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VehicleBase.VehicleBase_C.InpAxisEvt_MoveRight_K2Node_InputAxisEvent_15
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AVehicleBase_C::InpAxisEvt_MoveRight_K2Node_InputAxisEvent_15(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "InpAxisEvt_MoveRight_K2Node_InputAxisEvent_15");

	Params::VehicleBase_C_InpAxisEvt_MoveRight_K2Node_InputAxisEvent_15 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VehicleBase.VehicleBase_C.TurnOffLight
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   KillingDamage                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FDamageEvent                     DamageEvent                                            (ConstParm, Parm, OutParm, ReferenceParm)
// class ATslPlayerState*                  PlayerInstigator                                       (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class AActor*                           DamageCauser                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AVehicleBase_C::TurnOffLight(float KillingDamage, const struct FDamageEvent& DamageEvent, class ATslPlayerState* PlayerInstigator, class AActor* DamageCauser)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "TurnOffLight");

	Params::VehicleBase_C_TurnOffLight Parms{};

	Parms.KillingDamage = KillingDamage;
	Parms.DamageEvent = std::move(DamageEvent);
	Parms.PlayerInstigator = PlayerInstigator;
	Parms.DamageCauser = DamageCauser;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VehicleBase.VehicleBase_C.ReceiveBeginPlay
// (Event, Public, BlueprintEvent)

void AVehicleBase_C::ReceiveBeginPlay()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "ReceiveBeginPlay");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VehicleBase.VehicleBase_C.InpAxisEvt_MoveForward_K2Node_InputAxisEvent_7
// (BlueprintEvent)
// Parameters:
// float                                   AxisValue                                              (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AVehicleBase_C::InpAxisEvt_MoveForward_K2Node_InputAxisEvent_7(float AxisValue)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "InpAxisEvt_MoveForward_K2Node_InputAxisEvent_7");

	Params::VehicleBase_C_InpAxisEvt_MoveForward_K2Node_InputAxisEvent_7 Parms{};

	Parms.AxisValue = AxisValue;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VehicleBase.VehicleBase_C.ReceiveTick
// (Event, Public, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AVehicleBase_C::ReceiveTick(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "ReceiveTick");

	Params::VehicleBase_C_ReceiveTick Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VehicleBase.VehicleBase_C.BrakeLampOff
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void AVehicleBase_C::BrakeLampOff()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "BrakeLampOff");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VehicleBase.VehicleBase_C.BrakeLampOn
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void AVehicleBase_C::BrakeLampOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "BrakeLampOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VehicleBase.VehicleBase_C.ToggleLights
// (Net, NetServer, BlueprintCallable, BlueprintEvent)

void AVehicleBase_C::ToggleLights()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "ToggleLights");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VehicleBase.VehicleBase_C.InpActEvt_Handbrake_K2Node_InputActionEvent_2
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (Parm)

void AVehicleBase_C::InpActEvt_Handbrake_K2Node_InputActionEvent_2(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "InpActEvt_Handbrake_K2Node_InputActionEvent_2");

	Params::VehicleBase_C_InpActEvt_Handbrake_K2Node_InputActionEvent_2 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VehicleBase.VehicleBase_C.InpActEvt_Handbrake_K2Node_InputActionEvent_3
// (BlueprintEvent)
// Parameters:
// struct FKey                             Key                                                    (Parm)

void AVehicleBase_C::InpActEvt_Handbrake_K2Node_InputActionEvent_3(const struct FKey& Key)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "InpActEvt_Handbrake_K2Node_InputActionEvent_3");

	Params::VehicleBase_C_InpActEvt_Handbrake_K2Node_InputActionEvent_3 Parms{};

	Parms.Key = std::move(Key);

	UObject::ProcessEvent(Func, &Parms);
}


// Function VehicleBase.VehicleBase_C.UserConstructionScript
// (Event, Public, BlueprintCallable, BlueprintEvent)

void AVehicleBase_C::UserConstructionScript()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "UserConstructionScript");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VehicleBase.VehicleBase_C.OnRep_isLightsOn
// (BlueprintCallable, BlueprintEvent)

void AVehicleBase_C::OnRep_isLightsOn()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "OnRep_isLightsOn");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VehicleBase.VehicleBase_C.OnRep_IsBrakeEngaged
// (BlueprintCallable, BlueprintEvent)

void AVehicleBase_C::OnRep_IsBrakeEngaged()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "OnRep_IsBrakeEngaged");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VehicleBase.VehicleBase_C.TickWheelSound
// (Public, BlueprintCallable, BlueprintEvent)

void AVehicleBase_C::TickWheelSound()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "TickWheelSound");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VehicleBase.VehicleBase_C.TickWheelCaching
// (Public, BlueprintCallable, BlueprintEvent)

void AVehicleBase_C::TickWheelCaching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "TickWheelCaching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VehicleBase.VehicleBase_C.TickBasicInfoCaching
// (Public, BlueprintCallable, BlueprintEvent)

void AVehicleBase_C::TickBasicInfoCaching()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "TickBasicInfoCaching");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VehicleBase.VehicleBase_C.TickFuelConsumption
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// float                                   DeltaSeconds                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void AVehicleBase_C::TickFuelConsumption(float DeltaSeconds)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "TickFuelConsumption");

	Params::VehicleBase_C_TickFuelConsumption Parms{};

	Parms.DeltaSeconds = DeltaSeconds;

	UObject::ProcessEvent(Func, &Parms);
}


// Function VehicleBase.VehicleBase_C.TickBoostSoundTest
// (Public, BlueprintCallable, BlueprintEvent)

void AVehicleBase_C::TickBoostSoundTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "TickBoostSoundTest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VehicleBase.VehicleBase_C.TickThrottleSoundTest
// (Public, BlueprintCallable, BlueprintEvent)

void AVehicleBase_C::TickThrottleSoundTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "TickThrottleSoundTest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VehicleBase.VehicleBase_C.TickBrakeSoundTest
// (Public, BlueprintCallable, BlueprintEvent)

void AVehicleBase_C::TickBrakeSoundTest()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "TickBrakeSoundTest");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VehicleBase.VehicleBase_C.TickDynamicCamera
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void AVehicleBase_C::TickDynamicCamera()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "TickDynamicCamera");

	UObject::ProcessEvent(Func, nullptr);
}


// Function VehicleBase.VehicleBase_C.TickIndicators
// (Public, BlueprintCallable, BlueprintEvent)

void AVehicleBase_C::TickIndicators()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("VehicleBase_C", "TickIndicators");

	UObject::ProcessEvent(Func, nullptr);
}

}

