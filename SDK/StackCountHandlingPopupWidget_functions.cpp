#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: StackCountHandlingPopupWidget

#include "Basic.hpp"

#include "StackCountHandlingPopupWidget_classes.hpp"
#include "StackCountHandlingPopupWidget_parameters.hpp"


namespace SDK
{

// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.ExecuteUbergraph_StackCountHandlingPopupWidget
// (HasDefaults)
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UStackCountHandlingPopupWidget_C::ExecuteUbergraph_StackCountHandlingPopupWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "ExecuteUbergraph_StackCountHandlingPopupWidget");

	Params::StackCountHandlingPopupWidget_C_ExecuteUbergraph_StackCountHandlingPopupWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.CustomEvent_4
// (BlueprintCallable, BlueprintEvent)

void UStackCountHandlingPopupWidget_C::CustomEvent_4()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "CustomEvent_4");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.CustomEvent_3
// (BlueprintCallable, BlueprintEvent)

void UStackCountHandlingPopupWidget_C::CustomEvent_3()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "CustomEvent_3");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.CustomEvent_2
// (BlueprintCallable, BlueprintEvent)

void UStackCountHandlingPopupWidget_C::CustomEvent_2()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "CustomEvent_2");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.OnWidgetMoveLeft
// (BlueprintCallable, BlueprintEvent)

void UStackCountHandlingPopupWidget_C::OnWidgetMoveLeft()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "OnWidgetMoveLeft");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.OnWidgetInputB
// (BlueprintCallable, BlueprintEvent)

void UStackCountHandlingPopupWidget_C::OnWidgetInputB()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "OnWidgetInputB");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.Tick
// (BlueprintCosmetic, Event, Public, BlueprintEvent)
// Parameters:
// struct FGeometry                        MyGeometry                                             (Parm, IsPlainOldData, NoDestructor)
// float                                   InDeltaTime                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UStackCountHandlingPopupWidget_C::Tick(const struct FGeometry& MyGeometry, float InDeltaTime)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "Tick");

	Params::StackCountHandlingPopupWidget_C_Tick Parms{};

	Parms.MyGeometry = std::move(MyGeometry);
	Parms.InDeltaTime = InDeltaTime;

	UObject::ProcessEvent(Func, &Parms);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.XBoxOneOk
// (BlueprintCallable, BlueprintEvent)

void UStackCountHandlingPopupWidget_C::XBoxOneOk()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "XBoxOneOk");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.Custom Event_0
// (BlueprintCallable, BlueprintEvent)

void UStackCountHandlingPopupWidget_C::Custom_Event_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "Custom Event_0");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.Destruct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UStackCountHandlingPopupWidget_C::Destruct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "Destruct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.Close Popup
// (BlueprintCallable, BlueprintEvent)

void UStackCountHandlingPopupWidget_C::Close_Popup()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "Close Popup");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.SubmitEvent
// (HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Text                                                   (ConstParm, Parm, OutParm, ReferenceParm)
// ETextCommit                             CommitMethod                                           (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UStackCountHandlingPopupWidget_C::SubmitEvent(const class FText& Text, ETextCommit CommitMethod)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "SubmitEvent");

	Params::StackCountHandlingPopupWidget_C_SubmitEvent Parms{};

	Parms.Text = std::move(Text);
	Parms.CommitMethod = CommitMethod;

	UObject::ProcessEvent(Func, &Parms);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.BndEvt__MaxButton_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UStackCountHandlingPopupWidget_C::BndEvt__MaxButton_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "BndEvt__MaxButton_K2Node_ComponentBoundEvent_6_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.BndEvt__MinButton_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UStackCountHandlingPopupWidget_C::BndEvt__MinButton_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "BndEvt__MinButton_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.BndEvt__OuterPopup_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UStackCountHandlingPopupWidget_C::BndEvt__OuterPopup_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "BndEvt__OuterPopup_K2Node_ComponentBoundEvent_4_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.BndEvt__CancelButton_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UStackCountHandlingPopupWidget_C::BndEvt__CancelButton_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "BndEvt__CancelButton_K2Node_ComponentBoundEvent_3_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.BndEvt__InputAmountButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UStackCountHandlingPopupWidget_C::BndEvt__InputAmountButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "BndEvt__InputAmountButton_K2Node_ComponentBoundEvent_2_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UStackCountHandlingPopupWidget_C::BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "BndEvt__CloseButton_K2Node_ComponentBoundEvent_1_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.CustomEvent_0
// (BlueprintCallable, BlueprintEvent)
// Parameters:
// TScriptInterface<class ISlotContainerInterface>Container_0                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TScriptInterface<class ISlotInterface>  Slot_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// TScriptInterface<class ISlotContainerInterface>OtherContainer                                         (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UStackCountHandlingPopupWidget_C::CustomEvent_0(TScriptInterface<class ISlotContainerInterface> Container_0, TScriptInterface<class ISlotInterface> Slot_0, TScriptInterface<class ISlotContainerInterface> OtherContainer)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "CustomEvent_0");

	Params::StackCountHandlingPopupWidget_C_CustomEvent_0 Parms{};

	Parms.Container_0 = Container_0;
	Parms.Slot_0 = Slot_0;
	Parms.OtherContainer = OtherContainer;

	UObject::ProcessEvent(Func, &Parms);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UStackCountHandlingPopupWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.BndEvt__Button_0_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature
// (BlueprintEvent)

void UStackCountHandlingPopupWidget_C::BndEvt__Button_0_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "BndEvt__Button_0_K2Node_ComponentBoundEvent_0_OnButtonClickedEvent__DelegateSignature");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.SetPopup
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// EPopupStyle                             PopupStyle                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             Message                                                (ConstParm, Parm, OutParm, ReferenceParm)
// TDelegate<void(EPopupButtonID ButtonID)>PressedDelegate                                        (ConstParm, Parm, OutParm, ZeroConstructor, ReferenceParm, NoDestructor)

void UStackCountHandlingPopupWidget_C::SetPopup(EPopupStyle PopupStyle, const class FText& Message, const TDelegate<void(EPopupButtonID ButtonID)>& PressedDelegate)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "SetPopup");

	Params::StackCountHandlingPopupWidget_C_SetPopup Parms{};

	Parms.PopupStyle = PopupStyle;
	Parms.Message = std::move(Message);
	Parms.PressedDelegate = PressedDelegate;

	UObject::ProcessEvent(Func, &Parms);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.OnItemDropOtherContainer
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UItem*                            Item_0                                                 (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UStackCountHandlingPopupWidget_C::OnItemDropOtherContainer(class UItem* Item_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "OnItemDropOtherContainer");

	Params::StackCountHandlingPopupWidget_C_OnItemDropOtherContainer Parms{};

	Parms.Item_0 = Item_0;

	UObject::ProcessEvent(Func, &Parms);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.GetMaxCount
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

int32 UStackCountHandlingPopupWidget_C::GetMaxCount()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "GetMaxCount");

	Params::StackCountHandlingPopupWidget_C_GetMaxCount Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.UpdateItemName
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UStackCountHandlingPopupWidget_C::UpdateItemName(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "UpdateItemName");

	Params::StackCountHandlingPopupWidget_C_UpdateItemName Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.GetInventory
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class AInventory*                       Inventory_0                                            (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UStackCountHandlingPopupWidget_C::GetInventory(class AInventory** Inventory_0)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "GetInventory");

	Params::StackCountHandlingPopupWidget_C_GetInventory Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (Inventory_0 != nullptr)
		*Inventory_0 = Parms.Inventory_0;
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.GetMaxButtonText
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             ReturnValue                                            (Parm, OutParm, ReturnParm)

class FText UStackCountHandlingPopupWidget_C::GetMaxButtonText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "GetMaxButtonText");

	Params::StackCountHandlingPopupWidget_C_GetMaxButtonText Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.On_InputAmountText_Prepass
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UStackCountHandlingPopupWidget_C::On_InputAmountText_Prepass(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "On_InputAmountText_Prepass");

	Params::StackCountHandlingPopupWidget_C_On_InputAmountText_Prepass Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.FocusOnInputAmountText
// (Public, BlueprintCallable, BlueprintEvent)

void UStackCountHandlingPopupWidget_C::FocusOnInputAmountText()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "FocusOnInputAmountText");

	UObject::ProcessEvent(Func, nullptr);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.OnPrepass_0
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class UWidget*                          BoundWidget                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UStackCountHandlingPopupWidget_C::OnPrepass_0(class UWidget* BoundWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "OnPrepass_0");

	Params::StackCountHandlingPopupWidget_C_OnPrepass_0 Parms{};

	Parms.BoundWidget = BoundWidget;

	UObject::ProcessEvent(Func, &Parms);
}


// Function StackCountHandlingPopupWidget.StackCountHandlingPopupWidget_C.AddStackCount
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// int32                                   AddCount                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UStackCountHandlingPopupWidget_C::AddStackCount(int32 AddCount)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("StackCountHandlingPopupWidget_C", "AddStackCount");

	Params::StackCountHandlingPopupWidget_C_AddStackCount Parms{};

	Parms.AddCount = AddCount;

	UObject::ProcessEvent(Func, &Parms);
}

}

