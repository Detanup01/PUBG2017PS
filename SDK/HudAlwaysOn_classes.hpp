#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: HudAlwaysOn

#include "Basic.hpp"

#include "Engine_structs.hpp"
#include "UMG_structs.hpp"
#include "UMG_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass HudAlwaysOn.HudAlwaysOn_C
// 0x0058 (0x0298 - 0x0240)
class UHudAlwaysOn_C final : public UUserWidget
{
public:
	struct FPointerToUberGraphFrame               UberGraphFrame;                                    // 0x0240(0x0008)(ZeroConstructor, Transient, DuplicateTransient)
	class UBoostGaugeWidget_BP_C*                 BoostGaugeWidget_BP;                               // 0x0248(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UBP_AlivePlayerInfoWidget_C*            BP_AlivePlayerInfoWidget;                          // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UBP_BuffIconListWidget_C*               BP_BuffIconListWidget;                             // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UBP_TeamInfoListWidget_C*               BP_TeamInfoListWidget;                             // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UCastingBarInfoTextWidget_C*            CastingBarInfoTextWidget;                          // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UKillCountWidget_C*                     KillCountWidget;                                   // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UNetworkProblemWidget_C*                NetworkProblemWidget;                              // 0x0278(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UButton*                                ReportBotton;                                      // 0x0280(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UVersionInfoWidget_C*                   VersionInfoWidget_95;                              // 0x0288(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class ATslHUD*                                refHUD;                                            // 0x0290(0x0008)(Edit, BlueprintVisible, ZeroConstructor, DisableEditOnTemplate, DisableEditOnInstance, IsPlainOldData, NoDestructor)

public:
	void ExecuteUbergraph_HudAlwaysOn(int32 EntryPoint);
	void BndEvt__ReportBotton_K2Node_ComponentBoundEvent_5_OnButtonClickedEvent__DelegateSignature();
	void Construct();
	void OnPrepass_0(class UWidget* BoundWidget);
	void On_BlueZoneGpsWidget_RoundType_Prepass_0(class UWidget* BoundWidget);
	ESlateVisibility GetVisibilityOnMatchState();
	void On_CharacterCanvas_Prepass_0(class UWidget* BoundWidget);
	void OnPrepass_1(class UWidget* BoundWidget);
	void On_ReportBotton_Prepass_0(class UWidget* BoundWidget);
	void TeamInfoPrepass(class UWidget* BoundWidget);

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"HudAlwaysOn_C">();
	}
	static class UHudAlwaysOn_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UHudAlwaysOn_C>();
	}
};
static_assert(alignof(UHudAlwaysOn_C) == 0x000008, "Wrong alignment on UHudAlwaysOn_C");
static_assert(sizeof(UHudAlwaysOn_C) == 0x000298, "Wrong size on UHudAlwaysOn_C");
static_assert(offsetof(UHudAlwaysOn_C, UberGraphFrame) == 0x000240, "Member 'UHudAlwaysOn_C::UberGraphFrame' has a wrong offset!");
static_assert(offsetof(UHudAlwaysOn_C, BoostGaugeWidget_BP) == 0x000248, "Member 'UHudAlwaysOn_C::BoostGaugeWidget_BP' has a wrong offset!");
static_assert(offsetof(UHudAlwaysOn_C, BP_AlivePlayerInfoWidget) == 0x000250, "Member 'UHudAlwaysOn_C::BP_AlivePlayerInfoWidget' has a wrong offset!");
static_assert(offsetof(UHudAlwaysOn_C, BP_BuffIconListWidget) == 0x000258, "Member 'UHudAlwaysOn_C::BP_BuffIconListWidget' has a wrong offset!");
static_assert(offsetof(UHudAlwaysOn_C, BP_TeamInfoListWidget) == 0x000260, "Member 'UHudAlwaysOn_C::BP_TeamInfoListWidget' has a wrong offset!");
static_assert(offsetof(UHudAlwaysOn_C, CastingBarInfoTextWidget) == 0x000268, "Member 'UHudAlwaysOn_C::CastingBarInfoTextWidget' has a wrong offset!");
static_assert(offsetof(UHudAlwaysOn_C, KillCountWidget) == 0x000270, "Member 'UHudAlwaysOn_C::KillCountWidget' has a wrong offset!");
static_assert(offsetof(UHudAlwaysOn_C, NetworkProblemWidget) == 0x000278, "Member 'UHudAlwaysOn_C::NetworkProblemWidget' has a wrong offset!");
static_assert(offsetof(UHudAlwaysOn_C, ReportBotton) == 0x000280, "Member 'UHudAlwaysOn_C::ReportBotton' has a wrong offset!");
static_assert(offsetof(UHudAlwaysOn_C, VersionInfoWidget_95) == 0x000288, "Member 'UHudAlwaysOn_C::VersionInfoWidget_95' has a wrong offset!");
static_assert(offsetof(UHudAlwaysOn_C, refHUD) == 0x000290, "Member 'UHudAlwaysOn_C::refHUD' has a wrong offset!");

}

