#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: QualityComboBox

#include "Basic.hpp"

#include "QualityComboBox_classes.hpp"
#include "QualityComboBox_parameters.hpp"


namespace SDK
{

// Function QualityComboBox.QualityComboBox_C.ExecuteUbergraph_QualityComboBox
// ()
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UQualityComboBox_C::ExecuteUbergraph_QualityComboBox(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QualityComboBox_C", "ExecuteUbergraph_QualityComboBox");

	Params::QualityComboBox_C_ExecuteUbergraph_QualityComboBox Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QualityComboBox.QualityComboBox_C.BndEvt__ComboBox_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature
// (BlueprintEvent)
// Parameters:
// class FString                           SelectedItem                                           (Parm, ZeroConstructor)
// ESelectInfo                             SelectionType                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UQualityComboBox_C::BndEvt__ComboBox_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature(const class FString& SelectedItem, ESelectInfo SelectionType)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QualityComboBox_C", "BndEvt__ComboBox_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature");

	Params::QualityComboBox_C_BndEvt__ComboBox_K2Node_ComponentBoundEvent_0_OnSelectionChangedEvent__DelegateSignature Parms{};

	Parms.SelectedItem = std::move(SelectedItem);
	Parms.SelectionType = SelectionType;

	UObject::ProcessEvent(Func, &Parms);
}


// Function QualityComboBox.QualityComboBox_C.AddOption
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           OptionName                                             (Parm, ZeroConstructor)
// class FText                             DisplayOptionName                                      (Parm)

void UQualityComboBox_C::AddOption(const class FString& OptionName, const class FText& DisplayOptionName)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QualityComboBox_C", "AddOption");

	Params::QualityComboBox_C_AddOption Parms{};

	Parms.OptionName = std::move(OptionName);
	Parms.DisplayOptionName = std::move(DisplayOptionName);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QualityComboBox.QualityComboBox_C.ClearOptions
// (Public, BlueprintCallable, BlueprintEvent)

void UQualityComboBox_C::ClearOptions()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QualityComboBox_C", "ClearOptions");

	UObject::ProcessEvent(Func, nullptr);
}


// Function QualityComboBox.QualityComboBox_C.SetSelectedOption
// (Public, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Option                                                 (Parm, ZeroConstructor)

void UQualityComboBox_C::SetSelectedOption(const class FString& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QualityComboBox_C", "SetSelectedOption");

	Params::QualityComboBox_C_SetSelectedOption Parms{};

	Parms.Option = std::move(Option);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QualityComboBox.QualityComboBox_C.RemoveOption
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Option                                                 (Parm, ZeroConstructor)

void UQualityComboBox_C::RemoveOption(const class FString& Option)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QualityComboBox_C", "RemoveOption");

	Params::QualityComboBox_C_RemoveOption Parms{};

	Parms.Option = std::move(Option);

	UObject::ProcessEvent(Func, &Parms);
}


// Function QualityComboBox.QualityComboBox_C.On_ComboBox_GenerateWidget_0
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FString                           Item                                                   (Parm, ZeroConstructor)
// class UWidget*                          ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

class UWidget* UQualityComboBox_C::On_ComboBox_GenerateWidget_0(const class FString& Item)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QualityComboBox_C", "On_ComboBox_GenerateWidget_0");

	Params::QualityComboBox_C_On_ComboBox_GenerateWidget_0 Parms{};

	Parms.Item = std::move(Item);

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function QualityComboBox.QualityComboBox_C.Get_ComboBox_bIsEnabled_0
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UQualityComboBox_C::Get_ComboBox_bIsEnabled_0()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QualityComboBox_C", "Get_ComboBox_bIsEnabled_0");

	Params::QualityComboBox_C_Get_ComboBox_bIsEnabled_0 Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function QualityComboBox.QualityComboBox_C.GetDisplayTextByOption
// (Public, HasOutParams, HasDefaults, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// class FText                             DisplayText                                            (Parm, OutParm)

void UQualityComboBox_C::GetDisplayTextByOption(class FText* DisplayText)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QualityComboBox_C", "GetDisplayTextByOption");

	Params::QualityComboBox_C_GetDisplayTextByOption Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (DisplayText != nullptr)
		*DisplayText = std::move(Parms.DisplayText);
}


// Function QualityComboBox.QualityComboBox_C.GetSelectedOption
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FString                           SelectedOption                                         (Parm, OutParm, ZeroConstructor)

void UQualityComboBox_C::GetSelectedOption(class FString* SelectedOption) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("QualityComboBox_C", "GetSelectedOption");

	Params::QualityComboBox_C_GetSelectedOption Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (SelectedOption != nullptr)
		*SelectedOption = std::move(Parms.SelectedOption);
}

}

