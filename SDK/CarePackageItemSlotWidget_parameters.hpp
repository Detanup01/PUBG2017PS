#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CarePackageItemSlotWidget

#include "Basic.hpp"


namespace SDK::Params
{

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.SetItemName
// 0x0018 (0x0018 - 0x0000)
struct CarePackageItemSlotWidget_C_SetItemName final
{
public:
	class FText                                   ItemName;                                          // 0x0000(0x0018)(Parm)
};
static_assert(alignof(CarePackageItemSlotWidget_C_SetItemName) == 0x000008, "Wrong alignment on CarePackageItemSlotWidget_C_SetItemName");
static_assert(sizeof(CarePackageItemSlotWidget_C_SetItemName) == 0x000018, "Wrong size on CarePackageItemSlotWidget_C_SetItemName");
static_assert(offsetof(CarePackageItemSlotWidget_C_SetItemName, ItemName) == 0x000000, "Member 'CarePackageItemSlotWidget_C_SetItemName::ItemName' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.SetItemIcon
// 0x0010 (0x0010 - 0x0000)
struct CarePackageItemSlotWidget_C_SetItemIcon final
{
public:
	class UTexture*                               ItemIcon;                                          // 0x0000(0x0008)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	class UMaterialInstanceDynamic*               CallFunc_GetDynamicMaterial_ReturnValue;           // 0x0008(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_SetItemIcon) == 0x000008, "Wrong alignment on CarePackageItemSlotWidget_C_SetItemIcon");
static_assert(sizeof(CarePackageItemSlotWidget_C_SetItemIcon) == 0x000010, "Wrong size on CarePackageItemSlotWidget_C_SetItemIcon");
static_assert(offsetof(CarePackageItemSlotWidget_C_SetItemIcon, ItemIcon) == 0x000000, "Member 'CarePackageItemSlotWidget_C_SetItemIcon::ItemIcon' has a wrong offset!");
static_assert(offsetof(CarePackageItemSlotWidget_C_SetItemIcon, CallFunc_GetDynamicMaterial_ReturnValue) == 0x000008, "Member 'CarePackageItemSlotWidget_C_SetItemIcon::CallFunc_GetDynamicMaterial_ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.SetItemCount
// 0x0020 (0x0020 - 0x0000)
struct CarePackageItemSlotWidget_C_SetItemCount final
{
public:
	int32                                         ItemCount;                                         // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_4[0x4];                                        // 0x0004(0x0004)(Fixing Size After Last Property [ Dumper-7 ])
	class FText                                   CallFunc_Conv_IntToText_ReturnValue;               // 0x0008(0x0018)()
};
static_assert(alignof(CarePackageItemSlotWidget_C_SetItemCount) == 0x000008, "Wrong alignment on CarePackageItemSlotWidget_C_SetItemCount");
static_assert(sizeof(CarePackageItemSlotWidget_C_SetItemCount) == 0x000020, "Wrong size on CarePackageItemSlotWidget_C_SetItemCount");
static_assert(offsetof(CarePackageItemSlotWidget_C_SetItemCount, ItemCount) == 0x000000, "Member 'CarePackageItemSlotWidget_C_SetItemCount::ItemCount' has a wrong offset!");
static_assert(offsetof(CarePackageItemSlotWidget_C_SetItemCount, CallFunc_Conv_IntToText_ReturnValue) == 0x000008, "Member 'CarePackageItemSlotWidget_C_SetItemCount::CallFunc_Conv_IntToText_ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.GetSlotContainer
// 0x0010 (0x0010 - 0x0000)
struct CarePackageItemSlotWidget_C_GetSlotContainer final
{
public:
	TScriptInterface<class ISlotContainerInterface> SlotContainer;                                     // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_GetSlotContainer) == 0x000008, "Wrong alignment on CarePackageItemSlotWidget_C_GetSlotContainer");
static_assert(sizeof(CarePackageItemSlotWidget_C_GetSlotContainer) == 0x000010, "Wrong size on CarePackageItemSlotWidget_C_GetSlotContainer");
static_assert(offsetof(CarePackageItemSlotWidget_C_GetSlotContainer, SlotContainer) == 0x000000, "Member 'CarePackageItemSlotWidget_C_GetSlotContainer::SlotContainer' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.GetSlotItem
// 0x0010 (0x0010 - 0x0000)
struct CarePackageItemSlotWidget_C_GetSlotItem final
{
public:
	TScriptInterface<class ISlotInterface>        SlotItem;                                          // 0x0000(0x0010)(Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_GetSlotItem) == 0x000008, "Wrong alignment on CarePackageItemSlotWidget_C_GetSlotItem");
static_assert(sizeof(CarePackageItemSlotWidget_C_GetSlotItem) == 0x000010, "Wrong size on CarePackageItemSlotWidget_C_GetSlotItem");
static_assert(offsetof(CarePackageItemSlotWidget_C_GetSlotItem, SlotItem) == 0x000000, "Member 'CarePackageItemSlotWidget_C_GetSlotItem::SlotItem' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.Up
// 0x0001 (0x0001 - 0x0000)
struct CarePackageItemSlotWidget_C_Up final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_Up) == 0x000001, "Wrong alignment on CarePackageItemSlotWidget_C_Up");
static_assert(sizeof(CarePackageItemSlotWidget_C_Up) == 0x000001, "Wrong size on CarePackageItemSlotWidget_C_Up");
static_assert(offsetof(CarePackageItemSlotWidget_C_Up, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_Up::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.SetFocus
// 0x0002 (0x0002 - 0x0000)
struct CarePackageItemSlotWidget_C_SetFocus final
{
public:
	bool                                          NewFocus;                                          // 0x0000(0x0001)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          ReturnValue;                                       // 0x0001(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_SetFocus) == 0x000001, "Wrong alignment on CarePackageItemSlotWidget_C_SetFocus");
static_assert(sizeof(CarePackageItemSlotWidget_C_SetFocus) == 0x000002, "Wrong size on CarePackageItemSlotWidget_C_SetFocus");
static_assert(offsetof(CarePackageItemSlotWidget_C_SetFocus, NewFocus) == 0x000000, "Member 'CarePackageItemSlotWidget_C_SetFocus::NewFocus' has a wrong offset!");
static_assert(offsetof(CarePackageItemSlotWidget_C_SetFocus, ReturnValue) == 0x000001, "Member 'CarePackageItemSlotWidget_C_SetFocus::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.Right
// 0x0001 (0x0001 - 0x0000)
struct CarePackageItemSlotWidget_C_Right final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_Right) == 0x000001, "Wrong alignment on CarePackageItemSlotWidget_C_Right");
static_assert(sizeof(CarePackageItemSlotWidget_C_Right) == 0x000001, "Wrong size on CarePackageItemSlotWidget_C_Right");
static_assert(offsetof(CarePackageItemSlotWidget_C_Right, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_Right::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.Left
// 0x0001 (0x0001 - 0x0000)
struct CarePackageItemSlotWidget_C_Left final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_Left) == 0x000001, "Wrong alignment on CarePackageItemSlotWidget_C_Left");
static_assert(sizeof(CarePackageItemSlotWidget_C_Left) == 0x000001, "Wrong size on CarePackageItemSlotWidget_C_Left");
static_assert(offsetof(CarePackageItemSlotWidget_C_Left, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_Left::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.Down
// 0x0001 (0x0001 - 0x0000)
struct CarePackageItemSlotWidget_C_Down final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_Down) == 0x000001, "Wrong alignment on CarePackageItemSlotWidget_C_Down");
static_assert(sizeof(CarePackageItemSlotWidget_C_Down) == 0x000001, "Wrong size on CarePackageItemSlotWidget_C_Down");
static_assert(offsetof(CarePackageItemSlotWidget_C_Down, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_Down::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.InputY
// 0x0001 (0x0001 - 0x0000)
struct CarePackageItemSlotWidget_C_InputY final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_InputY) == 0x000001, "Wrong alignment on CarePackageItemSlotWidget_C_InputY");
static_assert(sizeof(CarePackageItemSlotWidget_C_InputY) == 0x000001, "Wrong size on CarePackageItemSlotWidget_C_InputY");
static_assert(offsetof(CarePackageItemSlotWidget_C_InputY, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_InputY::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.InputX
// 0x0001 (0x0001 - 0x0000)
struct CarePackageItemSlotWidget_C_InputX final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_InputX) == 0x000001, "Wrong alignment on CarePackageItemSlotWidget_C_InputX");
static_assert(sizeof(CarePackageItemSlotWidget_C_InputX) == 0x000001, "Wrong size on CarePackageItemSlotWidget_C_InputX");
static_assert(offsetof(CarePackageItemSlotWidget_C_InputX, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_InputX::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.InputB
// 0x0001 (0x0001 - 0x0000)
struct CarePackageItemSlotWidget_C_InputB final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_InputB) == 0x000001, "Wrong alignment on CarePackageItemSlotWidget_C_InputB");
static_assert(sizeof(CarePackageItemSlotWidget_C_InputB) == 0x000001, "Wrong size on CarePackageItemSlotWidget_C_InputB");
static_assert(offsetof(CarePackageItemSlotWidget_C_InputB, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_InputB::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.InputA
// 0x0001 (0x0001 - 0x0000)
struct CarePackageItemSlotWidget_C_InputA final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_InputA) == 0x000001, "Wrong alignment on CarePackageItemSlotWidget_C_InputA");
static_assert(sizeof(CarePackageItemSlotWidget_C_InputA) == 0x000001, "Wrong size on CarePackageItemSlotWidget_C_InputA");
static_assert(offsetof(CarePackageItemSlotWidget_C_InputA, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_InputA::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.InputRT
// 0x0001 (0x0001 - 0x0000)
struct CarePackageItemSlotWidget_C_InputRT final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_InputRT) == 0x000001, "Wrong alignment on CarePackageItemSlotWidget_C_InputRT");
static_assert(sizeof(CarePackageItemSlotWidget_C_InputRT) == 0x000001, "Wrong size on CarePackageItemSlotWidget_C_InputRT");
static_assert(offsetof(CarePackageItemSlotWidget_C_InputRT, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_InputRT::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.InputRB
// 0x0001 (0x0001 - 0x0000)
struct CarePackageItemSlotWidget_C_InputRB final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_InputRB) == 0x000001, "Wrong alignment on CarePackageItemSlotWidget_C_InputRB");
static_assert(sizeof(CarePackageItemSlotWidget_C_InputRB) == 0x000001, "Wrong size on CarePackageItemSlotWidget_C_InputRB");
static_assert(offsetof(CarePackageItemSlotWidget_C_InputRB, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_InputRB::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.InputLT
// 0x0001 (0x0001 - 0x0000)
struct CarePackageItemSlotWidget_C_InputLT final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_InputLT) == 0x000001, "Wrong alignment on CarePackageItemSlotWidget_C_InputLT");
static_assert(sizeof(CarePackageItemSlotWidget_C_InputLT) == 0x000001, "Wrong size on CarePackageItemSlotWidget_C_InputLT");
static_assert(offsetof(CarePackageItemSlotWidget_C_InputLT, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_InputLT::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.InputLB
// 0x0001 (0x0001 - 0x0000)
struct CarePackageItemSlotWidget_C_InputLB final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_InputLB) == 0x000001, "Wrong alignment on CarePackageItemSlotWidget_C_InputLB");
static_assert(sizeof(CarePackageItemSlotWidget_C_InputLB) == 0x000001, "Wrong size on CarePackageItemSlotWidget_C_InputLB");
static_assert(offsetof(CarePackageItemSlotWidget_C_InputLB, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_InputLB::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.IsFocus
// 0x0001 (0x0001 - 0x0000)
struct CarePackageItemSlotWidget_C_IsFocus final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_IsFocus) == 0x000001, "Wrong alignment on CarePackageItemSlotWidget_C_IsFocus");
static_assert(sizeof(CarePackageItemSlotWidget_C_IsFocus) == 0x000001, "Wrong size on CarePackageItemSlotWidget_C_IsFocus");
static_assert(offsetof(CarePackageItemSlotWidget_C_IsFocus, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_IsFocus::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.GetUpWidget
// 0x0008 (0x0008 - 0x0000)
struct CarePackageItemSlotWidget_C_GetUpWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_GetUpWidget) == 0x000008, "Wrong alignment on CarePackageItemSlotWidget_C_GetUpWidget");
static_assert(sizeof(CarePackageItemSlotWidget_C_GetUpWidget) == 0x000008, "Wrong size on CarePackageItemSlotWidget_C_GetUpWidget");
static_assert(offsetof(CarePackageItemSlotWidget_C_GetUpWidget, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_GetUpWidget::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.GetRightWidget
// 0x0008 (0x0008 - 0x0000)
struct CarePackageItemSlotWidget_C_GetRightWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_GetRightWidget) == 0x000008, "Wrong alignment on CarePackageItemSlotWidget_C_GetRightWidget");
static_assert(sizeof(CarePackageItemSlotWidget_C_GetRightWidget) == 0x000008, "Wrong size on CarePackageItemSlotWidget_C_GetRightWidget");
static_assert(offsetof(CarePackageItemSlotWidget_C_GetRightWidget, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_GetRightWidget::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.GetLeftWidget
// 0x0008 (0x0008 - 0x0000)
struct CarePackageItemSlotWidget_C_GetLeftWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_GetLeftWidget) == 0x000008, "Wrong alignment on CarePackageItemSlotWidget_C_GetLeftWidget");
static_assert(sizeof(CarePackageItemSlotWidget_C_GetLeftWidget) == 0x000008, "Wrong size on CarePackageItemSlotWidget_C_GetLeftWidget");
static_assert(offsetof(CarePackageItemSlotWidget_C_GetLeftWidget, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_GetLeftWidget::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.GetDownWidget
// 0x0008 (0x0008 - 0x0000)
struct CarePackageItemSlotWidget_C_GetDownWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_GetDownWidget) == 0x000008, "Wrong alignment on CarePackageItemSlotWidget_C_GetDownWidget");
static_assert(sizeof(CarePackageItemSlotWidget_C_GetDownWidget) == 0x000008, "Wrong size on CarePackageItemSlotWidget_C_GetDownWidget");
static_assert(offsetof(CarePackageItemSlotWidget_C_GetDownWidget, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_GetDownWidget::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.GetFocusingChildWidget
// 0x0008 (0x0008 - 0x0000)
struct CarePackageItemSlotWidget_C_GetFocusingChildWidget final
{
public:
	class UUserWidget*                            ReturnValue;                                       // 0x0000(0x0008)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_GetFocusingChildWidget) == 0x000008, "Wrong alignment on CarePackageItemSlotWidget_C_GetFocusingChildWidget");
static_assert(sizeof(CarePackageItemSlotWidget_C_GetFocusingChildWidget) == 0x000008, "Wrong size on CarePackageItemSlotWidget_C_GetFocusingChildWidget");
static_assert(offsetof(CarePackageItemSlotWidget_C_GetFocusingChildWidget, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_GetFocusingChildWidget::ReturnValue' has a wrong offset!");

// Function CarePackageItemSlotWidget.CarePackageItemSlotWidget_C.IsFocusable
// 0x0001 (0x0001 - 0x0000)
struct CarePackageItemSlotWidget_C_IsFocusable final
{
public:
	bool                                          ReturnValue;                                       // 0x0000(0x0001)(Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)
};
static_assert(alignof(CarePackageItemSlotWidget_C_IsFocusable) == 0x000001, "Wrong alignment on CarePackageItemSlotWidget_C_IsFocusable");
static_assert(sizeof(CarePackageItemSlotWidget_C_IsFocusable) == 0x000001, "Wrong size on CarePackageItemSlotWidget_C_IsFocusable");
static_assert(offsetof(CarePackageItemSlotWidget_C_IsFocusable, ReturnValue) == 0x000000, "Member 'CarePackageItemSlotWidget_C_IsFocusable::ReturnValue' has a wrong offset!");

}

