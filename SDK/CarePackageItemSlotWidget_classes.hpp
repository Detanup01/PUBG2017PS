#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: CarePackageItemSlotWidget

#include "Basic.hpp"

#include "SlotBaseWidget_classes.hpp"


namespace SDK
{

// WidgetBlueprintGeneratedClass CarePackageItemSlotWidget.CarePackageItemSlotWidget_C
// 0x0028 (0x0278 - 0x0250)
class UCarePackageItemSlotWidget_C final : public USlotBaseWidget_C
{
public:
	class UImage*                                 DurabilityGauge;                                   // 0x0250(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class USizeBox*                               IconSizeBox;                                       // 0x0258(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             SlotName;                                          // 0x0260(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UTextBlock*                             StackCountText;                                    // 0x0268(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)
	class UImage*                                 UseInfo_bg;                                        // 0x0270(0x0008)(BlueprintVisible, ZeroConstructor, Transient, IsPlainOldData, RepSkip, NoDestructor)

public:
	void SetItemName(const class FText& ItemName);
	void SetItemIcon(class UTexture* ItemIcon);
	void SetItemCount(int32 ItemCount);
	void GetSlotContainer(TScriptInterface<class ISlotContainerInterface>* SlotContainer);
	void GetSlotItem(TScriptInterface<class ISlotInterface>* SlotItem);
	bool Up();
	bool SetFocus(bool NewFocus);
	bool Right();
	bool Left();
	bool Down();
	bool InputY();
	bool InputX();
	bool InputB();
	bool InputA();
	bool InputRT();
	bool InputRB();
	bool InputLT();
	bool InputLB();

	bool IsFocus() const;
	class UUserWidget* GetUpWidget() const;
	class UUserWidget* GetRightWidget() const;
	class UUserWidget* GetLeftWidget() const;
	class UUserWidget* GetDownWidget() const;
	class UUserWidget* GetFocusingChildWidget() const;
	bool IsFocusable() const;

public:
	static class UClass* StaticClass()
	{
		return StaticBPGeneratedClassImpl<"CarePackageItemSlotWidget_C">();
	}
	static class UCarePackageItemSlotWidget_C* GetDefaultObj()
	{
		return GetDefaultObjImpl<UCarePackageItemSlotWidget_C>();
	}
};
static_assert(alignof(UCarePackageItemSlotWidget_C) == 0x000008, "Wrong alignment on UCarePackageItemSlotWidget_C");
static_assert(sizeof(UCarePackageItemSlotWidget_C) == 0x000278, "Wrong size on UCarePackageItemSlotWidget_C");
static_assert(offsetof(UCarePackageItemSlotWidget_C, DurabilityGauge) == 0x000250, "Member 'UCarePackageItemSlotWidget_C::DurabilityGauge' has a wrong offset!");
static_assert(offsetof(UCarePackageItemSlotWidget_C, IconSizeBox) == 0x000258, "Member 'UCarePackageItemSlotWidget_C::IconSizeBox' has a wrong offset!");
static_assert(offsetof(UCarePackageItemSlotWidget_C, SlotName) == 0x000260, "Member 'UCarePackageItemSlotWidget_C::SlotName' has a wrong offset!");
static_assert(offsetof(UCarePackageItemSlotWidget_C, StackCountText) == 0x000268, "Member 'UCarePackageItemSlotWidget_C::StackCountText' has a wrong offset!");
static_assert(offsetof(UCarePackageItemSlotWidget_C, UseInfo_bg) == 0x000270, "Member 'UCarePackageItemSlotWidget_C::UseInfo_bg' has a wrong offset!");

}

