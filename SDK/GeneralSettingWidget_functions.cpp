#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: GeneralSettingWidget

#include "Basic.hpp"

#include "GeneralSettingWidget_classes.hpp"
#include "GeneralSettingWidget_parameters.hpp"


namespace SDK
{

// Function GeneralSettingWidget.GeneralSettingWidget_C.ExecuteUbergraph_GeneralSettingWidget
// ()
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGeneralSettingWidget_C::ExecuteUbergraph_GeneralSettingWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneralSettingWidget_C", "ExecuteUbergraph_GeneralSettingWidget");

	Params::GeneralSettingWidget_C_ExecuteUbergraph_GeneralSettingWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GeneralSettingWidget.GeneralSettingWidget_C.OnReset
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UGeneralSettingWidget_C::OnReset()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneralSettingWidget_C", "OnReset");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GeneralSettingWidget.GeneralSettingWidget_C.OnDefault
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UGeneralSettingWidget_C::OnDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneralSettingWidget_C", "OnDefault");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GeneralSettingWidget.GeneralSettingWidget_C.OnApply
// (Event, Public, BlueprintCallable, BlueprintEvent)

void UGeneralSettingWidget_C::OnApply()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneralSettingWidget_C", "OnApply");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GeneralSettingWidget.GeneralSettingWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UGeneralSettingWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneralSettingWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GeneralSettingWidget.GeneralSettingWidget_C.InitializeResolutionIWidget
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// bool                                    bConstruct                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGeneralSettingWidget_C::InitializeResolutionIWidget(bool bConstruct)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneralSettingWidget_C", "InitializeResolutionIWidget");

	Params::GeneralSettingWidget_C_InitializeResolutionIWidget Parms{};

	Parms.bConstruct = bConstruct;

	UObject::ProcessEvent(Func, &Parms);
}


// Function GeneralSettingWidget.GeneralSettingWidget_C.GetResolutionEnabled
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UGeneralSettingWidget_C::GetResolutionEnabled()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneralSettingWidget_C", "GetResolutionEnabled");

	Params::GeneralSettingWidget_C_GetResolutionEnabled Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GeneralSettingWidget.GeneralSettingWidget_C.SettingDefault
// (Public, BlueprintCallable, BlueprintEvent)

void UGeneralSettingWidget_C::SettingDefault()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneralSettingWidget_C", "SettingDefault");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GeneralSettingWidget.GeneralSettingWidget_C.ApplyMiniMapType
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)

void UGeneralSettingWidget_C::ApplyMiniMapType()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneralSettingWidget_C", "ApplyMiniMapType");

	UObject::ProcessEvent(Func, nullptr);
}


// Function GeneralSettingWidget.GeneralSettingWidget_C.IsEnable_VideoCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UGeneralSettingWidget_C::IsEnable_VideoCapture()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneralSettingWidget_C", "IsEnable_VideoCapture");

	Params::GeneralSettingWidget_C_IsEnable_VideoCapture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GeneralSettingWidget.GeneralSettingWidget_C.GetLanguageCultureName
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// class FString                           CultureName                                            (Parm, OutParm, ZeroConstructor)

void UGeneralSettingWidget_C::GetLanguageCultureName(class FString* CultureName) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneralSettingWidget_C", "GetLanguageCultureName");

	Params::GeneralSettingWidget_C_GetLanguageCultureName Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (CultureName != nullptr)
		*CultureName = std::move(Parms.CultureName);
}


// Function GeneralSettingWidget.GeneralSettingWidget_C.IsChanged
// (Event, Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    ReturnValue                                            (Parm, OutParm, ZeroConstructor, ReturnParm, IsPlainOldData, NoDestructor)

bool UGeneralSettingWidget_C::IsChanged() const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneralSettingWidget_C", "IsChanged");

	Params::GeneralSettingWidget_C_IsChanged Parms{};

	UObject::ProcessEvent(Func, &Parms);

	return Parms.ReturnValue;
}


// Function GeneralSettingWidget.GeneralSettingWidget_C.IsChangeVideoCapture
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure, Const)
// Parameters:
// bool                                    IsChange                                               (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UGeneralSettingWidget_C::IsChangeVideoCapture(bool* IsChange) const
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("GeneralSettingWidget_C", "IsChangeVideoCapture");

	Params::GeneralSettingWidget_C_IsChangeVideoCapture Parms{};

	UObject::ProcessEvent(Func, &Parms);

	if (IsChange != nullptr)
		*IsChange = Parms.IsChange;
}

}

