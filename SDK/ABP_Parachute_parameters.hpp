#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: ABP_Parachute

#include "Basic.hpp"

#include "CoreUObject_structs.hpp"
#include "Engine_structs.hpp"


namespace SDK::Params
{

// Function ABP_Parachute.ABP_Parachute_C.ExecuteUbergraph_ABP_Parachute
// 0x01F0 (0x01F0 - 0x0000)
struct ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute final
{
public:
	int32                                         EntryPoint;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x0004(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_5[0x3];                                        // 0x0005(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_BreakTransform_Location;                  // 0x0008(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_BreakTransform_Rotation;                  // 0x0014(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale;                     // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location2;                 // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_BreakTransform_Rotation2;                 // 0x0038(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale2;                    // 0x0044(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         K2Node_Event_DeltaTimeX;                           // 0x0050(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue2;                     // 0x0054(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsReleased_ReturnValue;                   // 0x0055(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_56[0x2];                                       // 0x0056(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	class UPawnMovementComponent*                 CallFunc_GetMovementComponent_ReturnValue;         // 0x0058(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class AActor*                                 CallFunc_GetOwner_ReturnValue;                     // 0x0060(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	class UParachuteVehicleMovement*              K2Node_DynamicCast_AsParachute_Vehicle_Movement;   // 0x0068(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess;                       // 0x0070(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_71[0x7];                                       // 0x0071(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class ATslCharacter*                          K2Node_DynamicCast_AsTsl_Character;                // 0x0078(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess2;                      // 0x0080(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_81[0x7];                                       // 0x0081(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	class APawn*                                  CallFunc_TryGetPawnOwner_ReturnValue;              // 0x0088(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue3;                     // 0x0090(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue4;                     // 0x0091(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_92[0x6];                                       // 0x0092(0x0006)(Fixing Size After Last Property [ Dumper-7 ])
	class AParachutePlayer_C*                     K2Node_DynamicCast_AsParachute_Player;             // 0x0098(0x0008)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          K2Node_DynamicCast_bSuccess3;                      // 0x00A0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsClientActor_ReturnValue;                // 0x00A1(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_A2[0x2];                                       // 0x00A2(0x0002)(Fixing Size After Last Property [ Dumper-7 ])
	float                                         CallFunc_GetRotationInput_ReturnValue;             // 0x00A4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_GetForwardInput_ReturnValue;              // 0x00A8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_FClamp_ReturnValue;                       // 0x00AC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_GetClientRotation_ReturnValue;            // 0x00B0(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Roll;                        // 0x00BC(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Pitch;                       // 0x00C0(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_BreakRotator_Yaw;                         // 0x00C4(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	float                                         CallFunc_Multiply_FloatFloat_ReturnValue;          // 0x00C8(0x0004)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_MakeRotator_ReturnValue;                  // 0x00CC(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue5;                     // 0x00D8(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_D9[0x7];                                       // 0x00D9(0x0007)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue;           // 0x00E0(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_GetSocketTransform_ReturnValue2;          // 0x0110(0x0030)(IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location3;                 // 0x0140(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_BreakTransform_Rotation3;                 // 0x014C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale3;                    // 0x0158(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Location4;                 // 0x0164(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FRotator                               CallFunc_BreakTransform_Rotation4;                 // 0x0170(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_BreakTransform_Scale4;                    // 0x017C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_188[0x8];                                      // 0x0188(0x0008)(Fixing Size After Last Property [ Dumper-7 ])
	struct FTransform                             CallFunc_MakeTransform_ReturnValue;                // 0x0190(0x0030)(IsPlainOldData, NoDestructor)
	struct FTransform                             CallFunc_MakeTransform_ReturnValue2;               // 0x01C0(0x0030)(IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute) == 0x000010, "Wrong alignment on ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute");
static_assert(sizeof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute) == 0x0001F0, "Wrong size on ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, EntryPoint) == 0x000000, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::EntryPoint' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_IsValid_ReturnValue) == 0x000004, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_BreakTransform_Location) == 0x000008, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_BreakTransform_Location' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_BreakTransform_Rotation) == 0x000014, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_BreakTransform_Rotation' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_BreakTransform_Scale) == 0x000020, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_BreakTransform_Scale' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_BreakTransform_Location2) == 0x00002C, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_BreakTransform_Location2' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_BreakTransform_Rotation2) == 0x000038, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_BreakTransform_Rotation2' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_BreakTransform_Scale2) == 0x000044, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_BreakTransform_Scale2' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, K2Node_Event_DeltaTimeX) == 0x000050, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::K2Node_Event_DeltaTimeX' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_IsValid_ReturnValue2) == 0x000054, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_IsValid_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_IsReleased_ReturnValue) == 0x000055, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_IsReleased_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_GetMovementComponent_ReturnValue) == 0x000058, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_GetMovementComponent_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_GetOwner_ReturnValue) == 0x000060, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_GetOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, K2Node_DynamicCast_AsParachute_Vehicle_Movement) == 0x000068, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::K2Node_DynamicCast_AsParachute_Vehicle_Movement' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, K2Node_DynamicCast_bSuccess) == 0x000070, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::K2Node_DynamicCast_bSuccess' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, K2Node_DynamicCast_AsTsl_Character) == 0x000078, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::K2Node_DynamicCast_AsTsl_Character' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, K2Node_DynamicCast_bSuccess2) == 0x000080, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::K2Node_DynamicCast_bSuccess2' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_TryGetPawnOwner_ReturnValue) == 0x000088, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_TryGetPawnOwner_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_IsValid_ReturnValue3) == 0x000090, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_IsValid_ReturnValue3' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_IsValid_ReturnValue4) == 0x000091, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_IsValid_ReturnValue4' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, K2Node_DynamicCast_AsParachute_Player) == 0x000098, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::K2Node_DynamicCast_AsParachute_Player' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, K2Node_DynamicCast_bSuccess3) == 0x0000A0, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::K2Node_DynamicCast_bSuccess3' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_IsClientActor_ReturnValue) == 0x0000A1, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_IsClientActor_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_GetRotationInput_ReturnValue) == 0x0000A4, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_GetRotationInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_GetForwardInput_ReturnValue) == 0x0000A8, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_GetForwardInput_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_FClamp_ReturnValue) == 0x0000AC, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_FClamp_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_GetClientRotation_ReturnValue) == 0x0000B0, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_GetClientRotation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_BreakRotator_Roll) == 0x0000BC, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_BreakRotator_Roll' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_BreakRotator_Pitch) == 0x0000C0, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_BreakRotator_Pitch' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_BreakRotator_Yaw) == 0x0000C4, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_BreakRotator_Yaw' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_Multiply_FloatFloat_ReturnValue) == 0x0000C8, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_Multiply_FloatFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_MakeRotator_ReturnValue) == 0x0000CC, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_MakeRotator_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_IsValid_ReturnValue5) == 0x0000D8, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_IsValid_ReturnValue5' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_GetSocketTransform_ReturnValue) == 0x0000E0, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_GetSocketTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_GetSocketTransform_ReturnValue2) == 0x000110, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_GetSocketTransform_ReturnValue2' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_BreakTransform_Location3) == 0x000140, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_BreakTransform_Location3' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_BreakTransform_Rotation3) == 0x00014C, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_BreakTransform_Rotation3' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_BreakTransform_Scale3) == 0x000158, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_BreakTransform_Scale3' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_BreakTransform_Location4) == 0x000164, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_BreakTransform_Location4' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_BreakTransform_Rotation4) == 0x000170, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_BreakTransform_Rotation4' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_BreakTransform_Scale4) == 0x00017C, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_BreakTransform_Scale4' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_MakeTransform_ReturnValue) == 0x000190, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_MakeTransform_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute, CallFunc_MakeTransform_ReturnValue2) == 0x0001C0, "Member 'ABP_Parachute_C_ExecuteUbergraph_ABP_Parachute::CallFunc_MakeTransform_ReturnValue2' has a wrong offset!");

// Function ABP_Parachute.ABP_Parachute_C.BlueprintUpdateAnimation
// 0x0004 (0x0004 - 0x0000)
struct ABP_Parachute_C_BlueprintUpdateAnimation final
{
public:
	float                                         DeltaTimeX;                                        // 0x0000(0x0004)(Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_Parachute_C_BlueprintUpdateAnimation) == 0x000004, "Wrong alignment on ABP_Parachute_C_BlueprintUpdateAnimation");
static_assert(sizeof(ABP_Parachute_C_BlueprintUpdateAnimation) == 0x000004, "Wrong size on ABP_Parachute_C_BlueprintUpdateAnimation");
static_assert(offsetof(ABP_Parachute_C_BlueprintUpdateAnimation, DeltaTimeX) == 0x000000, "Member 'ABP_Parachute_C_BlueprintUpdateAnimation::DeltaTimeX' has a wrong offset!");

// Function ABP_Parachute.ABP_Parachute_C.CheckIfLanding
// 0x00C8 (0x00C8 - 0x0000)
struct ABP_Parachute_C_CheckIfLanding final
{
public:
	TArray<class AActor*>                         K2Node_MakeArray_Array;                            // 0x0000(0x0010)(ConstParm, ZeroConstructor, ReferenceParm)
	struct FVector                                CallFunc_K2_GetActorLocation_ReturnValue;          // 0x0010(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	bool                                          CallFunc_IsValid_ReturnValue;                      // 0x001C(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
	uint8                                         Pad_1D[0x3];                                       // 0x001D(0x0003)(Fixing Size After Last Property [ Dumper-7 ])
	struct FVector                                CallFunc_Multiply_VectorFloat_ReturnValue;         // 0x0020(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FVector                                CallFunc_Add_VectorVector_ReturnValue;             // 0x002C(0x000C)(ZeroConstructor, IsPlainOldData, NoDestructor)
	struct FHitResult                             CallFunc_LineTraceSingle_NEW_OutHit;               // 0x0038(0x0088)(IsPlainOldData, NoDestructor, ContainsInstancedReference)
	bool                                          CallFunc_LineTraceSingle_NEW_ReturnValue;          // 0x00C0(0x0001)(ZeroConstructor, IsPlainOldData, NoDestructor)
};
static_assert(alignof(ABP_Parachute_C_CheckIfLanding) == 0x000008, "Wrong alignment on ABP_Parachute_C_CheckIfLanding");
static_assert(sizeof(ABP_Parachute_C_CheckIfLanding) == 0x0000C8, "Wrong size on ABP_Parachute_C_CheckIfLanding");
static_assert(offsetof(ABP_Parachute_C_CheckIfLanding, K2Node_MakeArray_Array) == 0x000000, "Member 'ABP_Parachute_C_CheckIfLanding::K2Node_MakeArray_Array' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_CheckIfLanding, CallFunc_K2_GetActorLocation_ReturnValue) == 0x000010, "Member 'ABP_Parachute_C_CheckIfLanding::CallFunc_K2_GetActorLocation_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_CheckIfLanding, CallFunc_IsValid_ReturnValue) == 0x00001C, "Member 'ABP_Parachute_C_CheckIfLanding::CallFunc_IsValid_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_CheckIfLanding, CallFunc_Multiply_VectorFloat_ReturnValue) == 0x000020, "Member 'ABP_Parachute_C_CheckIfLanding::CallFunc_Multiply_VectorFloat_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_CheckIfLanding, CallFunc_Add_VectorVector_ReturnValue) == 0x00002C, "Member 'ABP_Parachute_C_CheckIfLanding::CallFunc_Add_VectorVector_ReturnValue' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_CheckIfLanding, CallFunc_LineTraceSingle_NEW_OutHit) == 0x000038, "Member 'ABP_Parachute_C_CheckIfLanding::CallFunc_LineTraceSingle_NEW_OutHit' has a wrong offset!");
static_assert(offsetof(ABP_Parachute_C_CheckIfLanding, CallFunc_LineTraceSingle_NEW_ReturnValue) == 0x0000C0, "Member 'ABP_Parachute_C_CheckIfLanding::CallFunc_LineTraceSingle_NEW_ReturnValue' has a wrong offset!");

}

