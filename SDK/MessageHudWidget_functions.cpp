#pragma once

/*
* SDK generated by Dumper-7
*
* https://github.com/Encryqed/Dumper-7
*/

// Package: MessageHudWidget

#include "Basic.hpp"

#include "MessageHudWidget_classes.hpp"
#include "MessageHudWidget_parameters.hpp"


namespace SDK
{

// Function MessageHudWidget.MessageHudWidget_C.ExecuteUbergraph_MessageHudWidget
// ()
// Parameters:
// int32                                   EntryPoint                                             (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMessageHudWidget_C::ExecuteUbergraph_MessageHudWidget(int32 EntryPoint)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MessageHudWidget_C", "ExecuteUbergraph_MessageHudWidget");

	Params::MessageHudWidget_C_ExecuteUbergraph_MessageHudWidget Parms{};

	Parms.EntryPoint = EntryPoint;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MessageHudWidget.MessageHudWidget_C.Construct
// (BlueprintCosmetic, Event, Public, BlueprintEvent)

void UMessageHudWidget_C::Construct()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MessageHudWidget_C", "Construct");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MessageHudWidget.MessageHudWidget_C.InitializeMessageHUD
// (Public, BlueprintCallable, BlueprintEvent)

void UMessageHudWidget_C::InitializeMessageHUD()
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MessageHudWidget_C", "InitializeMessageHUD");

	UObject::ProcessEvent(Func, nullptr);
}


// Function MessageHudWidget.MessageHudWidget_C.OnDisplaySystemMessage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESystemMessageType                      MessageType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             Message                                                (Parm)

void UMessageHudWidget_C::OnDisplaySystemMessage(ESystemMessageType MessageType, const class FText& Message)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MessageHudWidget_C", "OnDisplaySystemMessage");

	Params::MessageHudWidget_C_OnDisplaySystemMessage Parms{};

	Parms.MessageType = MessageType;
	Parms.Message = std::move(Message);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MessageHudWidget.MessageHudWidget_C.OnDisplayKilledMessage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// struct FDeathMessage                    DeathMessage                                           (Parm)

void UMessageHudWidget_C::OnDisplayKilledMessage(const struct FDeathMessage& DeathMessage)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MessageHudWidget_C", "OnDisplayKilledMessage");

	Params::MessageHudWidget_C_OnDisplayKilledMessage Parms{};

	Parms.DeathMessage = std::move(DeathMessage);

	UObject::ProcessEvent(Func, &Parms);
}


// Function MessageHudWidget.MessageHudWidget_C.CreateSystemMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (Parm)
// ETextJustify                            TextAlignment                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FSlateColor                      TextColor                                              (Parm)
// int32                                   TextSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bUseFade_In                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAkAudioEvent*                    Sound                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UNewSystemMessageWidget_C*        MessageWidget                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMessageHudWidget_C::CreateSystemMessage(const class FText& Message, ETextJustify TextAlignment, const struct FSlateColor& TextColor, int32 TextSize, float Duration, bool bUseFade_In, class UAkAudioEvent* Sound, class UNewSystemMessageWidget_C** MessageWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MessageHudWidget_C", "CreateSystemMessage");

	Params::MessageHudWidget_C_CreateSystemMessage Parms{};

	Parms.Message = std::move(Message);
	Parms.TextAlignment = TextAlignment;
	Parms.TextColor = std::move(TextColor);
	Parms.TextSize = TextSize;
	Parms.Duration = Duration;
	Parms.bUseFade_In = bUseFade_In;
	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);

	if (MessageWidget != nullptr)
		*MessageWidget = Parms.MessageWidget;
}


// Function MessageHudWidget.MessageHudWidget_C.CreateKillMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent, BlueprintPure)
// Parameters:
// struct FDeathMessage                    DeathMessage                                           (Parm)
// ETextJustify                            TextAlignment                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// struct FSlateColor                      TextColor                                              (Parm)
// int32                                   TextSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bUseFade_In                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UNewSystemMessageWidget_C*        MessageWidget                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMessageHudWidget_C::CreateKillMessage(const struct FDeathMessage& DeathMessage, ETextJustify TextAlignment, const struct FSlateColor& TextColor, int32 TextSize, float Duration, bool bUseFade_In, class UNewSystemMessageWidget_C** MessageWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MessageHudWidget_C", "CreateKillMessage");

	Params::MessageHudWidget_C_CreateKillMessage Parms{};

	Parms.DeathMessage = std::move(DeathMessage);
	Parms.TextAlignment = TextAlignment;
	Parms.TextColor = std::move(TextColor);
	Parms.TextSize = TextSize;
	Parms.Duration = Duration;
	Parms.bUseFade_In = bUseFade_In;

	UObject::ProcessEvent(Func, &Parms);

	if (MessageWidget != nullptr)
		*MessageWidget = Parms.MessageWidget;
}


// Function MessageHudWidget.MessageHudWidget_C.OnDisplayMessage
// (Public, HasDefaults, BlueprintCallable, BlueprintEvent)
// Parameters:
// ESystemMessageType                      MessageType                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class FText                             Message                                                (Parm)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAkAudioEvent*                    Sound                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMessageHudWidget_C::OnDisplayMessage(ESystemMessageType MessageType, const class FText& Message, float Duration, class UAkAudioEvent* Sound)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MessageHudWidget_C", "OnDisplayMessage");

	Params::MessageHudWidget_C_OnDisplayMessage Parms{};

	Parms.MessageType = MessageType;
	Parms.Message = std::move(Message);
	Parms.Duration = Duration;
	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);
}


// Function MessageHudWidget.MessageHudWidget_C.CreateGamePlayMessage
// (Public, HasOutParams, BlueprintCallable, BlueprintEvent)
// Parameters:
// class FText                             Message                                                (Parm)
// ETextJustify                            TextAlignment                                          (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// int32                                   TextSize                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// float                                   Duration                                               (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// bool                                    bUseFade_In                                            (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UAkAudioEvent*                    Sound                                                  (Parm, ZeroConstructor, IsPlainOldData, NoDestructor)
// class UNewSystemMessageWidget_C*        MessageWidget                                          (Parm, OutParm, ZeroConstructor, IsPlainOldData, NoDestructor)

void UMessageHudWidget_C::CreateGamePlayMessage(const class FText& Message, ETextJustify TextAlignment, int32 TextSize, float Duration, bool bUseFade_In, class UAkAudioEvent* Sound, class UNewSystemMessageWidget_C** MessageWidget)
{
	static class UFunction* Func = nullptr;

	if (Func == nullptr)
		Func = Class->GetFunction("MessageHudWidget_C", "CreateGamePlayMessage");

	Params::MessageHudWidget_C_CreateGamePlayMessage Parms{};

	Parms.Message = std::move(Message);
	Parms.TextAlignment = TextAlignment;
	Parms.TextSize = TextSize;
	Parms.Duration = Duration;
	Parms.bUseFade_In = bUseFade_In;
	Parms.Sound = Sound;

	UObject::ProcessEvent(Func, &Parms);

	if (MessageWidget != nullptr)
		*MessageWidget = Parms.MessageWidget;
}

}

